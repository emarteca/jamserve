!function(e){var t={};function r(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(i,s,function(t){return e[t]}.bind(null,s));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=41)}([function(e,t,r){"use strict";var i;Object.defineProperty(t,"__esModule",{value:!0}),function(e){e[e.root=0]="root",e[e.user=1]="user",e[e.folder=2]="folder",e[e.track=3]="track",e[e.state=4]="state",e[e.playlist=5]="playlist",e[e.podcast=6]="podcast",e[e.episode=7]="episode",e[e.bookmark=8]="bookmark",e[e.album=9]="album",e[e.artist=10]="artist",e[e.playqueue=11]="playqueue",e[e.radio=12]="radio"}(t.DBObjectType||(t.DBObjectType={})),function(e){e.root="root",e.user="user",e.folder="folder",e.track="track",e.state="state",e.playlist="playlist",e.podcast="podcast",e.episode="episode",e.bookmark="bookmark",e.album="album",e.artist="artist",e.playqueue="playqueue",e.radio="radio"}(t.JamObjectType||(t.JamObjectType={})),t.AudioMimeTypes={mp3:"audio/mpeg",m4a:"audio/mp4",ogg:"audio/ogg",oga:"audio/ogg",webma:"audio/webm",webm:"audio/webm",wav:"audio/wav"},t.VideoMimeTypes={mp4:"audio/mp4",m4v:"audio/mp4",ogv:"audio/ogg",webmv:"audio/webm",webm:"audio/webm"},function(e){e.unknown="unknown",e.artist="artist",e.multiartist="multiartist",e.album="album",e.multialbum="multialbum",e.extras="extras"}(i=t.FolderType||(t.FolderType={})),function(e){e.new="new",e.downloading="downloading",e.completed="completed",e.error="error",e.deleted="deleted"}(t.PodcastStatus||(t.PodcastStatus={})),t.FolderTypeImageName={unknown:"folder",artist:"artist",multiartist:"folder",album:"cover",multialbum:"cover",extras:"folder"},t.FolderTypesAlbum=[i.album,i.multialbum],function(e){e[e.ascending=0]="ascending",e[e.descending=1]="descending"}(t.DatabaseQuerySortType||(t.DatabaseQuerySortType={})),function(e){e.unknown="unknown",e.album="album",e.compilation="compilation",e.audiobook="audiobook"}(t.AlbumType||(t.AlbumType={})),function(e){e.UNKNOWN="unknown",e.AUDIO="audio",e.IMAGE="image",e.TAG="tag",e.BACKUP="backup",e.OTHER="other"}(t.FileTyp||(t.FileTyp={}))},function(e,t){e.exports=require("path")},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(44));r(45)(s.default),t.configureLogger=function(e){s.default.configure({level:e,transports:[new s.default.transports.Console({format:s.default.format.combine(s.default.format.colorize(),s.default.format.simple())})]})};class n{constructor(e){this.name=e}applyLog(e,t,...r){const i=(new Date).toISOString()+" "+this.name+": "+[t].concat(r).join(" ");s.default.log(e,i)}debug(e,...t){this.applyLog("debug",e,t)}info(e,...t){this.applyLog("info",e,t)}warn(e,...t){this.applyLog("warn",e,t)}error(e,...t){this.applyLog("error",e.toString(),t)}time(e){s.default.start_log(e,"debug")}timeEnd(e){s.default.stop_log(e,"debug")}}t.default=function(e){return new n(e)}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(1)),a=s(r(6));t.fileDeleteIfExists=function(e){return i(this,void 0,void 0,function*(){(yield a.default.pathExists(e))&&(yield a.default.unlink(e))})},t.pathDeleteIfExists=function(e){return i(this,void 0,void 0,function*(){(yield a.default.pathExists(e))&&(yield a.default.remove(e))})},t.fileSuffix=function(e){return n.default.extname(e).slice(1).toLowerCase()},t.replaceFileSystemChars=function(e,t){return e.toString().replace(/:/g," - ").replace(/  /g," ").replace(/[\?\/!\\]/g,t)},t.cleanFolderSystemChars=function(e,t){return e.toString().replace(/:/g," - ").replace(/  /g," ").replace(/[\.\*\?\/!\\]/g,t)},t.ensureTrailingPathSeparator=function(e){return e.length>0&&e[e.length-1]!==n.default.sep?e+n.default.sep:e}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});class i extends Error{constructor(e,t){super(e),this.name=this.constructor.name,Error.captureStackTrace(this,this.constructor),this.failCode=t||500}}t.InvalidParamError=function(e){return new i(e||"Invalid/Missing parameter",400)},t.NotFoundError=function(e){return new i(e||"Item not found",404)},t.UnauthError=function(e){return new i(e||"Unauthorized",401)},t.GenericError=function(e){return new i(e||"Guru Meditation",500)}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0);t.BaseStore=class{constructor(e,t){this.group=t.getDBIndex(e),this.type=e}getNewId(){return i(this,void 0,void 0,function*(){return yield this.group.getNewId()})}add(e){return i(this,void 0,void 0,function*(){return yield this.group.add(e)})}bulk(e){return i(this,void 0,void 0,function*(){return yield this.group.bulk(e)})}replace(e){return i(this,void 0,void 0,function*(){return yield this.group.replace(e.id,e)})}remove(e){return i(this,void 0,void 0,function*(){return yield this.group.remove(e)})}replaceMany(e){return i(this,void 0,void 0,function*(){for(const t of e)yield this.group.replace(t.id,t)})}byId(e){return i(this,void 0,void 0,function*(){return yield this.group.byId(e)})}byIds(e){return i(this,void 0,void 0,function*(){return yield this.group.byIds(e)})}random(){return i(this,void 0,void 0,function*(){return yield this.group.queryOne({all:!0})})}all(){return i(this,void 0,void 0,function*(){return yield this.group.query({all:!0})})}allIds(){return i(this,void 0,void 0,function*(){return yield this.group.queryIds({all:!0})})}count(){return i(this,void 0,void 0,function*(){return yield this.group.count({all:!0})})}iterate(e){return i(this,void 0,void 0,function*(){yield this.group.iterate({all:!0},e)})}upsert(e){return i(this,void 0,void 0,function*(){for(const t of e)yield this.group.upsert(t.id,t)})}removeByQuery(e){return i(this,void 0,void 0,function*(){return yield this.group.removeByQuery(this.transformQuery(e))})}searchIDs(e){return i(this,void 0,void 0,function*(){return yield this.group.queryIds(this.transformQuery(e))})}search(e){return i(this,void 0,void 0,function*(){return yield this.group.query(this.transformQuery(e))})}searchOne(e){return i(this,void 0,void 0,function*(){return yield this.group.queryOne(this.transformQuery(e))})}searchCount(e){return i(this,void 0,void 0,function*(){return yield this.group.count(this.transformQuery(e))})}};t.QueryHelper=class{constructor(){this.q={}}term(e,t){null!=t&&(this.q.term=this.q.term||{},this.q.term[e]=t)}match(e,t){null!=t&&(this.q.match=this.q.match||{},this.q.match[e]=t)}startsWith(e,t){null!=t&&(this.q.startsWith=this.q.startsWith||{},this.q.startsWith[e]=t)}startsWiths(e,t){null!=t&&(this.q.startsWiths=this.q.startsWiths||{},this.q.startsWiths[e]=t)}terms(e,t){null!=t&&(this.q.terms=this.q.terms||{},this.q.terms[e]=t)}bool(e,t){null!=t&&(this.q.term=this.q.term||{},this.q.term[e]=t)}notNull(e,t){null!=t&&(this.q.notNull=this.q.notNull||[],this.q.notNull.push(e))}range(e,t,r){void 0===t&&void 0===r||(this.q.range=this.q.range||{},this.q.range[e]={gte:r,lte:t})}get(e,t){if(this.terms("id",e.ids),this.term("id",e.id),0===Object.keys(this.q).length&&(this.q.all=!0),e.sorts){const r={};e.sorts.forEach(e=>{const i=t?t[e.field]:e.field;i&&(r[i]=e.descending?s.DatabaseQuerySortType.descending:s.DatabaseQuerySortType.ascending)}),this.q.sort=r}return void 0!==e.amount&&e.amount>0&&(this.q.amount=e.amount),void 0!==e.offset&&e.offset>0&&(this.q.offset=e.offset),this.q}}},function(e,t){e.exports=require("fs-extra")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.BaseStoreService=class{constructor(e){this.store=e}}},function(e,t,r){"use strict";function i(e){return{played:e&&e.played>0?e.played:void 0,lastplayed:e&&e.lastplayed>0?e.lastplayed:void 0,faved:e?e.faved:void 0,rated:e&&void 0!==e.rated&&e.rated>0?e.rated:void 0}}Object.defineProperty(t,"__esModule",{value:!0}),t.formatState=i,t.formatStates=function(e){const t={};return Object.keys(e).forEach(r=>{t[r]=i(e[r])}),t}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(32));function n(e){for(let t=e.length-1;t>0;t--){const r=Math.floor(Math.random()*(t+1));[e[t],e[r]]=[e[r],e[t]]}return e}function a(e,t){return Math.floor(Math.random()*(t-e+1))+e}t.shuffle=n,t.randomInt=a,t.randomItem=function(e){return e[a(0,e.length-1)]},t.randomItems=function(e,t){if(void 0===t||t<0||e.length<=t)return n(e);const r=[],i=[];for(;r.length<t;){const t=a(0,e.length-1);i.indexOf(t)<0&&(r.push(e[t]),i.push(t))}return r},t.randomString=function(e){return s.default.randomBytes(Math.ceil(e/2)).toString("hex").slice(0,e)}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(7);t.BaseListService=class extends s.BaseStoreService{constructor(e,t){super(e),this.stateService=t}getFilteredIDs(e,t){return i(this,void 0,void 0,function*(){return(yield this.store.searchIDs(Object.assign(t,{ids:e,amount:-1,offset:0}))).sort((t,r)=>e.indexOf(t)-e.indexOf(r))})}getAvgHighestIDs(e){return i(this,void 0,void 0,function*(){const t=yield this.stateService.getAvgHighestDestIDs(this.store.type);return yield this.getFilteredIDs(t,e)})}getHighestRatedIDs(e,t){return i(this,void 0,void 0,function*(){const r=yield this.stateService.getHighestRatedDestIDs(this.store.type,t.id);return yield this.getFilteredIDs(r,e)})}getFrequentlyPlayedIDs(e,t){return i(this,void 0,void 0,function*(){const r=yield this.stateService.getFrequentlyPlayedDestIDs(this.store.type,t.id);return yield this.getFilteredIDs(r,e)})}getFavedIDs(e,t){return i(this,void 0,void 0,function*(){const r=yield this.stateService.getFavedDestIDs(this.store.type,t.id);return yield this.getFilteredIDs(r,e)})}getRecentlyPlayedIDs(e,t){return i(this,void 0,void 0,function*(){const r=yield this.stateService.getRecentlyPlayedDestIDs(this.store.type,t.id);return yield this.getFilteredIDs(r,e)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(4),n=r(9),a=r(12),o=r(14);t.BaseListController=class extends o.BaseController{constructor(e,t,r,i){super(e,t,r,i),this.listService=e,this.stateService=t,this.imageService=r,this.downloadService=i}getList(e,t,r,o){return i(this,void 0,void 0,function*(){const i=this.translateQuery(t,o);let d=[];switch(e.list){case"random":d=yield this.listService.store.searchIDs(Object.assign(i,{amount:-1,offset:0})),d=n.randomItems(d,e.amount||20);break;case"highest":d=yield this.listService.getHighestRatedIDs(i,o),d=a.paginate(d,e.amount,e.offset);break;case"avghighest":d=yield this.listService.getAvgHighestIDs(i),d=a.paginate(d,e.amount,e.offset);break;case"frequent":d=yield this.listService.getFrequentlyPlayedIDs(i,o),d=a.paginate(d,e.amount,e.offset);break;case"faved":d=yield this.listService.getFavedIDs(i,o),d=a.paginate(d,e.amount,e.offset);break;case"recent":d=yield this.listService.getRecentlyPlayedIDs(i,o),d=a.paginate(d,e.amount,e.offset);break;default:return Promise.reject(s.InvalidParamError("Unknown List Type"))}return this.prepareListByIDs(d,r,o)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.paginate=function(e,t,r){return void 0!==t&&t<0?e:e.slice(r||0,(r||0)+(t||20))}},function(e,t){e.exports=require("moment")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(4),n=r(8);t.BaseController=class{constructor(e,t,r,i){this.service=e,this.stateService=t,this.imageService=r,this.downloadService=i}byID(e){return i(this,void 0,void 0,function*(){if(!e)return Promise.reject(s.InvalidParamError());const t=yield this.service.store.byId(e);return t||Promise.reject(s.NotFoundError())})}byIDs(e){return i(this,void 0,void 0,function*(){return e?yield this.service.store.byIds(e):Promise.reject(s.InvalidParamError())})}prepareList(e,t,r){return i(this,void 0,void 0,function*(){const i=[];for(const s of e){const e=yield this.prepare(s,t,r);i.push(e)}return i})}prepareListByIDs(e,t,r){return i(this,void 0,void 0,function*(){const i=yield this.service.store.byIds(e);return(yield this.prepareList(i,t,r)).sort((t,r)=>e.indexOf(t.id)-e.indexOf(r.id))})}prepareByID(e,t,r){return i(this,void 0,void 0,function*(){const i=yield this.byID(e);return yield this.prepare(i,t,r)})}prepareByQuery(e,t,r){return i(this,void 0,void 0,function*(){const i=yield this.service.store.search(e);return this.prepareList(this.defaultSort(i),t,r)})}id(e){return i(this,void 0,void 0,function*(){return this.prepareByID(e.query.id,e.query,e.user)})}ids(e){return i(this,void 0,void 0,function*(){const t=yield this.byIDs(e.query.ids);return this.prepareList(t,e.query,e.user)})}state(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=yield this.stateService.findOrCreate(t.id,e.user.id,this.service.store.type);return n.formatState(r)})}states(e){return i(this,void 0,void 0,function*(){const t=yield this.byIDs(e.query.ids),r=yield this.stateService.findOrCreateMany(t.map(e=>e.id),e.user.id,this.service.store.type);return n.formatStates(r)})}favUpdate(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=yield this.stateService.fav(t.id,this.service.store.type,e.user.id,!!e.query.remove&&e.query.remove);return n.formatState(r)})}rateUpdate(e){return i(this,void 0,void 0,function*(){const t=e.query.rating||0;if(t<0||t>5)return Promise.reject(s.InvalidParamError());const r=yield this.byID(e.query.id),i=yield this.stateService.rate(r.id,this.service.store.type,e.user.id,t);return n.formatState(i)})}search(e){return i(this,void 0,void 0,function*(){const t=yield this.service.store.search(this.translateQuery(e.query,e.user));return this.prepareList(t,e.query,e.user)})}image(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return yield this.imageService.getObjImage(t,e.query.size,e.query.format)})}download(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return yield this.downloadService.getObjDownload(t,e.query.format,e.user)})}}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(13)),n=i(r(1)),a=r(3),o=r(0);class d{static packFail(e,t){return{"subsonic-response":{status:"failed",xmlns:"http://subsonic.org/restapi",error:{code:e,message:t||{0:"A generic error.",10:"Required parameter is missing.",20:"Incompatible Subsonic REST protocol version. Client must upgrade.",30:"Incompatible Subsonic REST protocol version. Server must upgrade.",40:"Wrong username or password.",50:"user is not authorized for the given operation.",70:"The requested data was not found."}[e]},version:"1.16.0"}}}static packResponse(e){return{"subsonic-response":Object.assign({status:"ok",xmlns:"http://subsonic.org/restapi",version:"1.16.0"},e)}}static packOK(){return{"subsonic-response":{status:"ok",xmlns:"http://subsonic.org/restapi",version:"1.16.0"}}}static formatSubSonicDate(e){return s.default(e).utc().format()}static packRoot(e){return{id:parseInt(e.id,10),name:e.name}}static packUser(e){return{username:e.name,email:e.email,maxBitRate:e.maxBitRate,avatarLastChanged:void 0!==e.avatarLastChanged?this.formatSubSonicDate(e.avatarLastChanged):void 0,folder:e.allowedfolder?e.allowedfolder.map(e=>parseInt(e,10)):void 0,scrobblingEnabled:e.scrobblingEnabled,adminRole:e.roles.admin,settingsRole:e.roles.admin,downloadRole:e.roles.stream,uploadRole:e.roles.upload,playlistRole:e.roles.admin,coverArtRole:e.roles.admin,commentRole:e.roles.admin,podcastRole:e.roles.podcast,streamRole:e.roles.stream,jukeboxRole:e.roles.admin,shareRole:e.roles.admin,videoConversionRole:e.roles.admin}}static packFolderIndexArtist(e,t){return{id:e.folder.id,name:e.name,starred:t&&t.faved?this.formatSubSonicDate(t.faved):void 0,userRating:t?t.rated:void 0}}static packFolderIndex(e,t){return e?e.groups.map(e=>({name:e.name,artist:e.entries.map(e=>d.packFolderIndexArtist(e,t[e.folder.id]))})):[]}static packArtistIndex(e,t){return e?e.groups.map(e=>({name:e.name,artist:e.entries.map(e=>d.packArtist(e.artist,t[e.artist.id]))})):[]}static packDirectory(e,t){return{id:e.id,parent:e.parentID,name:n.default.basename(e.path),starred:t&&t.faved?this.formatSubSonicDate(t.faved):void 0}}static packFolderArtist(e,t){return{id:e.id,name:e.tag.title||e.tag.artist||"",starred:t&&t.faved?this.formatSubSonicDate(t.faved):void 0,userRating:t?t.rated:void 0}}static packAlbum(e,t){return{id:e.id,name:e.name,artist:e.artist,artistId:e.artistID,coverArt:e.id,songCount:e.trackIDs.length,duration:e.duration,year:e.year,genre:e.genre,created:d.formatSubSonicDate(e.created),starred:t&&t.faved?d.formatSubSonicDate(t.faved):void 0}}static packArtist(e,t){return{id:e.id,name:e.name,coverArt:e.id,albumCount:e.albumIDs.length,starred:t&&t.faved?this.formatSubSonicDate(t.faved):void 0}}static packAlbumInfo(e){return{notes:e.album.description,musicBrainzId:e.album.mbid,lastFmUrl:e.album.url,smallImageUrl:e.album.image&&e.album.image.small?e.album.image.small:void 0,mediumImageUrl:e.album.image&&e.album.image.medium?e.album.image.medium:void 0,largeImageUrl:e.album.image&&e.album.image.large?e.album.image.large:void 0}}static packArtistInfo(e,t){return{biography:e.artist.description,musicBrainzId:e.artist.mbid,lastFmUrl:e.artist.url,smallImageUrl:e.artist.image&&e.artist.image.small?e.artist.image.small:void 0,mediumImageUrl:e.artist.image&&e.artist.image.medium?e.artist.image.medium:void 0,largeImageUrl:e.artist.image&&e.artist.image.large?e.artist.image.large:void 0,similarArtist:t}}static packArtistInfo2(e,t){return{biography:e.artist.description,musicBrainzId:e.artist.mbid,lastFmUrl:e.artist.url,smallImageUrl:e.artist.image&&e.artist.image.small?e.artist.image.small:void 0,mediumImageUrl:e.artist.image&&e.artist.image.medium?e.artist.image.medium:void 0,largeImageUrl:e.artist.image&&e.artist.image.large?e.artist.image.large:void 0,similarArtist:t}}static packTrack(e,t){const r=a.fileSuffix(e.name),i={id:e.id,parent:e.parentID||"",title:e.tag.title||e.name,album:e.tag.album,artist:e.tag.artist,isDir:!1,coverArt:e.id,genre:e.tag.genre,year:e.tag.year,created:d.formatSubSonicDate(e.stat.created),duration:void 0===e.media.duration||isNaN(e.media.duration)?-1:Math.round(e.media.duration),bitRate:void 0!==e.media.bitRate?Math.round(e.media.bitRate/1e3):-1,track:e.tag.track,size:e.stat.size,suffix:r,contentType:o.AudioMimeTypes[r],isVideo:!1,path:e.path+"/"+e.name,discNumber:e.tag.disc,albumId:e.albumID,artistId:e.artistID,type:"music",userRating:t?t.rated:void 0,starred:t&&t.faved?this.formatSubSonicDate(t.faved):void 0,playCount:t&&t.played?t.played:0,transcodedSuffix:void 0,transcodedContentType:void 0};return"mp3"!==r&&(i.transcodedSuffix="mp3",i.transcodedContentType=o.AudioMimeTypes[i.transcodedSuffix]),i}static packNowPlaying(e,t){let r;switch(e.obj.type){case o.DBObjectType.track:r=d.packTrack(e.obj,t);break;case o.DBObjectType.episode:r=d.packPodcastEpisode(e.obj,t);break;default:r={id:e.obj.id,isDir:!1,title:"Unknown"}}const i=r;return i.username=e.user.name,i.minutesAgo=Math.round(s.default.duration(s.default().diff(s.default(e.time))).asMinutes()),i.playerId=0,i}static packFolder(e,t){return{id:e.id,path:e.path,parent:e.parentID,created:d.formatSubSonicDate(e.stat.created),title:e.tag.title||"",album:e.tag.album,genre:e.tag.genre,artist:e.tag.artist,year:e.tag.year,coverArt:e.id,userRating:t?t.rated:void 0,isDir:!0,starred:t&&t.faved?this.formatSubSonicDate(t.faved):void 0}}static packPodcast(e,t){return{id:e.id,url:e.url,errorMessage:e.errorMessage,title:e.tag?e.tag.title:void 0,status:t?o.PodcastStatus[t]:o.PodcastStatus[e.status],description:e.tag?e.tag.description:void 0,coverArt:e.id,originalImageUrl:e.tag?e.tag.image:void 0}}static packPodcastEpisode(e,t,r){const i={streamId:e.id,coverArt:e.id,channelId:e.podcastID,description:e.summary,publishDate:void 0!==e.date?this.formatSubSonicDate(e.date):void 0,title:e.name,status:r?o.PodcastStatus[r]:o.PodcastStatus[e.status],id:e.id,parent:e.podcastID,artist:e.tag?e.tag.artist:e.author,album:e.tag?e.tag.album:void 0,track:e.tag?e.tag.track:void 0,year:e.tag?e.tag.year:void 0,genre:e.tag?e.tag.genre:void 0,discNumber:e.tag?e.tag.disc:void 0,type:"podcast",playCount:t&&t.played?t.played:0,starred:t&&t.faved?this.formatSubSonicDate(t.faved):void 0,userRating:t?t.rated:void 0,isVideo:!1,isDir:!1,suffix:void 0,transcodedSuffix:void 0,transcodedContentType:void 0,path:void 0,size:void 0,created:void 0,duration:void 0,bitRate:void 0};return e.path&&(i.suffix=a.fileSuffix(e.path),"mp3"!==i.suffix&&(i.transcodedSuffix="mp3",i.transcodedContentType=o.AudioMimeTypes[i.transcodedSuffix]),i.contentType=o.AudioMimeTypes[i.suffix],e.stat&&(i.size=e.stat.size,i.created=d.formatSubSonicDate(e.stat.created)),e.media&&(i.duration=e.media.duration,i.bitRate=void 0!==e.media.bitRate?Math.round(e.media.bitRate/1e3):-1)),r&&(i.status=r),i}static packPlaylist(e){return{id:e.id,name:e.name,comment:e.comment||"",public:e.isPublic,duration:e.duration,created:d.formatSubSonicDate(e.created),changed:d.formatSubSonicDate(e.changed),coverArt:e.coverArt,allowedUser:e.allowedUser,songCount:e.trackIDs.length,owner:e.userID}}static packPlaylistWithSongs(e,t,r){const i=d.packPlaylist(e);return i.entry=t.map(e=>d.packTrack(e,r[e.id])),i}static packBookmark(e,t,r){return{entry:r,username:t,position:e.position,comment:e.comment,created:d.formatSubSonicDate(e.created),changed:d.formatSubSonicDate(e.changed)}}static packSimilarSongs(e){return{song:e}}static packSimilarSongs2(e){return{song:e}}static packPlayQueue(e,t,r){return{entry:r,current:void 0!==e.currentID?parseInt(e.currentID,10):void 0,position:e.position,username:t.name,changed:e.changed>0?d.formatSubSonicDate(e.changed):"",changedBy:e.changedBy||""}}static packRadio(e){return{id:e.id,name:e.name,streamUrl:e.url,homePageUrl:e.homepage}}static packGenre(e){return{content:e.name,songCount:e.trackCount,albumCount:e.albumCount,artistCount:e.artistCount}}static packChatMessage(e){return{username:e.username,time:e.time,message:e.message}}}d.FAIL={GENERIC:0,PARAMETER:10,CLIENT_OLD:20,SERVER_OLD:30,CREDENTIALS:40,UNAUTH:50,NOTFOUND:70},t.FORMAT=d},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(3);t.SupportedReadImageFormat=["bmp","png","jpeg","jpg","gif","tiff"],t.SupportedWriteImageFormat=["bmp","png","jpeg","jpg","tiff"],t.SupportedAudioFormat=["mp3","flac","m4a","ogg","oga","webma","wav"],t.SupportedTranscodeAudioFormat=["mp3","flv","ogg","oga","flac","mp4"],t.getFileType=function(e){const r=s.fileSuffix(e);return t.SupportedReadImageFormat.indexOf(r)>=0?i.FileTyp.IMAGE:t.SupportedAudioFormat.indexOf(r)>=0?i.FileTyp.AUDIO:["tag"].indexOf(r)>=0?i.FileTyp.TAG:["bak"].indexOf(r)>=0?i.FileTyp.BACKUP:i.FileTyp.OTHER}},function(e,t){e.exports=require("request")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.DebouncePromises=class{constructor(){this.pendingPromises={}}append(e){return new Promise((t,r)=>{this.pendingPromises[e].push((e,i)=>{e?r(e):t(i)})})}setPending(e){this.pendingPromises[e]=[]}isPending(e){return!!this.pendingPromises[e]}resolve(e,t){for(const r of this.pendingPromises[e])r(null,t);delete this.pendingPromises[e]}reject(e,t){for(const r of this.pendingPromises[e])r(t);delete this.pendingPromises[e]}}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(1)),n=r(157),a=r(15);class o{static ok(e,t){o.send(e,t,a.FORMAT.packOK())}static send(e,t,r){const i=e.parameters;"jsonp"===i.format&&i.callback?t.status(200).send(i.callback+"("+JSON.stringify(r)+");"):"json"===i.format?t.status(200).json(r):(t.set("Content-Type","application/xml"),t.status(200).send(n.toXML(r)))}static data(e,t,r){o.send(e,t,a.FORMAT.packResponse(r))}static error(e,t,r){r.fail?o.send(e,t,a.FORMAT.packFail(r.fail,r.text)):o.send(e,t,a.FORMAT.packFail(a.FORMAT.FAIL.GENERIC,("string"==typeof r?r:r.message||"Unknown Error").toString()))}static binary(e,t,r){r.pipe?r.pipe.pipe(t):r.buffer?(t.set("Content-Type",r.buffer.contentType),t.set("Content-Length",r.buffer.buffer.length.toString()),t.status(200).send(r.buffer.buffer)):r.file&&t.sendFile(r.file.filename,r.file.name||s.default.basename(r.file.filename))}}t.ApiResponder=o},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(30)),a=s(r(17));t.WebserviceClient=class{constructor(e,t,r){this.limiter=new n.default.RateLimiter(e,t),this.userAgent=r}getJson(e,t){return i(this,void 0,void 0,function*(){const r={url:e,headers:{"User-Agent":this.userAgent},qs:t,timeout:5e3},i=this.limiter;return new Promise((e,t)=>{i.removeTokens(1,()=>{a.default(r,(r,i,s)=>{if(r)t(r);else try{e(JSON.parse(s))}catch(r){t(r)}})})})})}}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(32)),n=r(9);function a(e,t){const r=s.default.createHmac("sha512",t);return r.update(e),r.digest("hex")}t.hashSalt=a,t.hashSaltPassword=function(e){const t=n.randomString(16);return{salt:t,hash:a(e,t)}}},function(e,t){e.exports=require("fs")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.JAMSERVE_VERSION="0.1.2",t.JAMAPI_VERSION="0.1.1"},function(e,t){e.exports=require("express")},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(1));t.ApiResponder=class{static ok(e){e.status(200).json({})}static data(e,t){e.status(200).json(t)}static error(e,t){const r=("string"==typeof t?t:t.message||"Guru Meditation").toString(),i="number"==typeof t.failCode?t.failCode:500;e.status(i||500).json({error:r})}static binary(e,t){t.json?e.status(200).json(t.json):t.pipe?t.pipe.pipe(e):t.buffer?(e.set("Content-Type",t.buffer.contentType),e.set("Content-Length",t.buffer.buffer.length.toString()),e.status(200).send(t.buffer.buffer)):t.file&&e.sendFile(t.file.filename,t.file.name||s.default.basename(t.file.filename))}}},function(e,t,r){"use strict";function i(e){let t={recordingID:e.mbRecordingID,releaseTrackID:e.mbReleaseTrackID,trackID:e.mbTrackID,artistID:e.mbArtistID,albumID:e.mbAlbumID};return Object.keys(t).find(e=>!!t[e])||(t=void 0),{trackNr:e.track,year:e.year,title:e.title,artist:e.artist,album:e.album,genre:e.genre,musicbrainz:t}}Object.defineProperty(t,"__esModule",{value:!0}),t.formatTrackTag=i,t.formatTrack=function(e,t){return t=t||{},{id:e.id,parentID:e.parentID,artistID:e.artistID,albumID:e.albumID,name:e.name,created:e.stat.created,duration:e.media.duration||-1,media:t.trackMedia?{bitRate:e.media.bitRate||-1,format:e.media.format||"",channels:e.media.channels||-1,sampleRate:e.media.sampleRate||-1}:void 0,tag:t.trackTag?i(e.tag):void 0}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatUser=function(e){return{id:e.id,created:e.created,name:e.name,email:e.email,roles:(t=e.roles,{stream:!!t.stream||void 0,upload:!!t.upload||void 0,admin:!!t.admin||void 0,podcast:!!t.podcast||void 0})};var t}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(2)),a=r(46),o=r(0),d=s(r(1)),c=s(r(6)),u=r(3),p=r(16),m=r(29),l=s(r(13)),y=n.default("IO");function f(e,t){t>0&&y.info(e,t)}function h(e){return Object.keys(e).map(t=>e[t]).sort((e,t)=>e.count-t.count)}function g(e,t){if(0===e.length)return;if(1===e.length)return e[0].val;const r=(e=e.sort((e,t)=>e.count-t.count)).filter(e=>e.count>1);return r.length>1&&void 0!==t?t:r.length>0?r[0].val:void 0!==t?t:e[0].val}function b(e){return!e.track||e.stat.mtime!==e.track.stat.modified||e.stat.ctime!==e.track.stat.created||e.stat.size!==e.track.stat.size}function v(e){return e.dir.folder&&e.dir.folder.tag.albumType===o.AlbumType.compilation?void 0:e.track.tag.mbAlbumArtistID||e.track.tag.mbArtistID}function q(e){return e.dir.folder&&e.dir.folder.tag.albumType===o.AlbumType.compilation?void 0:e.track.tag.artistSort}function S(e){return e.track.tag.albumArtist||e.track.tag.artist||t.cUnknownArtist}function I(e){return e.replace(/[\[\]\. -]/g,"").toLowerCase()}function k(e){return I(S(e))}function A(e){return e.dir.folder&&e.dir.folder.tag.albumType===o.AlbumType.compilation?e.dir.folder.tag.album||t.cUnknownAlbum:e.track.tag.album||t.cUnknownAlbum}function D(e){return I(A(e))}t.logChanges=function(e){const t=l.default.utc(e.end-e.start).format("HH:mm:ss");y.info("Duration:",t),f("Added Tracks",e.newTracks.length),f("Updated Tracks",e.updateTracks.length),f("Removed Tracks",e.removedTracks.length),f("Added Folders",e.newFolders.length),f("Updated Folders",e.updateFolders.length),f("Removed Folders",e.removedFolders.length),f("Added Artists",e.newArtists.length),f("Updated Artists",e.updateArtists.length),f("Removed Artists",e.removedArtists.length),f("Added Albums",e.newAlbums.length),f("Updated Albums",e.updateAlbums.length),f("Removed Albums",e.removedAlbums.length)},t.cVariousArtist="[Various Artists]",t.cUnknownArtist="[Unknown Artist]",t.cUnknownAlbum="[Unknown Album]";t.ScanService=class{constructor(e,t,r,i){this.store=e,this.audioModule=t,this.imageModule=r,this.waveformService=i,this.artistCache=[],this.albumCache=[]}getMetaStat(e){const r={artist:{},artistSort:{},album:{},genre:{},year:{},mbArtistID:{},mbAlbumID:{}},i=[];let s=0;e.files.forEach(e=>{if(e.type===o.FileTyp.AUDIO&&s++,e.track&&e.track.tag){const t=e.track.tag;if(t.artist){const e=I(t.artist);r.artist[e]=r.artist[e]||{count:0,val:t.artist},r.artist[e].count+=1}if(t.artistSort){const e=I(t.artistSort);r.artistSort[e]=r.artistSort[e]||{count:0,val:t.artistSort},r.artistSort[e].count+=1}if(t.album){const e=I(t.album);r.album[e]=r.album[e]||{count:0,val:t.album},r.album[e].count+=1}if(t.genre){const e=I(t.genre);r.genre[e]=r.genre[e]||{count:0,val:t.genre},r.genre[e].count+=1}if(void 0!==t.year){const e=t.year.toString();r.year[e]=r.year[e]||{count:0,val:t.year},r.year[e].count+=1}if(t.mbArtistID){const e=t.mbArtistID.split(" ")[0];r.mbArtistID[e]=r.mbArtistID[e]||{count:0,val:e},r.mbArtistID[e].count+=1}if(t.mbAlbumID){const e=t.mbAlbumID.split(" ")[0];r.mbAlbumID[e]=r.mbAlbumID[e]||{count:0,val:e},r.mbAlbumID[e].count+=1}}else e.type===o.FileTyp.IMAGE&&i.push(e.name)}),e.directories.forEach(e=>{if(e.folder&&e.tag){const t=e.tag;if(t.artist){const e=I(t.artist);r.artist[e]=r.artist[e]||{count:0,val:t.artist},r.artist[e].count+=1}if(t.artistSort){const e=I(t.artistSort);r.artistSort[e]=r.artistSort[e]||{count:0,val:t.artistSort},r.artistSort[e].count+=1}if(t.album){const e=I(t.album);r.album[e]=r.album[e]||{count:0,val:t.album},r.album[e].count+=1}if(t.genre){const e=I(t.genre);r.genre[e]=r.genre[e]||{count:0,val:t.genre},r.genre[e].count+=1}if(t.year){const e=t.year.toString();r.year[e]=r.year[e]||{count:0,val:t.year},r.year[e].count+=1}if(t.mbArtistID){const e=t.mbArtistID.split(" ")[0];r.mbArtistID[e]=r.mbArtistID[e]||{count:0,val:e},r.mbArtistID[e].count+=1}if(t.mbAlbumID){const e=t.mbAlbumID.split(" ")[0];r.mbAlbumID[e]=r.mbAlbumID[e]||{count:0,val:e},r.mbAlbumID[e].count+=1}}});const n=h(r.artist),a=h(r.artistSort),c=h(r.album),u=h(r.genre),p=(m=r.year,Object.keys(m).map(e=>({count:m[e].count,val:Number(m[e].val)})).sort((e,t)=>e.count-t.count));var m;const l=h(r.mbArtistID),y=h(r.mbAlbumID),f=g(c,d.default.basename(e.name)),b=g(n,t.cVariousArtist),v=g(a),q=g(u),S=g(y),k=g(l),A=g(p),D=b===t.cVariousArtist,$=c.length>0;let w;return i.length>0&&(1===i.length?w=d.default.basename(i[0]):(i.forEach(e=>{const t=d.default.basename(e,d.default.extname(e)).toLowerCase();["folder","cover","front"].indexOf(t)>=0&&(w=d.default.basename(e))}),void 0===w&&(w=d.default.basename(i[0])))),{trackCount:s,images:i,image:w,multiArtists:n.map(e=>e.val),isMultiArtist:D,isMultiAlbum:$,album:f,artist:b,artistSort:v,genre:q,mbAlbumID:S,mbArtistID:k,year:A}}match(e,t){return i(this,void 0,void 0,function*(){const r=this.cloneScanDir(e,void 0,0);r.folder=yield this.store.folderStore.searchOne({path:e.name}),yield this.matchDirR(r,t);const i=t.removedFolders,s=t.removedTracks;for(const e of t.removedFolders){const t=yield this.store.folderStore.search({inPath:e.path});for(const e of t)i.find(t=>t.id===e.id)||i.push(e);const r=yield this.store.trackStore.search({inPath:e.path});for(const e of r)s.find(t=>t.id===e.id)||s.push(e)}return t.removedTracks=s,t.removedFolders=i,r})}cloneScanDir(e,t,r){const i={rootID:e.rootID,parent:t,level:r,name:e.name,stat:e.stat,folder:void 0,files:e.files.map(t=>({name:t.name,type:t.type,stat:t.stat,rootID:e.rootID})),directories:[]};return i.directories=e.directories.map(e=>this.cloneScanDir(e,i,r+1)),i}matchDirR(e,t){return i(this,void 0,void 0,function*(){if((yield this.store.trackStore.search({path:e.name})).forEach(r=>{const i=d.default.join(r.path,r.name),s=e.files.find(e=>e.name===i);s?s.track=r:t.removedTracks.push(r)}),e.folder){const r=yield this.store.folderStore.search({parentID:e.folder.id});for(const i of r){const r=e.directories.find(e=>e.name===i.path);r?(r.folder=i,yield this.matchDirR(r,t)):t.removedFolders.push(i)}}})}scanDirR(e,t,r){return i(this,void 0,void 0,function*(){y.info("Scanning:",e);const i={name:u.ensureTrailingPathSeparator(e),stat:{ctime:t.ctime.valueOf(),mtime:t.mtime.valueOf()},rootID:r,directories:[],files:[]},s=[],n=yield c.default.readdir(e);for(const t of n)if("."!==t[0]){const r=d.default.join(e,t),n=yield c.default.stat(r);if(n.isDirectory())s.push({dir:r,stat:n});else{const e={name:r,type:p.getFileType(r),stat:{ctime:n.ctime.valueOf(),mtime:n.mtime.valueOf(),size:n.size}};i.files.push(e)}}for(const e of s){const t=yield this.scanDirR(e.dir,e.stat,r);i.directories.push(t)}return i})}scan(e,t){return i(this,void 0,void 0,function*(){const r=yield c.default.stat(e);return this.scanDirR(e,r,t)})}buildFolder(e){return i(this,void 0,void 0,function*(){return{id:"",rootID:e.rootID,path:u.ensureTrailingPathSeparator(e.name),parentID:e.parent&&e.parent.folder?e.parent.folder.id:void 0,stat:{created:e.stat.ctime,modified:e.stat.mtime},tag:e.tag||{tracks:e.files.length,level:e.level,type:o.FolderType.unknown},type:o.DBObjectType.folder}})}buildTrack(e,t){return i(this,void 0,void 0,function*(){y.info("Reading Track:",e.name);const r=yield this.audioModule.read(e.name),i=r.tag||{};return i.title||(i.title=d.default.basename(e.name)),{id:"",rootID:e.rootID,albumID:"",artistID:"",parentID:t?t.id:"",name:d.default.basename(e.name),path:u.ensureTrailingPathSeparator(d.default.dirname(e.name)),stat:{created:e.stat.ctime,modified:e.stat.mtime,size:e.stat.size},media:r.media||{},tag:i,type:o.DBObjectType.track}})}buildMerge(e,t){return i(this,void 0,void 0,function*(){if(!e.folder){const r=yield this.buildFolder(e);r.id=yield this.store.trackStore.getNewId(),e.folder=r,t.newFolders.push(r)}for(const r of e.directories)yield this.buildMerge(r,t);for(const r of e.files)if(r.type===o.FileTyp.AUDIO&&e.folder)if(r.track){if(b(r)){const i=r.track;if(!i)return;const s=yield this.buildTrack(r,e.folder);s.id=i.id,s.info=i.info,r.track=s,t.updateTracks.push({track:s,dir:e})}}else{const i=yield this.buildTrack(r,e.folder);i.id=yield this.store.trackStore.getNewId(),r.track=i,t.newTracks.push({track:i,dir:e})}})}mergeR(e,t){return i(this,void 0,void 0,function*(){if(!e.folder)return Promise.reject(Error("db entry must exists to compare "+e.name));if(function(e){return!e.folder||e.stat.mtime!==e.folder.stat.modified||e.stat.ctime!==e.folder.stat.created||!a.deepCompare(e.folder.tag,e.tag)}(e)){const r={id:e.folder.id,rootID:e.folder.rootID,path:u.ensureTrailingPathSeparator(e.name),parentID:e.parent&&e.parent.folder?e.parent.folder.id:void 0,stat:{created:e.stat.ctime,modified:e.stat.mtime},tag:e.tag||{tracks:e.files.length,level:e.level,type:o.FolderType.unknown},type:o.DBObjectType.folder,info:e.folder.info};e.folder=r,t.newFolders.find(e=>e.id===r.id)?(t.newFolders=t.newFolders.filter(e=>e.id!==r.id),t.newFolders.push(r)):t.updateFolders.push(r)}for(const r of e.directories)yield this.mergeR(r,t)})}merge(e,t){return i(this,void 0,void 0,function*(){yield this.buildMerge(e,t),yield this.buildMergeTags(e),yield this.mergeR(e,t),yield this.mergeMeta(t)})}createFolderTag(e){const t=e.metaStat;if(!t)throw Error("internal error, metastat must exists");const r=function(e){const t={title:d.default.basename(e).trim()},r=t.title.split(" "),i=r[0].replace(/[^\w\s]/gi,"");if(4===i.length){const e=parseInt(i,10);isNaN(e)||(t.year=e,r.shift(),"-"===r[0]&&r.shift(),t.title=r.join(" "))}return t}(e.name);return{tracks:e.files.filter(e=>e.type===o.FileTyp.AUDIO).length,level:e.level,type:o.FolderType.unknown,album:t.album,albumType:t.isMultiArtist?o.AlbumType.compilation:o.AlbumType.album,artist:t.artist,artistSort:t.artistSort,title:r.title,image:t.image,genre:t.genre,mbAlbumID:t.mbAlbumID,mbArtistID:t.mbArtistID,year:void 0!==r.year?r.year:t.year}}markMultiAlbumChilds(e){e.tag&&(e.tag.type=o.FolderType.multialbum),e.directories.forEach(e=>{this.markMultiAlbumChilds(e)})}applyFolderTagType(e){if(!e.tag||!e.metaStat)return;const t=e.metaStat,r=d.default.basename(e.name).toLowerCase();let i=o.FolderType.unknown;0===e.level?i=o.FolderType.multiartist:r.match(/\[(extra|various)\]/)||r.match(/^(extra|various)$/)?i=o.FolderType.extras:t.trackCount>0?i=0===e.directories.filter(e=>!!e.tag&&e.tag.type!==o.FolderType.extras).length?o.FolderType.album:o.FolderType.multialbum:e.directories.length>0?t.isMultiArtist?i=o.FolderType.multialbum:(i=o.FolderType.artist,e.directories.forEach(e=>{e.tag&&e.tag.type===o.FolderType.artist&&this.markMultiAlbumChilds(e)})):i=0===e.directories.length&&0===e.files.filter(e=>e.type===o.FileTyp.AUDIO).length?o.FolderType.extras:o.FolderType.album,i===o.FolderType.multialbum&&e.directories.find(e=>!!e.tag&&e.tag.type===o.FolderType.artist)&&(console.log("multiartist",e.name),i=o.FolderType.multiartist),e.tag.type=i,i===o.FolderType.multialbum&&this.markMultiAlbumChilds(e)}buildMergeTags(e){return i(this,void 0,void 0,function*(){for(const t of e.directories)yield this.buildMergeTags(t);e.folder&&(e.metaStat=this.getMetaStat(e),e.tag=this.createFolderTag(e)),this.applyFolderTagType(e)})}findArtistInDB(e){return i(this,void 0,void 0,function*(){const t=e.track.tag.mbAlbumArtistID||e.track.tag.mbArtistID;if(t){const e=yield this.store.artistStore.searchOne({mbArtistID:t});if(e)return e}return this.store.artistStore.searchOne({slug:k(e)})})}findArtistInCache(e){return i(this,void 0,void 0,function*(){const t=e.track.tag.mbAlbumArtistID||e.track.tag.mbArtistID;if(t){const e=this.artistCache.find(e=>e.mbArtistID===t);if(e)return e}const r=k(e);return this.artistCache.find(e=>e.slug===r)})}buildArtist(e){return i(this,void 0,void 0,function*(){return{id:yield this.store.artistStore.getNewId(),type:o.DBObjectType.artist,rootIDs:[],slug:k(e),name:S(e),nameSort:q(e),albumTypes:[],albumIDs:[],mbArtistID:v(e),trackIDs:[],created:Date.now()}})}findOrCreateArtist(e,t){return i(this,void 0,void 0,function*(){let r=yield this.findArtistInCache(e);return r||((r=yield this.findArtistInDB(e))?t.updateArtists.push(r):(r=yield this.buildArtist(e),t.newArtists.push(r)),this.artistCache.push(r),r)})}findCompilationArtist(e){return i(this,void 0,void 0,function*(){const e=I(t.cVariousArtist),r=yield this.artistCache.find(t=>t.slug===e);return r||(yield this.store.artistStore.searchOne({slug:e}))})}findOrCreateCompilationArtist(e){return i(this,void 0,void 0,function*(){let r=yield this.findCompilationArtist(e);return r?(e.updateArtists.push(r),this.artistCache.push(r)):(r={id:yield this.store.artistStore.getNewId(),type:o.DBObjectType.artist,rootIDs:[],slug:I(t.cVariousArtist),name:t.cVariousArtist,albumTypes:[o.AlbumType.compilation,o.AlbumType.album],albumIDs:[],trackIDs:[],created:Date.now()},e.newArtists.push(r),this.artistCache.push(r)),r})}findAlbumInDB(e,t){return i(this,void 0,void 0,function*(){if(e.track.tag.mbAlbumID){const t=yield this.store.albumStore.searchOne({mbAlbumID:e.track.tag.mbAlbumID});if(t)return t}return this.store.albumStore.searchOne({slug:D(e),artistID:t})})}findAlbumInCache(e,t){return i(this,void 0,void 0,function*(){if(e.track.tag.mbAlbumID){const t=yield this.albumCache.find(t=>t.mbAlbumID===e.track.tag.mbAlbumID);if(t)return t}const t=A(e);return this.albumCache.find(e=>e.name===t)})}buildAlbum(e,t){return i(this,void 0,void 0,function*(){return{id:yield this.store.albumStore.getNewId(),type:o.DBObjectType.album,slug:D(e),name:A(e),albumType:e.dir.folder&&e.dir.folder.tag&&void 0!==e.dir.folder.tag.albumType?e.dir.folder.tag.albumType:o.AlbumType.unknown,artist:S(e),artistID:t,mbArtistID:v(e),mbAlbumID:e.track.tag.mbAlbumID,genre:e.track.tag.genre,trackIDs:[],rootIDs:[],year:e.track.tag.year,duration:e.track.media.duration||0,created:Date.now()}})}findOrCreateAlbum(e,t,r){return i(this,void 0,void 0,function*(){let i=yield this.findAlbumInCache(e,t);return i||((i=yield this.findAlbumInDB(e,t))?r.updateAlbums.push(i):(i=yield this.buildAlbum(e,t),r.newAlbums.push(i)),this.albumCache.push(i),i)})}getAlbumByID(e,t){return i(this,void 0,void 0,function*(){let r=this.albumCache.find(t=>t.id===e);return r||((r=yield this.store.albumStore.byId(e))&&(this.albumCache.push(r),t.updateAlbums.push(r)),r)})}getArtistByID(e,t){return i(this,void 0,void 0,function*(){let r=this.artistCache.find(t=>t.id===e);return r||((r=yield this.store.artistStore.byId(e))&&(this.artistCache.push(r),t.updateArtists.push(r)),r)})}getTrackByID(e,t){return i(this,void 0,void 0,function*(){const r=t.newTracks.find(t=>t.track.id===e);return r?r.track:yield this.store.trackStore.byId(e)})}getTracksByID(e,t){return i(this,void 0,void 0,function*(){const r=[];for(const i of e){const e=yield this.getTrackByID(i,t);e&&r.push(e)}return r})}getAlbumById(e,t){return i(this,void 0,void 0,function*(){let r=t.newAlbums.find(t=>t.id===e);return r||(r=t.updateAlbums.find(t=>t.id===e))||(yield this.store.albumStore.byId(e))})}getAlbumsById(e,t){return i(this,void 0,void 0,function*(){const r=[];for(const i of e){const e=yield this.getAlbumByID(i,t);e&&r.push(e)}return r})}mergeMeta(e){return i(this,void 0,void 0,function*(){let t=yield this.findCompilationArtist(e);for(const r of e.newTracks)if(r.dir.folder){const i=yield this.findOrCreateArtist(r,e);let s;i.trackIDs.push(r.track.id),i.rootIDs.indexOf(r.dir.rootID)<0&&i.rootIDs.push(r.dir.rootID),r.track.artistID=i.id,r.dir.folder.tag.albumType===o.AlbumType.compilation?(t||(t=yield this.findOrCreateCompilationArtist(e)),t!==i&&(t.trackIDs.push(r.track.id),t.rootIDs.indexOf(r.dir.rootID)<0&&t.rootIDs.push(r.dir.rootID),e.newArtists.indexOf(t)<0&&e.updateArtists.indexOf(t)<0&&e.updateArtists.push(t),this.artistCache.indexOf(t)<0&&this.artistCache.push(t)),(s=yield this.findOrCreateAlbum(r,t.id,e)).artist=t.name,s.albumType=o.AlbumType.compilation,t.albumIDs.indexOf(s.id)<0&&t.albumIDs.push(s.id)):(s=yield this.findOrCreateAlbum(r,i.id,e)).albumType=void 0===r.dir.folder.tag.albumType?o.AlbumType.unknown:r.dir.folder.tag.albumType,s.trackIDs.push(r.track.id),r.track.albumID=s.id,s.duration+=r.track.media.duration||0,s.rootIDs.indexOf(r.dir.rootID)<0&&s.rootIDs.push(r.dir.rootID),i.albumTypes.indexOf(s.albumType)<0&&i.albumTypes.push(s.albumType),i.albumIDs.indexOf(s.id)<0&&i.albumIDs.push(s.id)}for(const r of e.removedTracks){const i=yield this.getAlbumByID(r.albumID,e);i&&(i.trackIDs=i.trackIDs.filter(e=>e!==r.id));const s=yield this.getArtistByID(r.artistID,e);s&&(s.trackIDs=s.trackIDs.filter(e=>e!==r.id)),t&&t.trackIDs.indexOf(r.id)>=0&&(t.trackIDs=t.trackIDs.filter(e=>e!==r.id),e.newArtists.indexOf(t)<0&&e.updateArtists.indexOf(t)<0&&e.updateArtists.push(t),this.artistCache.indexOf(t)<0&&this.artistCache.push(t))}e.removedArtists=e.updateArtists.filter(e=>0===e.trackIDs.length),e.updateArtists=e.updateArtists.filter(e=>e.trackIDs.length>0),e.removedAlbums=e.updateAlbums.filter(e=>0===e.trackIDs.length),e.updateAlbums=e.updateAlbums.filter(e=>e.trackIDs.length>0);for(const t of e.updateAlbums){const r=[];let i=0;const s=yield this.getTracksByID(t.trackIDs,e);for(const e of s)r.indexOf(e.rootID)<0&&r.push(e.rootID),i+=e.media.duration||0;t.rootIDs=r,t.duration=i}for(const t of e.updateArtists){const r=[],i=[],s=yield this.getTracksByID(t.trackIDs,e);for(const e of s)r.indexOf(e.rootID)<0&&r.push(e.rootID);const n=yield this.getAlbumsById(t.albumIDs,e);for(const e of n)i.indexOf(e.albumType)<0&&i.push(e.albumType);t.albumTypes=i,t.rootIDs=r}})}clean(e){return i(this,void 0,void 0,function*(){let t=[];if(e.removedAlbums.length>0){y.debug("Cleaning albums",e.removedAlbums.length);const t=e.removedAlbums.map(e=>e.id);yield this.store.albumStore.remove(t),yield this.store.stateStore.removeByQuery({destIDs:t,type:o.DBObjectType.album})}if(e.removedArtists.length>0){y.debug("Cleaning artists",e.removedArtists.length);const t=e.removedArtists.map(e=>e.id);yield this.store.artistStore.remove(t),yield this.store.stateStore.removeByQuery({destIDs:t,type:o.DBObjectType.artist})}if(e.removedFolders.length>0){y.debug("Cleaning folders",e.removedFolders.length);const r=e.removedFolders.map(e=>e.id);yield this.store.folderStore.remove(r),yield this.store.stateStore.removeByQuery({destIDs:r,type:o.DBObjectType.folder}),t=r}if(e.removedTracks.length>0){y.debug("Cleaning tracks",e.removedTracks.length);const r=e.removedTracks.map(e=>e.id);t=t.concat(r),yield this.store.trackStore.remove(r),yield this.store.stateStore.removeByQuery({destIDs:r,type:o.DBObjectType.track}),yield this.store.bookmarkStore.removeByQuery({destIDs:r});const i=yield this.store.playlistStore.search({trackIDs:r});if(i.length>0)for(const e of i)e.trackIDs=e.trackIDs.filter(e=>r.indexOf(e)<0),0===e.trackIDs.length?yield this.store.playlistStore.remove(e.id):(yield m.updatePlayListTracks(this.store.trackStore,e),yield this.store.playlistStore.replace(e))}t.length>0&&(yield this.imageModule.clearImageCacheByIDs(t),yield this.waveformService.clearWaveformCacheByIDs(t))})}run(e,t){return i(this,void 0,void 0,function*(){y.info("Start:",e);const r={newArtists:[],updateArtists:[],removedArtists:[],newAlbums:[],updateAlbums:[],removedAlbums:[],newTracks:[],updateTracks:[],removedTracks:[],newFolders:[],updateFolders:[],removedFolders:[],start:Date.now(),end:0};this.artistCache=[],this.albumCache=[];const i=yield this.scan(e,t);y.info("Matching:",e);const s=yield this.match(i,r);return y.info("Merging:",e),yield this.merge(s,r),y.info("Storing:",e),yield this.store.trackStore.bulk(r.newTracks.map(e=>e.track)),yield this.store.trackStore.upsert(r.updateTracks.map(e=>e.track)),yield this.store.folderStore.bulk(r.newFolders),yield this.store.folderStore.upsert(r.updateFolders),yield this.store.albumStore.bulk(r.newAlbums),yield this.store.albumStore.upsert(r.updateAlbums),yield this.store.artistStore.bulk(r.newArtists),yield this.store.artistStore.upsert(r.updateArtists),r.end=Date.now(),yield this.clean(r),r})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(7);function a(e,t){return i(this,void 0,void 0,function*(){const r=yield e.byIds(t.trackIDs),i={};r.forEach(e=>{i[e.id]=e}),t.trackIDs=t.trackIDs.filter(e=>!!i[e]),t.duration=0,t.trackIDs.forEach(e=>{const r=i[e];t.duration+=r.media.duration||0})})}t.updatePlayListTracks=a;t.PlaylistService=class extends n.BaseStoreService{constructor(e,t){super(e),this.playlistStore=e,this.trackStore=t}create(e,t,r,n,o){return i(this,void 0,void 0,function*(){const i=Date.now(),d={id:"",type:s.DBObjectType.playlist,name:e,comment:t,isPublic:r,userID:n,created:i,changed:i,trackIDs:o,duration:0};return yield a(this.trackStore,d),d.id=yield this.playlistStore.add(d),d})}update(e){return i(this,void 0,void 0,function*(){yield a(this.trackStore,e),yield this.playlistStore.replace(e)})}remove(e){return i(this,void 0,void 0,function*(){return this.playlistStore.remove(e.id)})}}},function(e,t){e.exports=require("limiter")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(54),n=r(55);function a(e,t,r){return i(this,void 0,void 0,function*(){const i=yield s.getBinPath(e,t);return i&&0!==i.length?new Promise((e,t)=>{const s=n.spawn(i,r);let a="",o="";s.stdout.on("data",e=>{a+=e.toString()}),s.stderr.on("data",e=>{o+=e.toString()}),s.on("close",t=>{e(a)})}):Promise.reject(Error("Tool binary not found "+e))})}t.spawnToolStream=function(e,t,r,a){return i(this,void 0,void 0,function*(){const i=yield s.getBinPath(e,t);return i&&0!==i.length?new Promise((e,t)=>{const s=n.spawn(i,r);let o="";s.stdout.on("data",e=>{a(e)}),s.stderr.on("data",e=>{o+=e.toString()}),s.on("close",t=>{e(o)})}):Promise.reject(Error("Tool binary not found "+e))})},t.spawnTool=a,t.spawnToolJson=function(e,t,r){return i(this,void 0,void 0,function*(){const i=yield a(e,t,r);return JSON.parse(i)})}},function(e,t){e.exports=require("crypto")},function(e,t){e.exports=require("fluent-ffmpeg")},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const n=i(r(17)),a=i(r(22)),o=s(r(94));t.downloadFile=function(e,t){return new Promise((r,i)=>{n.default.get(e).on("error",e=>{i(e)}).on("complete",e=>{200!==e.statusCode?i(new Error(o.STATUS_CODES[e.statusCode])):r()}).pipe(a.default.createWriteStream(t))})}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(26);t.formatEpisode=function(e,t,r){return{id:e.id,parentID:"",created:e.stat?e.stat.created:0,podcastID:e.podcastID,status:r,errorMessage:e.error,name:e.name,duration:e.media&&e.media.duration||-1,date:e.date,summary:e.summary,guid:e.guid,author:e.author,link:e.link,media:t.trackMedia&&e.media?{bitRate:e.media.bitRate||-1,format:e.media.format||"",channels:e.media.channels||-1,sampleRate:e.media.sampleRate||-1}:void 0,tag:t.trackTag&&e.tag?i.formatTrackTag(e.tag):void 0}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatArtistIndex=function(e){return{lastModified:e.lastModified,groups:e.groups.map(e=>({name:e.name,entries:e.entries.map(e=>({name:e.artist.name,trackCount:e.artist.trackIDs.length,albumCount:e.artist.albumIDs.length,artistID:e.artist.id}))}))}},t.formatFolderIndex=function(e){return{lastModified:e.lastModified,groups:e.groups.map(e=>({name:e.name,entries:e.entries.map(e=>({name:e.name,trackCount:e.trackCount,folderID:e.folder.id}))}))}}},function(e,t){e.exports=require("cors")},function(e,t){e.exports=require("express-session")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(2)),a=r(148),o=n.default("CheckApiParameters");function d(e,t){if(!e)return"Missing parameter collection "+t.name;const r=t.schema;let i=e[t.name];if(void 0===i&&r&&void 0!==r.default&&(e[t.name]=r.default,i=r.default),void 0===i)return t.required?"Missing required parameter "+t.name:null;if("boolean"===r.type){if(["true","yes","1"].indexOf(i.toString())>=0)e[t.name]=!0,i=!0;else{if(!(["false","no","0"].indexOf(i.toString())>=0))return"Invalid boolean parameter "+t.name;e[t.name]=!1,i=!1}e[t.name]=i}else if(["float","long","double","number","integer"].indexOf(r.type||"")>=0){let s=Number(i.toString());if(isNaN(s))return"Invalid number parameter "+t.name;if("integer"===r.type&&(s=Math.floor(s)),void 0!==r.minimum&&r.minimum>s)return"Invalid number parameter "+t.name+"; minimum is "+r.minimum;if(void 0!==r.maximum&&r.maximum<s)return"Invalid number parameter "+t.name+"; maximum is "+r.maximum;e[t.name]=s}else if("string"===r.type){const s=i.toString().trim();if(r.enum&&r.enum.indexOf(s)<0)return"Invalid enum string parameter "+t.name+": "+s;e[t.name]=s}else if("array"===r.type){const s=r.items||{type:"unknown"};if("string"===s.type){const r=((Array.isArray(i)?i:[i])||[]).map(e=>e.toString().trim());if(s.enum)for(let e=0;e<r.length;e++){const i=r[e];if(s.enum.indexOf(i)<0)return"Invalid enum string parameter "+t.name+": "+i}e[t.name]=r}else if(["float","long","double","number","integer"].indexOf(s.type||"")>=0){const n=((Array.isArray(i)?i:[i])||[]).map(e=>{let t=Number(e.toString());return"integer"===s.type&&(t=Math.floor(t)),t});for(let e=0;e<n.length;e++){const i=n[e];if(isNaN(i))return"Invalid number array parameter "+t.name;if(void 0!==s.minimum&&s.minimum>i)return"Invalid number array parameter "+t.name+"; minimum is "+s.minimum;if(void 0!==r.maximum&&r.maximum<i)return"Invalid number array parameter "+s.name+"; maximum is "+s.maximum}e[t.name]=n}else console.log("TODO: validOAParameter list type",r,i)}return null}t.checkOpenApiParameters=function(e,t,r,s,n){return i(this,void 0,void 0,function*(){const c=r.paths[e];if(!c)return void o.info("cmd not found to validate",e);const u=n||t.method.toLowerCase(),p=c[u];p?"get"===u?yield function(e,t,r){return i(this,void 0,void 0,function*(){if(!e.parameters)return;let t=null;return e.parameters.find(e=>("query"===(e=e).in?t=d(r.query,e):"path"===e.in?t=d(r.params,e):"header"===e.in?t=d(r.headers,e):"cookie"===e.in?t=d(r.cookies,e):o.info("Invalid/Unknown parameter spec",e),!!t)),t?Promise.reject(Error(t)):void 0})}(p,0,t):yield function(e,t,r){return i(this,void 0,void 0,function*(){if(!e.requestBody||!e.requestBody.content||!e.requestBody.content["application/json"])return;if(!r)return Promise.reject(Error("Missing Request Body"));const i=e.requestBody.content["application/json"].schema;if(!i||!i.$ref)return Promise.reject(Error("Unimplemented POST schema"));const s=t.definitions[i.$ref.split("/")[3]];if(!s)return Promise.reject(Error("Unknown POST schema"+i.$ref));const n=yield a.validate(r,s);return n.errors.length>0?(console.error(s,r,n.errors),Promise.reject(Error(JSON.stringify(n.errors)))):void 0})}(p,s,t.body):o.info("cmd method "+t.method+" not found to validate",t.path)})}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hexEncode=function(e){const t=[],r=[],i="0123456789abcdef";for(let e=0;e<256;e++)t[e]=i.charAt(e>>4)+i.charAt(15&e);for(let i=0;i<e.length;i++)r[i]=t[e.charCodeAt(i)];return r.join("")},t.hexDecode=function(e){let t="";for(let r=0;r<e.length;r+=2)t+=String.fromCharCode(parseInt(e.substr(r,2),16));return t.trim()}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(42),n=r(2),a=r(102),o=r(166),d=r(170),c=r(184),u=r(189),p=o.loadConfig();let m;n.configureLogger(p.log.level),m="elasticsearch"===p.database.use?new c.DBElastic(p.database.options.elasticsearch):new u.DBNedb(p.getDataPath(["nedb"]));const l=new d.Store(m),y=new s.Engine(p,l),f=new a.Server(y);process.argv.indexOf("--cleardb")>0?function(){return i(this,void 0,void 0,function*(){yield y.store.open(),yield y.store.reset(),yield y.store.close()})}().then(()=>{console.log("done.")}).catch(e=>{console.error(e)}):(process.on("SIGTERM",()=>{!function(){i(this,void 0,void 0,function*(){try{yield f.stop(),yield y.stop(),process.exit()}catch(e){console.error("Error on startdown",e),process.exit(1)}})}()}),function(){i(this,void 0,void 0,function*(){try{yield y.start(),yield f.start()}catch(e){return void console.error("Error on startup",e)}try{yield y.ioService.refresh()}catch(e){console.error("Error on startup refresh",e)}})}())},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(1)),a=s(r(6)),o=r(43),d=r(47),c=r(0),u=r(62),p=r(63),m=r(64),l=r(67),y=r(68),f=r(69),h=r(74),g=r(75),b=r(29),v=r(76),q=r(77),S=r(82),I=r(85),k=r(86),A=r(87),D=r(88),$=r(91),w=r(92),j=r(93),T=r(97),P=r(98),R=r(99),C=r(100),F=r(101),x=r(21),J=r(9),E=r(28);t.Engine=class{constructor(e,t){this.config=e,this.store=t,this.audioModule=new d.AudioModule(F.ThirdPartyConfig),this.waveformService=new q.WaveformService(e.getDataPath(["cache","waveforms"])),this.imageModule=new j.ImageModule(e.getDataPath(["cache","images"])),this.stateService=new k.StateService(this.store.stateStore),this.folderService=new w.FolderService(this.store.folderStore,this.store.trackStore,this.stateService,this.imageModule),this.trackService=new T.TrackService(this.store.trackStore,this.folderService,this.stateService),this.artistService=new P.ArtistService(this.store.artistStore,this.store.trackStore,this.folderService,this.stateService),this.albumService=new R.AlbumService(this.store.albumStore,this.store.trackStore,this.folderService,this.stateService),this.userService=new m.UserService(this.config.getDataPath(["images"]),this.store.userStore,this.store.stateStore,this.store.playlistStore,this.store.bookmarkStore,this.store.playQueueStore,this.imageModule),this.imageService=new A.ImageService(this.imageModule,this.trackService,this.folderService,this.artistService,this.albumService,this.userService),this.genreService=new y.GenreService(this.store.trackStore),this.indexService=new u.IndexService(e.app.index,this.store.artistStore,this.store.folderStore,this.store.trackStore),this.scanService=new E.ScanService(this.store,this.audioModule,this.imageModule,this.waveformService),this.ioService=new o.IoService(this.store.rootStore,this.scanService,this.indexService,this.genreService),this.downloadService=new D.DownloadService(this.store.trackStore),this.chatService=new l.ChatService(e.app.chat),this.nowPlayingService=new h.NowPlayingService(this.stateService),this.streamService=new S.StreamService,this.playlistService=new b.PlaylistService(this.store.playlistStore,this.store.trackStore),this.playQueueService=new v.PlayQueueService(this.store.playQueueStore),this.bookmarkService=new I.BookmarkService(this.store.bookmarkStore),this.episodeService=new C.EpisodeService(e.getDataPath(["podcasts"]),this.store.episodeStore,this.stateService,this.audioModule),this.podcastService=new f.PodcastService(this.store.podcastStore,this.episodeService,this.stateService),this.metaDataService=new p.MetaDataService(this.store.folderStore,this.store.trackStore,this.store.albumStore,this.store.artistStore,this.audioModule),this.rootService=new g.RootService(this.store.rootStore),this.radioService=new $.RadioService(this.store.radioStore)}checkFirstStart(){return i(this,void 0,void 0,function*(){if(this.config.firstStart){if(this.config.firstStart.adminUser&&0===(yield this.store.userStore.count())){const e=this.config.firstStart.adminUser,t=x.hashSaltPassword(e.pass||""),r={id:"",name:e.name,salt:t.salt,hash:t.hash,subsonic_pass:J.randomString(10),email:e.mail||"",type:c.DBObjectType.user,scrobblingEnabled:!0,created:Date.now(),roles:{stream:!0,upload:!0,admin:!0,podcast:!0}};yield this.userService.create(r)}if(this.config.firstStart.roots&&0===(yield this.store.rootStore.count())){const e=this.config.firstStart.roots;for(const t of e){const e={id:"",created:Date.now(),type:c.DBObjectType.root,name:t.name,path:t.path};yield this.store.rootStore.add(e)}}}})}checkDataPaths(){return i(this,void 0,void 0,function*(){yield a.default.ensureDir(n.default.resolve(this.config.paths.data)),yield a.default.ensureDir(n.default.resolve(this.config.paths.data,"cache","waveforms")),yield a.default.ensureDir(n.default.resolve(this.config.paths.data,"cache","uploads")),yield a.default.ensureDir(n.default.resolve(this.config.paths.data,"cache","images")),yield a.default.ensureDir(n.default.resolve(this.config.paths.data,"images")),yield a.default.ensureDir(n.default.resolve(this.config.paths.data,"session")),yield a.default.ensureDir(n.default.resolve(this.config.paths.data,"podcasts"))})}start(){return i(this,void 0,void 0,function*(){yield this.checkDataPaths(),yield this.store.open(),yield this.checkFirstStart()})}stop(){return i(this,void 0,void 0,function*(){yield this.store.close()})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(2)),a=r(28),o=n.default("IO");t.IoService=class{constructor(e,t,r,i){this.rootStore=e,this.scanService=t,this.indexService=r,this.genreService=i,this.scanning=!1,this.rootstatus={}}getScanStatus(){return{scanning:this.scanning,count:this.scanningCount}}getRootStatus(e){return this.rootstatus[e]}scanRoot(e){return i(this,void 0,void 0,function*(){o.info("Scanning Root",e.path),this.rootstatus[e.id]={lastScan:Date.now(),scanning:!0};try{const t=yield this.scanService.run(e.path,e.id);a.logChanges(t),this.rootstatus[e.id]={lastScan:Date.now()}}catch(t){o.error("Scanning Error",e.path,t.toString()),["EACCES","ENOENT"].indexOf(t.code)>=0?this.rootstatus[e.id]={lastScan:Date.now(),error:"Directory not found/no access/error in filesystem"}:this.rootstatus[e.id]={lastScan:Date.now(),error:t.toString()}}})}start(){return i(this,void 0,void 0,function*(){this.scanning=!0,o.info("Start Scanning")})}stop(){return i(this,void 0,void 0,function*(){this.scanning=!1,o.info("Stop Scanning"),yield this.indexService.buildIndexes(),yield this.genreService.refresh()})}refresh(){return i(this,void 0,void 0,function*(){if(this.scanning)return;yield this.start();const e=yield this.rootStore.all();for(const t of e)yield this.scanRoot(t);yield this.stop()})}refreshTracks(e){return i(this,void 0,void 0,function*(){yield this.refresh()})}refreshRoot(e){return i(this,void 0,void 0,function*(){this.scanning||(yield this.start(),yield this.scanRoot(e),yield this.stop())})}}},function(e,t){e.exports=require("winston")},function(e,t){e.exports=require("winston-timer")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.deepCompare=function e(t,r,i){const s=i||[],n=(s,n)=>{if(void 0===t)return!1;if(void 0===r)return!1;if("object"==typeof s){if(!e(s,n,i))return!1}else if(s!==n)return!1;return!0};if(void 0===t)return!1;if(void 0===r)return!1;let a;for(a in t)if(t.hasOwnProperty(a)&&s.indexOf(a)<0&&!n(t[a],r[a]))return!1;for(a in r)if(r.hasOwnProperty(a)&&s.indexOf(a)<0&&!n(t[a],r[a]))return!1;return!0}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(48),a=r(49),o=r(52),d=r(56),c=r(57),u=r(3),p=r(59),m=s(r(6)),l=r(60),y=r(61);class f{static packJamServeMedia(e){return e?{format:"mp3",duration:e.durationEstimate,bitRate:e.bitRate,sampleRate:e.sampleRate,channels:e.channels,encoded:e.encoded,mode:e.mode,version:e.version+" "+e.layer}:{}}static packProbeJamServeMedia(e){if(!e.streams)return{};const t=e.streams.filter(e=>"audio"===e.codec_type)[0];return t?{format:e.format.format_name,duration:Number(e.format.duration),bitRate:Number(e.format.bit_rate),sampleRate:Number(t.sample_rate),channels:t.channels,mode:t.channel_layout,version:t.codec_long_name}:{}}static packProbeJamServeTag(e){const t=e.format.tags;if(!t)return{};const r=Number(t.track),i=Number(t.DATE),s=Number(t.disc);return{artist:t.ARTIST,title:t.TITLE,album:t.ALBUM,year:isNaN(i)?void 0:i,track:isNaN(r)?void 0:r,disc:isNaN(s)?void 0:s,genre:t.GENRE?p.cleanGenre(t.GENRE):void 0,albumArtist:t.album_artist||t["ALBUM ARTIST"],albumSort:t.album_sort_order,albumArtistSort:t.album_artist_sort||t.album_artist_sort_order,artistSort:t.artist_sort,titleSort:t.title_sort_order,mbTrackID:t.TRACKID,mbAlbumType:t.ALBUMTYPE,mbAlbumArtistID:t.ALBUMARTISTID,mbArtistID:t.ARTISTID,mbAlbumID:t.ALBUMID,mbReleaseTrackID:t.RELEASETRACKID,mbReleaseGroupID:t.RELEASEGROUPID,mbRecordingID:t.RECORDINGID,mbAlbumStatus:t.ALBUMSTATUS,mbReleaseCountry:t.RELEASECOUNTRY}}static packID3v1JamServeTag(e){if(!e)return;const t=e.value;return{artist:t.artist,title:t.title,album:t.album,year:isNaN(Number(t.year))?void 0:Number(t.year),track:t.track,genre:void 0!==t.genreIndex&&y.ID3v1_GENRES[t.genreIndex]?y.ID3v1_GENRES[t.genreIndex]:void 0}}static packID3v2JamServeTag(e){if(!e)return;const t=n.simplifyTag(e);let r=t.year;if(t.release_year){const e=Number(t.release_year);isNaN(e)||(r=e)}if(t.originalyear){const e=Number(t.originalyear);isNaN(e)||(r=e)}if(t.original_release_year){const e=Number(t.original_release_year);isNaN(e)||(r=e)}if(t.release_date){const e=parseInt(t.release_date.slice(0,4),10);isNaN(e)||(r=e)}return{album:t.album,albumSort:t.album_sort_order,albumArtist:t.album_artist,albumArtistSort:t.album_artist_sort||t.album_artist_sort_order,artist:t.artist,artistSort:t.artist_sort,genre:t.genre?p.cleanGenre(t.genre):void 0,disc:t.disc,title:t.title,titleSort:t.title_sort_order,track:t.track,year:r,mbTrackID:t.TRACKID,mbAlbumType:t.ALBUMTYPE,mbAlbumArtistID:t.ALBUMARTISTID,mbArtistID:t.ARTISTID,mbAlbumID:t.ALBUMID,mbReleaseTrackID:t.RELEASETRACKID,mbReleaseGroupID:t.RELEASEGROUPID,mbRecordingID:t.RECORDINGID,mbAlbumStatus:t.ALBUMSTATUS,mbReleaseCountry:t.RELEASECOUNTRY}}static packMediaInfoImage(e){let t,r,i,s=(e||[]).find(e=>"small"===e.size);return s&&s.url&&s.url.length>0&&(t=s.url),(s=(e||[]).find(e=>"medium"===e.size))&&s.url&&s.url.length>0&&(r=s.url),(s=(e||[]).find(e=>"large"===e.size))&&s.url&&s.url.length>0&&(i=s.url),{small:t,medium:r,large:i}}static packMediaInfoArtist(e){if(e&&e.mbid)return{name:e.name,mbid:e.mbid,url:e.url,image:this.packMediaInfoImage(e.image),tags:e.tags,description:e.bio?e.bio.content:void 0,similar:e.similar&&e.similar.artist?e.similar.artist.map(e=>({name:e.name,url:e.url,image:this.packMediaInfoImage(e.image)})):void 0}}static packMediaInfoSimilarSong(e){return e&&e.track&&0!==e.track.length?e.track.map(e=>({name:e.name,mbid:e.mbid,url:e.url,duration:parseFloat(e.duration),artist:{name:e.artist.name,mbid:e.artist.mbid,url:e.artist.name},image:this.packMediaInfoImage(e.image)})):[]}static packMediaInfoAlbum(e){if(e)return{name:e.name,artist:e.artist,mbid:e.mbid,url:e.url,image:this.packMediaInfoImage(e.image),tags:e.tags,description:e.wiki?e.wiki.content:void 0}}static packMediaInfoTopSongs(e){return e&&e.track&&0!==e.track.length?e.track.map(e=>({name:e.name,mbid:e.mbid,url:e.url,rank:e.rank,artist:{name:e.artist.name,mbid:e.artist.mbid,url:e.artist.name},image:this.packMediaInfoImage(e.image)})):[]}}t.FORMAT=f;t.AudioModule=class{constructor(e){this.musicbrainz=new c.MusicbrainzClient({userAgent:e.musicbrainz.userAgent,retryOn:!0}),this.lastFM=new d.LastFMClient({key:e.lastfm.apiKey,userAgent:e.lastfm.userAgent}),this.acoustid=new o.AcoustidClient({key:e.acoustid.apiKey,userAgent:e.acoustid.userAgent}),this.chartLyrics=new a.ChartLyricsClient(e.chartlyrics.userAgent)}read(e){return i(this,void 0,void 0,function*(){if("mp3"===u.fileSuffix(e)){const t=new n.MP3,r=yield t.read({filename:e,mpegQuick:!0,mpeg:!0,id3v2:!0});if(r){if(r.id3v2)return{tag:f.packID3v2JamServeTag(r.id3v2),media:f.packJamServeMedia(r.mpeg)};const t=new n.ID3v1,i=yield t.read(e);return i?{tag:f.packID3v1JamServeTag(i),media:f.packJamServeMedia(r.mpeg)}:{tag:{},media:f.packJamServeMedia(r.mpeg)}}return{tag:{},media:{}}}{const t=yield l.probe(e,[]);return t?{tag:f.packProbeJamServeTag(t),media:f.packProbeJamServeMedia(t)}:{tag:{},media:{}}}})}saveID3v2(e,t){return i(this,void 0,void 0,function*(){(yield m.default.pathExists(e+".bak.org"))&&(yield m.default.copy(e,e+".bak.org"));const r=[];Object.keys(t.frames).map(e=>{(t.frames[e]||[]).forEach(t=>{r.push({id:e,head:{statusFlags:{},formatFlags:{},size:0},value:t})})});const i={id:"ID3v2",head:{ver:t.version,rev:0,size:0,valid:!0},start:0,end:0,frames:r},s=new n.ID3v2;yield s.write(e,i,t.version,0)})}readID3v2(e){return i(this,void 0,void 0,function*(){const t=new n.ID3v2,r=yield t.read(e);if(!r||!r.head)return Promise.reject(Error("No ID3v2 Tag found"));const i={version:r.head.ver,frames:{}};return r.frames.forEach(e=>{const t=i.frames[e.id]||[];if(e.value&&e.value.hasOwnProperty("bin")){const t=e.value;t.bin=t.bin.toString("base64")}t.push(e.value),i.frames[e.id]=t}),i})}readID3v2Image(e,t){return i(this,void 0,void 0,function*(){const r=new n.ID3v2,i=yield r.read(e);if(!i)return{};const s=i.frames.find(e=>["APIC","PIC"].indexOf(e.id)>=0&&e.value.pictureType===t);return s?{buffer:s.value.bin,mimeType:s.value.mimeType}:{}})}mediaInfoArtistInfo(e){return i(this,void 0,void 0,function*(){const t=yield this.lastFM.artist(e);return f.packMediaInfoArtist(t)})}mediaInfoArtistInfoByArtistID(e){return i(this,void 0,void 0,function*(){const t=yield this.lastFM.artistID(e);return f.packMediaInfoArtist(t)})}mediaInfoAlbumInfo(e,t){return i(this,void 0,void 0,function*(){const r=yield this.lastFM.album(e,t),i=f.packMediaInfoAlbum(r);if(i&&i.mbid){const e=yield this.musicbrainz.lookup({id:i.mbid,type:"release",inc:"labels"});i.releases=e.releases}return i})}mediaInfoAlbumInfoByAlbumID(e){return i(this,void 0,void 0,function*(){const t=yield this.lastFM.albumID(e),r=f.packMediaInfoAlbum(t);if(r){const t=yield this.musicbrainz.lookup({id:e,type:"release",inc:"labels"});r.releases=t.releases}return r})}mediaInfoSimilarTrack(e,t){return i(this,void 0,void 0,function*(){const r=yield this.lastFM.similarTrack(e,t);return f.packMediaInfoSimilarSong(r)})}mediaInfoSimilarTrackByMBTrackID(e){return i(this,void 0,void 0,function*(){const t=yield this.lastFM.similarTrackID(e);return f.packMediaInfoSimilarSong(t)})}mediaInfoTopSongs(e){return i(this,void 0,void 0,function*(){const t=yield this.lastFM.topArtistSongs(e);return f.packMediaInfoTopSongs(t)})}mediaInfoTopSongsByArtistID(e){return i(this,void 0,void 0,function*(){const t=yield this.lastFM.topArtistSongsID(e);return f.packMediaInfoTopSongs(t)})}acoustidLookup(e,t){return i(this,void 0,void 0,function*(){return this.acoustid.acoustid(e,t)})}musicbrainzSearch(e,t){return i(this,void 0,void 0,function*(){return this.musicbrainz.search({type:e,query:t})})}musicbrainzLookup(e,t,r){return i(this,void 0,void 0,function*(){return this.musicbrainz.lookup({type:e,id:t,inc:r})})}musicbrainzAlbumByFolder(e){return i(this,void 0,void 0,function*(){const t={arid:e.tag.mbArtistID,artist:e.tag.artist,release:e.tag.album||e.tag.title};return this.musicbrainz.search({type:"release",query:t})})}lastFMLookup(e,t){return i(this,void 0,void 0,function*(){return this.lastFM.lookup(e,t)})}getLyrics(e,t){return i(this,void 0,void 0,function*(){return this.chartLyrics.search(e,t)})}}},function(e,t){e.exports=require("jamp3")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(50);t.ChartLyricsClient=class extends s.WebserviceXMLClient{constructor(e){super(1,1e3,e)}search(e,t){return i(this,void 0,void 0,function*(){const r={artist:e,song:t},i=yield this.getJson("http://api.chartlyrics.com/apiv1.asmx/SearchLyricDirect",r);if(!i||!i.GetLyricResult)return;const s=i.GetLyricResult;return{id:(s?s.LyricId[0]:"")||"",trackId:(s?s.TrackId[0]:"")||"",checksum:(s?s.LyricChecksum[0]:"")||"",song:(s?s.LyricSong[0]:"")||"",artist:(s?s.LyricArtist[0]:"")||"",url:(s?s.LyricUrl[0]:"")||"",covertArtUrl:(s?s.LyricCovertArtUrl[0]:"")||"",rank:(s?s.LyricRank[0]:"")||"",correctUrl:(s?s.LyricCorrectUrl[0]:"")||"",lyric:(s?s.Lyric[0]:"")||""}})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(30)),a=s(r(17)),o=s(r(51));t.WebserviceXMLClient=class{constructor(e,t,r){this.limiter=new n.default.RateLimiter(e,t),this.userAgent=r}getJson(e,t){return i(this,void 0,void 0,function*(){const r={url:e,headers:{"User-Agent":this.userAgent},qs:t};return new Promise((e,t)=>{this.limiter.removeTokens(1,()=>{a.default(r,(r,i,s)=>{if(r)return t(r);o.default.parseString(s,(r,i)=>{if(r)return t(r);e(i)})})})})})}}},function(e,t){e.exports=require("xml2js")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(53),a=r(20),o=s(r(2)).default("Acoustid"),d="recordings releases releasegroups tracks compress usermeta sources";t.AcoustidClient=class extends a.WebserviceClient{constructor(e){super(3,1e3,e.userAgent),this.options=e}get(e,t){return i(this,void 0,void 0,function*(){t=t||this.options.meta||d,o.info("requesting by fingerprint",t);const r=yield this.getJson("http://api.acoustid.org/v2/lookup",{format:"json",meta:t,client:this.options.key,duration:e.duration.toFixed(0),fingerprint:e.fingerprint});return"ok"!==r.status?Promise.reject(Error(r.status)):r.results})}acoustid(e,t){return i(this,void 0,void 0,function*(){try{const r=yield n.fpcalc(e,this.options.fpcalc||{});return this.get(r,t)}catch(e){return o.error(e),[]}})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(31);t.fpcalc=function(e,t){return i(this,void 0,void 0,function*(){const r=["-json"];return t.length&&r.push("-length",t.length.toFixed(0)),t.raw&&r.push("-raw"),yield s.spawnToolJson("fpcalc","FPCALC_PATH",[...r,e])})}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(1)),a=s(r(6)),o=process&&("win32"===process.platform||/^(msys|cygwin)$/.test(process.env.OSTYPE||"")),d={},c=o?";":":";function u(e,t,r){return!!r.isFile()&&(o?function(e,t,r){if(!r.isSymbolicLink()&&!r.isFile())return!1;const i=void 0!==t.pathExt?t.pathExt:process.env.PATHEXT;if(!i)return!0;const s=i.split(";");if(-1!==s.indexOf(""))return!0;for(let t=0;t<s.length;t++){const r=s[t].toLowerCase();if(r&&e.substr(-r.length).toLowerCase()===r)return!0}return!1}(e,t,r):function(e,t,r){const i=r.mode,s=r.uid,n=r.gid,a=process.getuid&&process.getuid(),o=process.getgid&&process.getgid(),d=parseInt("100",8),c=parseInt("010",8);return!!(i&parseInt("001",8)||i&c&&n===o||i&d&&s===a||i&(d|c)&&0===a)}(0,0,r))}function p(e,t){const r={},i=function(e,t){const r=t.colon||c;let i=t.path||process.env.PATH||"",s=[""];i=i.split(r);let n="";return o&&(i.unshift(process.cwd()),s=(n=t.pathExt||process.env.PATHEXT||".EXE;.CMD;.BAT;.COM").split(r),-1!==e.indexOf(".")&&""!==s[0]&&s.unshift("")),(e.match(/\//)||o&&e.match(/\\/))&&(i=[""]),{env:i,ext:s,extExe:n}}(e,r),s=i.env,d=i.ext,p=i.extExe,m=[];!function i(o,c){if(o===c)return r.all&&m.length?t(null,m):t(function(e){const t=new Error("not found: "+e);return t.code="ENOENT",t}(e));let l=s[o];'"'===l.charAt(0)&&'"'===l.slice(-1)&&(l=l.slice(1,-1));let y=n.default.join(l,e);!l&&/^\.[\\\/]/.test(e)&&(y=e.slice(0,2)+y),function e(s,n){if(s===n)return i(o+1,c);const l=d[s];!function(e,t,r){a.default.stat(e,(i,s)=>{r(i,!i&&u(e,t,s))})}(y+l,{pathExt:p},(i,a)=>{if(!i&&a){if(!r.all)return t(null,[y+l]);m.push(y+l)}return e(s+1,n)})}(0,d.length)}(0,s.length)}t.whichs=p,t.getBinPath=function(e,t){return i(this,void 0,void 0,function*(){if(e in d)return d[e];try{const r=yield function(e){return i(this,void 0,void 0,function*(){const t=process.env[e];if(t&&t.length>0&&(yield a.default.pathExists(t)))return t})}(t);if(r&&r.length>0)return d[e]=r,r}catch(e){}try{const t=yield function(e){return i(this,void 0,void 0,function*(){return new Promise((t,r)=>{p(e,(e,i)=>{e?r(e):i&&i.length>0?t(i[0]):t()})})})}(e);if(t&&t.length>0)return d[e]=t,t}catch(e){}try{const t=yield function(e){return i(this,void 0,void 0,function*(){const t=n.default.join(".","bin","tools",e,process.platform,process.arch,e)+(o?".exe":"");if(yield a.default.pathExists(t))return t})}(e);if(t&&t.length>0)return d[e]=t,t}catch(e){}})}},function(e,t){e.exports=require("child_process")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(20),a=s(r(2)).default("LastFM");t.LastFMClient=class extends n.WebserviceClient{constructor(e){super(5,1e3,e.userAgent),this.options=e}beautify(e){const t=(e,r)=>{if(null!=e){if(Array.isArray(e))return e.map(e=>t(e,r)).filter(e=>void 0!==e);if("object"==typeof e){const r={};return Object.keys(e).forEach(i=>{const s=t(e[i],e);void 0!==s&&("#text"===i?r.url=s:"@attr"===i?Object.keys(s).forEach(e=>{r[e]=s[e]}):"tags"===i?s.tag?(Array.isArray(s.tag)||(s.tag=[s.tag]),r[i]=s.tag):r[i]=s:"tracks"===i?s.track?(Array.isArray(s.track)||(s.track=[s.track]),r[i]=s.track):r[i]=s:"links"===i&&s.link?(Array.isArray(s.link)||(s.link=[s.link]),r[i]=s.link):r[i]=s)}),r}return e}};return t(e,{})}get(e,t){return i(this,void 0,void 0,function*(){a.info("requesting",e,JSON.stringify(t)),t.method=e;const r={method:e};Object.keys(t).forEach(e=>{r[e]=t[e]}),r.api_key=this.options.key,r.format="json";const i=yield this.getJson("http://ws.audioscrobbler.com/2.0/",r);return this.beautify(i)})}artist(e){return i(this,void 0,void 0,function*(){return(yield this.get("artist.getInfo",{artist:e})).artist})}trackID(e){return i(this,void 0,void 0,function*(){return(yield this.get("artist.getInfo",{mbid:e})).track})}artistID(e){return i(this,void 0,void 0,function*(){return(yield this.get("artist.getInfo",{mbid:e})).artist})}album(e,t){return i(this,void 0,void 0,function*(){return(yield this.get("album.getInfo",{artist:t,album:e})).album})}albumID(e){return i(this,void 0,void 0,function*(){return(yield this.get("album.getInfo",{mbid:e})).album})}albumIDTopTags(e){return i(this,void 0,void 0,function*(){return(yield this.get("album.getTopTags",{mbid:e})).toptracks})}similarTrack(e,t){return i(this,void 0,void 0,function*(){return(yield this.get("track.getSimilar",{track:e,artist:t})).similartracks})}similarTrackID(e){return i(this,void 0,void 0,function*(){return(yield this.get("track.getSimilar",{mbid:e})).similartracks})}topArtistSongs(e){return i(this,void 0,void 0,function*(){return(yield this.get("artist.getTopTracks",{artist:e})).toptracks})}topArtistSongsID(e){return i(this,void 0,void 0,function*(){return(yield this.get("artist.getTopTracks",{mbid:e})).toptracks})}lookup(e,t){return i(this,void 0,void 0,function*(){return"album"===e?{album:yield this.albumID(t)}:"album-toptracks"===e?{toptracks:yield this.albumIDTopTags(t)}:"artist"===e?{artist:yield this.artistID(t)}:"track"===e?{track:yield this.trackID(t)}:"track-similar"===e?{similartracks:yield this.similarTrackID(t)}:"artist-toptracks"===e?{toptracks:yield this.topArtistSongsID(t)}:Promise.reject(Error("Invalid LastFM lookup type parameter"))})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(20),a=r(58),o=s(r(2)).default("Musicbrainz");t.MusicbrainzClient=class extends n.WebserviceClient{constructor(e){super(1,1e3,e.userAgent),this.options={host:"http://musicbrainz.org",port:80,basePath:"/ws/2/",userAgent:"",limit:25,retryOn:!1,retryDelay:3e3,retryCount:3},this.options=Object.assign({},this.options,e)}beautify(e){const t=e=>{if(null!=e){if(Array.isArray(e))return e.map(e=>t(e)).filter(e=>void 0!==e);if("object"==typeof e){const r={};return Object.keys(e).forEach(i=>{const s=t(e[i]);void 0!==s&&(r[(e=>e.split("-").map((e,t)=>0===t?e:e[0].toUpperCase()+e.slice(1)).join(""))(i)]=s)}),r}return e}};return t(e)}concatSearchQuery(e){return Object.keys(e).filter(t=>void 0!==e[t]&&null!==e[t]).map(t=>t+':"'+encodeURIComponent(e[t])+'"').join("%20AND%20")}get(e){return i(this,void 0,void 0,function*(){const t=Object.keys(e.query).filter(t=>void 0!==e.query[t]&&null!==e.query[t]).map(t=>t+"="+e.query[t]);t.push("limit="+(e.limit||this.options.limit||25)),t.push("offset="+(e.offset||0)),t.push("fmt=json");const r=this.options.host+(80!==this.options.port?":"+this.options.port:"")+e.path+"?"+t.join("&"),s=this.options,n=this.get;function a(t){return i(this,void 0,void 0,function*(){return s.retryOn&&e.retry<s.retryCount?(e.retry++,o.info("rate limit hit, retrying in "+s.retryDelay+"ms"),new Promise((t,r)=>{setTimeout(()=>{n(e).then(t).catch(r)},s.retryDelay)})):Promise.reject(t)})}o.info("requesting",JSON.stringify(e));try{const e=yield this.getJson(r,void 0);return(e=>e&&e.error&&e.error.indexOf("allowable rate limit")>=0)(e)?a(Error(e.error)):e}catch(e){const t=e.statusCode;return 502===t||503===t?a(e):Promise.reject(e)}})}search(e){return i(this,void 0,void 0,function*(){const t=yield this.get({path:this.options.basePath+e.type+"/",query:{query:this.concatSearchQuery(e.query||{})},retry:0,limit:e.limit,offset:e.offset});return this.beautify(t)})}luceneSearch(e){return i(this,void 0,void 0,function*(){if(!e.query||0===e.query.length)return Promise.reject(Error("Invalid query for type "+e.type));const t=yield this.get({path:this.options.basePath+e.type+"/",query:{query:encodeURIComponent(e.query||"")},retry:0,limit:e.limit,offset:e.offset}),r={};return r[e.type]=t||{},this.beautify(r)})}lookup(e){return i(this,void 0,void 0,function*(){if(!e.id||0===e.id.length)return Promise.reject(Error("Invalid lookup id for type "+e.type));const t=a.LookupIncludes[e.type],r=e.inc||a.LookupIncludes[e.type].join("+");if(!t)return Promise.reject(Error("Invalid Lookup"));const i=yield this.get({path:this.options.basePath+e.type+"/"+e.id,query:{mbid:e.id,inc:r},retry:0,limit:e.limit,offset:e.offset}),s={};return s[e.type]=i||{},this.beautify(s)})}browse(e){return i(this,void 0,void 0,function*(){const t=Object.keys(e.lookupIds).find(t=>!a.LookupBrowseTypes[e.type]||a.LookupBrowseTypes[e.type].indexOf(t)<0);if(t)return Promise.reject(Error("Invalid browse lookup key for type "+e.type+": "+t));const r=Object.assign({inc:e.inc},e.lookupIds),i=yield this.get({path:this.options.basePath+e.type,query:r,retry:0,limit:e.limit,offset:e.offset}),s={};return s[e.type]=i||{},this.beautify(s)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LookupBrowseTypes={area:["collection"],artist:["area","collection","recording","release","release-group","work"],collection:["area","artist","editor","event","label","place","recording","release","release-group","work"],event:["area","artist","collection","place"],instrument:["collection"],label:["area","collection","release"],place:["area","collection"],recording:["artist","collection","release"],release:["area","artist","collection","label","track","track_artist","recording","release-group"],"release-group":["artist","collection","release"],series:["collection"],work:["artist","collection"],url:["resource"]},t.LookupIncludes={area:[],artist:["recordings","releases","release-groups","works","aliases"],collection:["user-collections"],event:[],instrument:[],label:["releases"],place:[],recording:["artists","releases","artist-credits","aliases","tags","ratings","annotation"],release:["artists","collections","labels","recordings","release-groups","discids","media","isrcs","artist-credits","aliases","tags","annotation"],"release-group":["artists","releases","media","artist-credits","aliases","tags","ratings","annotation"],series:[],work:[],url:[]}},function(e,t,r){"use strict";let i;Object.defineProperty(t,"__esModule",{value:!0});const s=["Blues","Classic Rock","Country","Dance","Disco","Funk","Grunge","Hip Hop","Jazz","Metal","New Age","Oldies","Other","Pop","R&B","Rap","Reggae","Rock","Techno","Industrial","Alternative","Ska","Death Metal","Pranks","Soundtrack","Euro-Techno","Ambient","Trip-Hop","Vocal","Jazz+Funk","Fusion","Trance","Classical","Instrumental","Acid","House","Game","Sound Clip","Gospel","Noise","Alternative Rock","Bass","Soul","Punk","Space","Meditative","Instrumental Pop","Instrumental Rock","Ethnic","Gothic","Darkwave","Techno-Industrial","Electronic","Pop-Folk","Eurodance","Dream","Southern Rock","Comedy","Cult","Gangsta Rap","Top 40","Christian Rap","Pop-Funk","Jungle","Native American","Cabaret","New Wave","Psychedelic","Rave","Showtunes","Trailer","Lo-Fi","Tribal","Acid Punk","Acid Jazz","Polka","Retro","Musical","Rock & Roll","Hard Rock","Folk","Folk-Rock","National Folk","Swing","Fast Fusion","Bebop","Latin","Revival","Celtic","Bluegrass","Avantgarde","Gothic Rock","Progressive Rock","Psychedelic Rock","Symphonic Rock","Slow Rock","Big Band","Chorus","Easy Listening","Acoustic","Humour","Speech","Chanson","Opera","Chamber Music","Sonata","Symphony","Booty Bass","Primus","Porn Groove","Satire","Slow Jam","Club","Tango","Samba","Folklore","Ballad","Power Ballad","Rhythmic Soul","Freestyle","Duet","Punk Rock","Drum Solo","A Cappella","Euro-House","Dance Hall","Goa","Drum & Bass","Club-House","Hardcore","Terror","Indie","BritPop","Weltmusik","Polsk Punk","Beat","Christian Gangsta Rap","Heavy Metal","Black Metal","Crossover","Contemporary Christian","Christian Rock","Merengue","Salsa","Thrash Metal","Anime","JPop","Synthpop","Abstract","Art Rock","Baroque","Bhangra","Big Beat","Breakbeat","Chillout","Downtempo","Dub","EBM","Eclectic","Electro","Electroclash","Emo","Experimental","Garage","Global","IDM","Illbient","Industro-Goth","Jam Band","Krautrock","Leftfield","Lounge","Math Rock","New Romantic","Nu-Breakz","Post-Punk","Post-Rock","Psytrance","Shoegaze","Space Rock","Trop Rock","World Music","Neoclassical","Audiobook","Audio Theatre","Neue Deutsche Welle","Podcast","Indie Rock","G-Funk","Dubstep","Garage Rock","Psybient"];function n(e){return e.replace(/[& \-\.]/g,"").toLowerCase()}t.Genres=["2 Tone","2-Step Garage","4-Beat","A Cappella","Abstract","Acid","Acid Breaks","Acid House","Acid Jazz","Acid Punk","Acid Rock","Acid Techno","Acid Trance","Acousmatic Music","Acoustic","Adult Contemporary","African","African Blues","African Heavy Metal","African Hip Hop","Afro / Cosmic Disco","Afro-Cuban Jazz","Afrobeat","Aggrotech","Alternative","Alternative Country","Alternative Dance","Alternative Hip Hop","Alternative Metal","Alternative Rock","Ambient","Ambient Dub","Ambient House","American Folk Revival","Americana","Anarcho Punk","Anime","Anti-folk","Apala","Arab Pop","Art Punk","Art Rock","Asian","Asian American Jazz","Asian Underground","Atlanta Hip Hop","Audio Theatre","Audiobook","Australian Country Music","Australian Hip Hop","AustroPop","Avant-garde","Avant-garde Jazz","Avant-garde Metal","Avantgarde","Axé","Bachata","Background Music","Baila","Baithak Gana","Bakersfield sound","Balearic Beat","Balearic Trance","Ballad","Baltimore Club","Banda","Baroque","Baroque Pop","Bass","Bassline","Baul","Beat","Beat Music","Beautiful Music","Bebop","Benga","Berlin School","Bhangra","Big Band","Big Beat","Big Room","Bikutsi","BitPop","Black Metal","Blue-Eyed Soul","Bluegrass","Blues","Blues Country","Blues Rock","Blues Shouter","Bolero","Bongo Flava","Boogie","Boogie-Woogie","Booty Bass","Bossa Nova","Bounce Music","Bouncy House","Bouncy Techno","Bouyon","Brazilian","Brazilian Rock","Breakbeat","Breakbeat Hardcore","Breakcore","Breakstep","Brega","Brick City club","Brill Building","British Blues","British Dance Band","British Folk revival","British Hip Hop","BritPop","Broken Beat","Brostep","Bubblegum Dance","Bubblegum Pop","Bullerengue","C-Pop","Cabaret","Cadence-lypso","Cajun","Cajun fiddle tunes","Calypso","Canadian Blues","Canción","Canterbury scene","Canzone","Cape Jazz","Caribbean","Celtic","Celtic Metal","Celtic Music","Celtic Punk","Cha Cha Cha","Chalga","Chamber Jazz","Chamber Music","Chanson","Chap Hop","Chicago Blues","Chicago Hip Hop","Chicago House","Chicano Rap","Chicha","Chill-out","Chillout","Chillstep","Chillwave","Chimurenga","Chinese Rock","Chiptune","Chopped & Screwed","Choro","Chorus","Christian Country Music","Christian Gangsta Rap","Christian Hip Hop","Christian Metal","Christian Pop","Christian Punk","Christian Rap","Christian Rock","Chutney","Chutney soca","Classic Country","Classic female Blues","Classic Rock","Classical","Classical crossover","Close harmony","Club","Club-House","Coldwave","Comedy","Compas","Complextro","Congolese rumba","Conscious Hip Hop","Contemporary Christian","Contemporary Folk","Contemporary R&B","Continental Jazz","Cool Jazz","Country","Country Blues","Country Pop","Country Rap","Country Rock","Country-Rap","Coupé-Décalé","Western Music","CowPunk","Criolla","Crossover","Crossover Jazz","Crossover Thrash","Crunk","Crunkcore","Crust Punk","Crustgrind","Cult","Cumbia","Cumbia Rap","Cybergrind","D-beat","Dance","Dance Hall","Dance-Pop","Dance-Punk","Dance-Rock","Dancehall","Dancehall Music","Dangdut","Dansband Music","Dark Ambient","Dark Cabaret","Dark Electro","Dark Wave","Darkcore","Darkcore jungle","Darkstep","Darkwave","Death 'n' roll","Death industrial","Death Metal","Death-Doom","Deathcore","DeathRock","Deep Funk","Deep House","Delta Blues","Desert Rock","Detroit Blues","Detroit Hip Hop","Detroit Techno","Digital hardcore","Disco","Disco polo","Diva House","Dixieland","Djent","Doom Metal","Doomcore","Downtempo","Dream","Dream Pop","Dream Trance","Drill","Drill & Bass","Drone Metal","Drone Music","Drum & Bass","Drum Solo","Drumstep","Dub","Dub Techno","Dubstep","Dubstyle","Dubtronica","Duet","Dunedin Sound","Dutch House","East Coast Hip Hop","Easy Listening","EBM","Eclectic","Electric Blues","Electro","Electro House","Electro Music","Electro Swing","Electro-Industrial","Electroacoustic","Electroacoustic Music","Electroclash","Electronic","Electronic Body Music","Electronic Rock","Electronica","Electronicore","ElectroPop","ElectroPunk","Elevator Music","Emo","Ethereal Wave","Ethnic","Ethnic electronica","Ethno Jazz","Euro Disco","Euro-House","Euro-Techno","Eurobeat","Eurodance","European free Jazz","EuroPop","Experimental","Experimental Hip Hop","Experimental Music","Experimental Rock","Fado","Fann at-Tanbura","Fast Fusion","Fidget House","Fijiri","Filk Music","Filmi","Flamenco","Florida Breaks","Folk","Folk Metal","Folk Pop","Folk Punk","Folk Rock","Folk-Rock","Folklore","Folktronica","Forró","Franco-Country","Freak Folk","Freakbeat","Free Funk","Free Improvisation","Free Jazz","Free Tekno","Freestyle","Freestyle Music","Freestyle Rap","French House","French Pop","Frevo","Fuji Music","Full On","Funk","Funk Carioca","Funk Metal","Funkstep","Funktronica","Funky House","Furniture Music","Fusion","Future Garage","Future House","FuturePop","G-Funk","Gabba","Game","Game Boy Music","Gamelan","Gangsta Rap","Garage","Garage House","Garage Punk","Garage Rock","Genge","Ghetto House","Ghettotech","Glam Metal","Glam Rock","Glitch","Glitch Hop","Global","Go-go","Goa","Goa Trance","Golden Age Hip Hop","Goregrind","Gospel","Gospel Blues","Gothic","Gothic Metal","Gothic Rock","Grime","Grindcore","Grindie","Groove Metal","Grunge","Grupera","Guajira","Gypsy Jazz","Gypsy Punk","Happy Hardcore","Hard Bop","Hard House","Hard NRG","Hard Rock","Hard Trance","Hardbag","Hardcore","Hardcore Rap","Hardcore Hip Hop","Hardcore Punk","Hardstep","Hardstyle","Heavy Metal","Hellbilly Music","Hi-NRG","Highlife","Hill Country Blues","Hip Hop","Hip Hop Soul","Hip House","Hip Pop","Hip Hop","Hiplife","Hokum","Hokum Blues","Honky Tonk","Horror Punk","Horrorcore","House","House Music","Houston Hip Hop","Huayno","Humour","Hyphy","IDM","Igbo highlife","Igbo Rap","Illbient","Indian Pop","Indie","Indie Folk","Indie Pop","Indie Rock","Indietronica","Industrial","Industrial Folk","Industrial Hip Hop","Industrial Metal","Industrial Music","Industrial Rock","Industro-Goth","Instrumental","Instrumental Country","Instrumental Hip Hop","Instrumental Pop","Instrumental Rock","Iranian Pop","Isicathamiya","Isolationism","Italo Dance","Italo Disco","Italo House","J-Pop","Jam Band","Jangle Pop","Japanoise","Jazz","Jazz Blues","Jazz Fusion","Jazz House","Jazz Rap","Jazz Rock","Jazz-Funk","Jazz+Funk","Jerkin'","Jersey Club","Jit","JPop","Jùjú","Jump Blues","Jump-up","Jumpstyle","Jungle","K-Pop","Kadongo Kamu","Kansas City Blues","Kansas City Jazz","Kapuka","Keroncong","Khaliji","Kizomba","Krautrock","Kuduro","Kwaito","Kwassa Kwassa","Kwela","Laïkó","Lambada","Laptronica","Latin","Latin alternative","Latin ballad","Latin Christian","Latin House","Latin Jazz","Latin Metal","Latin Pop","Latin Rock","Latin Swing","Lavani","Leftfield","Lento Violento","Liquid Dubstep","Liquid Funk","Livetronica","Liwa","Lo-fi","Lo-Fi","Louisiana Blues","Louisiana Swamp Pop","Lounge","Lounge Music","Lovers Rock","Low Bap","Lowercase","Luk Krung","Luk Thung","Lyrical Hip Hop","M-Base","Mafioso Rap","Mainstream Jazz","Mákina","Makossa","Maloya","Mambo","MandoPop","Manila Sound","Maracatu","Mariachi","Marrabenta","Math Rock","Mathcore","Mbalax","Mbaqanga","Mbube","Medieval Metal","Meditative","Melbourne Bounce","Melodic Death Metal","Melodic Metalcore","Memphis Blues","Merengue","MerenRap","Méringue","Metal","Metalcore","Mexican Pop","Mexican Son","Miami Bass","Microhouse","Middle of the road","Midwest Hip Hop","Minimal Techno","Minimal Wave","Modal Jazz","Moombahcore","Moombahton","Morlam","Morna","Mosambique","Motswako","Música Criolla","Música Popular Brasileira","Música Sertaneja","Musical","Musique Concrète","Nagoya Kei","Nashville Sound","National Folk","Native American","NDW","Ndombolo","NederPop","Neo Soul","Neo-Bop Jazz","Neo-Psychedelia","Neo-Swing","Neoclassical","Neoclassical Metal","Neofolk","Neotraditional Country","Nerdcore","Neue Deutsche Welle","NeuroFunk","Neurohop","New Age","New Beat","New jack swing","New Jersey Hip Hop","New Prog","New Rave","New Romantic","New Romanticism","New School Hip Hop","New Wave","New-age Music","Nintendocore","Nitzhonot","No wave","Noise","Noise Rock","Noisegrind","Nortec","Norteño","Northern Soul","Novelty Ragtime","Nu Jazz","Nu Metal","Nu Skool Breaks","Nu-Breakz","Nu-Disco","Nu-Funk","Nu-Gaze","Nu-NRG","Nueva canción","Old School Hip Hop","Oldies","Opera","Operatic Pop","Orchestral Jazz","Original Pilipino Music","Other","Outlaw Country","Outsider House","P-Funk","Pagan Metal","Pagode","Paisley Underground","Palm-wine","Piedmont Blues","Pinoy Pop","Podcast","Political Hip Hop","Polka","Polsk Punk","Pop","Pop Punk","Pop Rap","Pop Rock","Pop Soul","Pop Sunda","Pop-Folk","Pop-Funk","Porn Groove","Porro","Post-Bop","Post-Disco","Post-Grunge","Post-Hardcore","Post-Metal","Post-Punk","Post-Punk Revival","Post-Rock","Power Ballad","Power Electronics","Power Metal","Power Noise","Power Pop","Powerviolence","Pranks","Primus","Progressive Bluegrass","Progressive Country","Progressive Folk","Progressive House","Progressive Metal","Progressive Pop","Progressive Rock","Progressive Trance","Protest Song","Psybient","Psychedelic","Psychedelic Folk","Psychedelic Pop","Psychedelic Rock","Psychedelic Trance","Psychobilly","Punkabilly","Psytrance","Punk","Punk Blues","Punk Jazz","Punk Rock","Punta","Punta Rock","R&B","Raga Rock","Ragga","Ragga Jungle","Raggacore","Ragini","Ragtime","Raï","Ranchera","Rap","Rap Metal","Rap Music","Rap Opera","Rap Rock","Rapcore","Rara tech","Rasin","Rave","Reactionary Bluegrass","Rebetiko","Red Dirt","Reggae","Reggae Español","Spanish Reggae","Reggae Fusion","Reggaestep","Reggaeton","Regional Mexican","Retro","Revival","Rhythm & Blues","Rhythmic Soul","Riot grrrl","Rock","Rock & Roll","Rock en Español","Rock in Opposition","Rockabilly","Rocksteady","Rumba","Russian Pop","Sadcore","Sakara","Salsa","Salsa romántica","Samba","Samba Rock","Sambass","Satire","Sawt","Schlager","Screamo","Sega","Seggae","Semba","Sertanejo","Shangaan electro","Shibuya-kei","Shoegaze","Showtunes","Singer-songwriter","Ska","Ska Jazz","Ska Punk","Skate Punk","Skiffle","Skweee","Slow Jam","Slow Rock","Slowcore","Sludge Metal","Smooth Jazz","Snap Music","Soca","Soft Rock","Son","Son Cubano","Sonata","Songo","Songo-Salsa","Sophisti-Pop","Soukous","Soul","Soul Blues","Soul Jazz","Sound Clip","Soundtrack","Southern Hip Hop","Southern Rock","Southern Soul","Space","Space Age Pop","Space Disco","Space Music","Space Rock","Speech","Speed garage","Speed Metal","Speedcore","St.Louis Blues","St.Louis Hip Hop","Stoner Rock","Straight-ahead Jazz","Street Punk","Stride Jazz","Sufi Rock","SungPoetry","Sunshine Pop","Suomisaundi","Surf Pop","Surf Rock","Swamp Blues","Swing","Symphonic black Metal","Symphonic Metal","Symphonic Rock","Symphony","Synthpop","SynthPop","Synthwave","Taarab","Tango","Tech House","Tech Trance","Techdombe","Technical death Metal","Techno","Techno-Industrial","Techstep","Tecno Brega","Tecnobrega","Teen Pop","Tejano","Terror","Texas Blues","Texas Country","Thai Pop","Third stream","Thrash Metal","Thrashcore","Timba","Top 40","Trad Jazz","Traditional Country Music","Traditional Pop Music","Trailer","Trance","Trance Music","TRap","TRapstep","Tribal","Tribal House","Trip hop","Trip-Hop","Trival","Trop Rock","Tropical","Tropical House","Tropicalia","TropiPop","Truck-driving Country","Turkish Pop","Turntablism","Twin Cities Hip Hop","Twoubadou","UK Funky","UK Garage","UK Hardcore","Unblack Metal","Underground Hip Hop","Uplifting Trance","Urban Pasifika","V-Pop","Vallenato","Vaporwave","Video game Music","Viking Metal","VisPop","Visual Kei","Vocal","Vocal Jazz","Vocal Trance","War Metal","Weltmusik","West Coast Blues","West Coast Hip Hop","West Coast Jazz","Western swing","Witch House","Wonky","Wonky Pop","World Fusion","World Music","Worldbeat","Zouglou","Zouk","Zouk-Lambada","Zydeco"],t.getKnownGenre=function(e){const r=n(e);return i||(i={},t.Genres.forEach(e=>{i[n(e)]=e})),i[r]},t.cleanGenre=function e(r){const a=[];return r.split("/").forEach(r=>{r=r.trim();const o=/\((\d+)\)/.exec(r);let d;if(o&&(d=parseInt(o[1],10),r=r.slice(0,o.index)+r.slice(o.index+o[0].length)),0===r.length&&void 0!==d){const e=s[d];e&&(r=e)}if(r.length>0){const s=n(r);let o;i||(i={},t.Genres.forEach(e=>{i[n(e)]=e})),i&&i[s]&&(o=i[s]),!o&&r.indexOf(" & ")>=0?r.split("&").forEach(t=>{t=e(t),a.indexOf(t)<0&&a.push(t)}):o?a.indexOf(o)<0&&a.push(o):a.indexOf(r)<0&&a.push(r)}}),a.join(" / ")}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(31);t.probe=function(e,t){return i(this,void 0,void 0,function*(){return s.spawnToolJson("ffprobe","FFPROBE_PATH",["-print_format","json","-show_error","-show_streams","-show_format",...t,e])})}},function(e,t){e.exports=require("jamp3/dist/lib/id3v1/id3v1_consts")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(1)),a=r(0);class o{constructor(e,t,r,i){this.artistStore=t,this.folderStore=r,this.trackStore=i,this.ignore=e.ignore.join("|")}removeArticles(e){const t=new RegExp("^(?:(?:"+this.ignore+")\\s+)?(.*)","gi").exec(e);return t?t[1]:e}getIndexChar(e,t){const r=(t||this.removeArticles(e)||"").trim().toUpperCase().charAt(0);return null===r.match(/[-!$%^&*()_+|~=`{}\[\]:\/;<>?,.@#\d]/)?r:"#"}buildArtistIndex(){return i(this,void 0,void 0,function*(){const e={groups:[],lastModified:Date.now()};return(yield this.artistStore.search({albumType:a.AlbumType.album})).forEach(t=>{const r={artist:t},i=this.getIndexChar(t.name,t.nameSort);let s=e.groups.find(e=>e.name===i);s||(s={name:i,entries:[]},e.groups.push(s)),s.entries.push(r)}),e.groups.forEach(e=>{e.entries.sort((e,t)=>e.artist.name.localeCompare(t.artist.name))}),e.groups.sort((e,t)=>e.name.localeCompare(t.name)),e})}getTotalTrackCount(e){return i(this,void 0,void 0,function*(){return this.trackStore.searchCount({inPath:e.path})})}buildFolderIndex(){return i(this,void 0,void 0,function*(){const e={groups:[],lastModified:Date.now()},t=yield this.folderStore.search({level:1});for(const r of t){const t=yield this.getTotalTrackCount(r),i={name:n.default.basename(r.path),nameSort:r.tag.artistSort||this.removeArticles(n.default.basename(r.path)),trackCount:t||0,folder:r},s=this.getIndexChar(i.name,i.nameSort);let a=e.groups.find(e=>e.name===s);a||(a={name:s,entries:[]},e.groups.push(a)),a.entries.push(i)}return e.groups.forEach(e=>{e.entries.sort((e,t)=>e.nameSort.localeCompare(t.nameSort))}),e.groups.sort((e,t)=>e.name.localeCompare(t.name)),e})}buildIndexes(){return i(this,void 0,void 0,function*(){return{folderIndex:yield this.buildFolderIndex(),artistIndex:yield this.buildArtistIndex()}})}}t.IndexTreeBuilder=o;t.IndexService=class{constructor(e,t,r,i){this.indexConfig=e,this.artistStore=t,this.folderStore=r,this.trackStore=i}buildIndexes(){return i(this,void 0,void 0,function*(){const e=new o(this.indexConfig,this.artistStore,this.folderStore,this.trackStore);this.cached=yield e.buildIndexes()})}getIndexes(e){return i(this,void 0,void 0,function*(){return!e&&this.cached||(yield this.buildIndexes()),this.cached})}getFolderIndex(e){return i(this,void 0,void 0,function*(){return(yield this.getIndexes(e)).folderIndex})}getArtistIndex(e){return i(this,void 0,void 0,function*(){return(yield this.getIndexes(e)).artistIndex})}filterFolderIndex(e,t){return e?{lastModified:t.lastModified,groups:t.groups.map(t=>({name:t.name,entries:t.entries.filter(t=>t.folder.rootID===e)})).filter(e=>e.entries.length>0)}:t}filterArtistIndex(e,t){return e?{lastModified:t.lastModified,groups:t.groups.map(t=>({name:t.name,entries:t.entries.filter(t=>t.artist.rootIDs.indexOf(e)>=0)})).filter(e=>e.entries.length>0)}:t}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(0),a=r(9),o=s(r(2)).default("MetaDataService");t.MetaDataService=class{constructor(e,t,r,i,s){this.folderStore=e,this.trackStore=t,this.albumStore=r,this.artistStore=i,this.audioModule=s}getInfo(e,t,r,s,n){return i(this,void 0,void 0,function*(){const a=this.audioModule;return e?{artist:(yield function(){return i(this,void 0,void 0,function*(){return t?a.mediaInfoArtistInfoByArtistID(t):r?a.mediaInfoArtistInfo(r):void 0})}())||{},topSongs:(yield function(){return i(this,void 0,void 0,function*(){return t?a.mediaInfoTopSongsByArtistID(t):r?a.mediaInfoTopSongs(r):void 0})}())||[],album:{}}:{artist:{},topSongs:[],album:(yield function(){return i(this,void 0,void 0,function*(){const e=yield function(){return i(this,void 0,void 0,function*(){if(s)return a.mediaInfoAlbumInfoByAlbumID(s)})}();return e||function(){return i(this,void 0,void 0,function*(){if(r&&n)return a.mediaInfoAlbumInfo(n,r)})}()})}())||{}}})}createFolderInfo(e){return i(this,void 0,void 0,function*(){return e.tag?e.tag.type===n.FolderType.artist?this.getInfo(!0,e.tag.mbArtistID,e.tag.artist,e.tag.mbAlbumID,e.tag.album):e.tag.type===n.FolderType.album||e.tag.type===n.FolderType.multialbum?this.getInfo(!1,e.tag.mbArtistID,e.tag.artist,e.tag.mbAlbumID,e.tag.album):void 0:{artist:{},album:{},topSongs:[]}})}createArtistInfo(e){return i(this,void 0,void 0,function*(){return this.getInfo(!0,e.mbArtistID,e.name,void 0,void 0)})}createAlbumInfo(e){return i(this,void 0,void 0,function*(){return this.getInfo(!1,e.mbArtistID,e.artist,e.mbAlbumID,e.name)})}createTrackInfo(e){return i(this,void 0,void 0,function*(){if(!e.tag)return{similar:[]};if(e.tag.mbTrackID){const t=yield this.audioModule.mediaInfoSimilarTrackByMBTrackID(e.tag.mbTrackID);if(t)return{similar:t}}else if(e.tag.artist&&e.tag.title){const t=yield this.audioModule.mediaInfoSimilarTrack(e.tag.title,e.tag.artist);if(t)return{similar:t}}return{similar:[]}})}updateArtistInfo(e){return i(this,void 0,void 0,function*(){let t;try{t=yield this.createArtistInfo(e)}catch(e){return o.error(e),{album:{},artist:{},topSongs:[]}}return t=t||{album:{},artist:{},topSongs:[]},e.info=t,yield this.artistStore.replace(e),t})}updateAlbumInfo(e){return i(this,void 0,void 0,function*(){let t;try{t=yield this.createAlbumInfo(e)}catch(e){return o.error(e),{album:{},artist:{},topSongs:[]}}return t=t||{album:{},artist:{},topSongs:[]},e.info=t,yield this.albumStore.replace(e),t})}updateTrackInfo(e){return i(this,void 0,void 0,function*(){let t;try{t=yield this.createTrackInfo(e)}catch(e){return o.error(e),{similar:[]}}return t=t||{similar:[]},e.info=t,yield this.trackStore.replace(e),t})}updateFolderInfo(e){return i(this,void 0,void 0,function*(){let t;try{t=yield this.createFolderInfo(e)}catch(e){return o.error(e),{album:{},artist:{},topSongs:[]}}return t=t||{album:{},artist:{},topSongs:[]},e.info=t,yield this.folderStore.replace(e),t})}getSimilarSongs(e){return i(this,void 0,void 0,function*(){const t=this.audioModule;function r(e){return i(this,void 0,void 0,function*(){return e.mbid?t.mediaInfoTopSongsByArtistID(e.mbid):e.name?t.mediaInfoTopSongs(e.name):void 0})}let s=[];for(const t of e){const e=yield r(t);e&&(s=s.concat(e.map(e=>({name:e.name,artist:e.artist,mbid:e.mbid,url:e.url,image:e.image}))))}return a.shuffle(s)})}getSimilarArtistTracks(e){return i(this,void 0,void 0,function*(){if(!e||0===e.length)return[];const t=yield this.getSimilarSongs(e),r=[],i=[],s=[];t.forEach(e=>{e.mbid?r.push(e):i.push(e)});const n=r.map(e=>e.mbid||"-").filter(e=>"-"!==e),a=yield this.trackStore.search({mbTrackIDs:n});r.forEach(e=>{const t=a.find(t=>t.tag.mbTrackID===e.mbid);t?s.push(t):i.push(e)});for(const e of i){const t=yield this.trackStore.searchOne({title:e.name,artist:e.artist.name});t&&s.push(t)}return s})}getFolderSimilarArtists(e,t){return i(this,void 0,void 0,function*(){if(!e.artist.similar)return[];const r=[],i={};e.artist.similar.forEach(e=>{e.name&&(r.push(e.name),i[e.name]={info:e})}),(yield this.folderStore.search({types:[n.FolderType.artist],artists:r})).forEach(e=>{const t=e.tag.artist||"";i[t]?i[t].folder=e:console.log("what? a child not in the name list?",e,i)});const s=[];return Object.keys(i).forEach(e=>{const r=i[e];if(r.folder){const t={name:e,folder:r.folder};s.push(t)}else if(t){const t={name:e};s.push(t)}}),s})}getSimilarArtists(e,t){return i(this,void 0,void 0,function*(){if(!e.artist.similar)return[];const r=[],i={};e.artist.similar.forEach(e=>{e.name&&(r.push(e.name),i[e.name]={info:e})}),(yield this.artistStore.search({names:r})).forEach(e=>{const t=e.name||"";i[t]?i[t].artist=e:console.log("what? a child not in the name list?",e,i)});const s=[];return Object.keys(i).forEach(e=>{const r=i[e];if(r.artist){const t={name:e,artist:r.artist};s.push(t)}else if(t){const t={name:e};s.push(t)}}),s})}getFolderArtistInfo(e,t,r){return i(this,void 0,void 0,function*(){let i=e.info;return i||(i=yield this.updateFolderInfo(e)),r&&i.artist.similar?{similar:yield this.getFolderSimilarArtists(i,t),info:i}:{info:i}})}getArtistInfos(e,t,r){return i(this,void 0,void 0,function*(){let i=e.info;return i||(i=yield this.updateArtistInfo(e)),r&&i.artist.similar?{similar:yield this.getSimilarArtists(i,t),info:i}:{info:i}})}getFolderInfo(e){return i(this,void 0,void 0,function*(){return e.info?e.info:this.updateFolderInfo(e)})}getAlbumInfo(e){return i(this,void 0,void 0,function*(){return e.info?e.info:this.updateAlbumInfo(e)})}getTrackInfo(e){return i(this,void 0,void 0,function*(){if(e.info)return e.info})}getTopTracks(e,t){return i(this,void 0,void 0,function*(){const t=yield this.folderStore.searchOne({types:[n.FolderType.artist],artist:e});if(!t)return[];let r=t.info;if(r||(r=yield this.updateFolderInfo(t)),r.topSongs&&r.topSongs.length>0){const e=[],t=[],i=[];r.topSongs.forEach(r=>{r.mbid?e.push(r):t.push(r)});const s=e.map(e=>e.mbid||"-").filter(e=>"-"!==e),n=yield this.trackStore.search({mbTrackIDs:s});e.forEach(e=>{const r=n.find(t=>t.tag.mbTrackID===e.mbid);r?i.push(r):t.push(e)});for(const e of t){const t=yield this.trackStore.searchOne({title:e.name,artist:e.artist.name});t&&i.push(t)}return i}return[]})}getAlbumSimilarTracks(e){return i(this,void 0,void 0,function*(){const t=yield this.getAlbumInfo(e);return t&&t.artist.similar?this.getSimilarArtistTracks(t.artist.similar):[]})}getArtistSimilarTracks(e){return i(this,void 0,void 0,function*(){const t=yield this.getArtistInfos(e,!1,!1);return t&&t.similar?this.getSimilarArtistTracks(t.similar):[]})}getFolderSimilarTracks(e){return i(this,void 0,void 0,function*(){const t=yield this.getFolderInfo(e);return t&&t.artist.similar?this.getSimilarArtistTracks(t.artist.similar):[]})}getTrackSimilarTracks(e){return i(this,void 0,void 0,function*(){const t=yield this.getTrackInfo(e);if(!t||!t.similar||0===t.similar.length)return[];const r=[],i=[],s=[];t.similar.forEach(e=>{e.mbid?r.push(e):i.push(e)});const n=r.map(e=>e.mbid||"-").filter(e=>"-"!==e),a=yield this.trackStore.search({mbTrackIDs:n});r.forEach(e=>{const t=a.find(t=>t.tag.mbTrackID===e.mbid);t?s.push(t):i.push(e)});for(const e of i){const t=yield this.trackStore.searchOne({title:e.name,artist:e.artist.name});t&&s.push(t)}return s})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(3),a=s(r(1)),o=r(65),d=r(7),c=r(21),u=r(66);t.UserService=class extends d.BaseStoreService{constructor(e,t,r,i,s,n,a){super(t),this.userAvatarPath=e,this.userStore=t,this.stateStore=r,this.playlistStore=i,this.bookmarkStore=s,this.playQueueStore=n,this.imageModule=a,this.cached={}}getUserImage(e,t,r){return i(this,void 0,void 0,function*(){if(e.avatar)return this.imageModule.get(e.id,a.default.join(this.userAvatarPath,e.avatar),t,r)})}setUserImage(e,t){return i(this,void 0,void 0,function*(){const r="avatar-"+e.id+".png",i=a.default.join(this.userAvatarPath,r);yield n.fileDeleteIfExists(i),yield this.imageModule.createAvatar(t,i),yield this.imageModule.clearImageCacheByID(e.id),e.avatar=r,e.avatarLastChanged=Date.now(),yield this.update(e)})}create(e){return i(this,void 0,void 0,function*(){return e.name&&0!==e.name.trim().length?(yield this.getByName(e.name))?Promise.reject(Error("Username already exists")):this.userStore.add(e):Promise.reject(Error("Invalid Username"))})}update(e){return i(this,void 0,void 0,function*(){yield this.userStore.replace(e),delete this.cached[e.id]})}remove(e){return i(this,void 0,void 0,function*(){delete this.cached[e.id],yield this.stateStore.removeByQuery({userID:e.id}),yield this.playlistStore.removeByQuery({userID:e.id}),yield this.bookmarkStore.removeByQuery({userID:e.id}),yield this.playQueueStore.removeByQuery({userID:e.id}),yield this.imageModule.clearImageCacheByID(e.id),yield this.userStore.remove(e.id),e.avatar&&(yield n.fileDeleteIfExists(a.default.join(this.userAvatarPath,e.avatar)))})}getByName(e){return i(this,void 0,void 0,function*(){if(!e||0===e.trim().length)return Promise.reject(Error("Invalid Username"));const t=Object.keys(this.cached);for(const r of t)if(this.cached[r].name===e)return this.cached[r];const r=yield this.userStore.searchOne({name:e});return r&&(this.cached[r.id]=r),r})}getByID(e){return i(this,void 0,void 0,function*(){let t=this.cached[e];return t||((t=yield this.userStore.byId(e))&&(this.cached[e]=t),t)})}auth(e,t){return i(this,void 0,void 0,function*(){if(!t||!t.length)return Promise.reject(Error("Invalid Password"));const r=yield this.getByName(e);return r?c.hashSalt(t,r.salt)!==r.hash?Promise.reject(Error("Invalid Password")):r:Promise.reject(Error("Invalid Username"))})}authToken(e,t,r){return i(this,void 0,void 0,function*(){if(!e||0===e.trim().length)return Promise.reject(Error("Invalid Username"));if(!t||!t.length)return Promise.reject(Error("Invalid Token"));const i=yield this.getByName(e);if(!i)return Promise.reject(Error("Invalid Username"));const s=o.Md5.init(i.subsonic_pass+r);return t!==s?Promise.reject(Error("Invalid Token")):i})}clearCache(){this.cached={}}setUserPassword(e,t){return i(this,void 0,void 0,function*(){yield this.testPassword(t);const r=c.hashSaltPassword(t);e.salt=r.salt,e.hash=r.hash,yield this.userStore.replace(e),delete this.cached[e.id]})}testPassword(e){return i(this,void 0,void 0,function*(){return e&&e.trim().length?e.length<4?Promise.reject(Error("Password is too short")):u(e)?Promise.reject(Error("Your password is found in the most frequently used password list and too easy to guess")):void 0:Promise.reject(Error("Invalid Password"))})}setUserEmail(e,t){return i(this,void 0,void 0,function*(){if(!t||!t.trim().length)return Promise.reject(Error("Invalid Email"));e.email=t,yield this.userStore.replace(e),delete this.cached[e.id]})}}},function(e,t){e.exports=require("md5-typescript")},function(e,t){e.exports=require("common-password-checker")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(13));t.ChatService=class{constructor(e){this.chatConfig=e,this.messages=[],this.duration=n.default.duration(this.chatConfig.maxAge.value,this.chatConfig.maxAge.unit)}cleanOld(){return i(this,void 0,void 0,function*(){const e=n.default().subtract(this.duration).valueOf();this.messages=this.messages.filter(t=>e<t.time)})}find(e){return i(this,void 0,void 0,function*(){return this.messages.find(t=>t.time===e)})}remove(e){return i(this,void 0,void 0,function*(){this.messages=this.messages.filter(t=>t.time!==e.time)})}get(e){return i(this,void 0,void 0,function*(){yield this.cleanOld();let t=this.messages;return void 0===e||isNaN(e)||(t=t.filter(t=>t.time>e)),t})}add(e,t){return i(this,void 0,void 0,function*(){yield this.cleanOld();const r={message:e,time:Date.now(),username:t.name,userID:t.id};return this.messages.push(r),this.messages.length>this.chatConfig.maxMsgs&&this.messages.shift(),r})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});t.GenreService=class{constructor(e){this.trackStore=e,this.genres=[]}refresh(){return i(this,void 0,void 0,function*(){const e={};yield this.trackStore.iterate(t=>i(this,void 0,void 0,function*(){for(const r of t){const t=r.tag.genre||"[No genre]",i=e[t]||{roots:{}},s=i.roots[r.rootID]||{count:0,artists:{},albums:{}};s.count++,r.artistID&&(s.artists[r.artistID]=(s.artists[r.artistID]||0)+1),r.albumID&&(s.albums[r.albumID]=(s.albums[r.albumID]||0)+1),i.roots[r.rootID]=s,e[t]=i}})),this.genres=Object.keys(e).map(t=>{const r=e[t];return{name:t,sections:Object.keys(r.roots).map(e=>{const t=r.roots[e];return{rootID:e,artistCount:Object.keys(t.artists).length,albumCount:Object.keys(t.albums).length,trackCount:t.count}})}})})}getGenres(e){return i(this,void 0,void 0,function*(){return 0===this.genres.length&&(yield this.refresh()),this.genres.map(t=>{const r={name:t.name,albumCount:0,artistCount:0,trackCount:0};return t.sections.forEach(t=>{e&&t.rootID!==e||(r.albumCount+=t.albumCount,r.artistCount+=t.artistCount,r.trackCount+=t.trackCount)}),r}).filter(e=>e.trackCount>0)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(70),a=s(r(2)),o=r(0),d=r(18),c=r(10),u=a.default("PodcastService");t.PodcastService=class extends c.BaseListService{constructor(e,t,r){super(e,r),this.podcastStore=e,this.episodeService=t,this.podcastRefreshDebounce=new d.DebouncePromises}isDownloading(e){return this.podcastRefreshDebounce.isPending(e)}create(e){return i(this,void 0,void 0,function*(){const t={id:"",type:o.DBObjectType.podcast,created:Date.now(),lastCheck:0,url:e,status:o.PodcastStatus.new};return t.id=yield this.podcastStore.add(t),t})}remove(e){return i(this,void 0,void 0,function*(){yield this.podcastStore.remove(e.id),yield this.episodeService.removeEpisodes(e.id)})}refresh(e){return i(this,void 0,void 0,function*(){if(this.podcastRefreshDebounce.isPending(e.id))return this.podcastRefreshDebounce.append(e.id);this.podcastRefreshDebounce.setPending(e.id);try{u.debug("Refreshing Podcast",e.url);const t=new n.Feed;let r=[];try{const i=yield t.get(e);i&&(e.tag=i.tag,r=i.episodes),e.status=o.PodcastStatus.completed,e.errorMessage=void 0}catch(t){u.info("Refreshing Podcast failed",t),e.status=o.PodcastStatus.error,e.errorMessage=(t||"").toString()}e.lastCheck=Date.now(),yield this.podcastStore.replace(e);const i=yield this.episodeService.mergeEpisodes(e.id,r);u.info(e.url+": New Episodes: "+i.length),yield this.podcastRefreshDebounce.resolve(e.id,void 0)}catch(t){return yield this.podcastRefreshDebounce.resolve(e.id,void 0),Promise.reject(t)}})}refreshPodcasts(){return i(this,void 0,void 0,function*(){u.info("Refreshing");const e=yield this.podcastStore.all();for(const t of e)yield this.refresh(t);u.info("Refreshed")})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(71)),a=s(r(17)),o=s(r(72)),d=s(r(73)),c=r(0);t.Feed=class{constructor(){}getParams(e){return e.split(";").reduce((e,t)=>{const r=t.split("=").map(function(e){return e.trim()});return 2===r.length&&(e[r[0]]=r[1]),e},{})}maybeDecompress(e,t,r){let i;return t.match(/\bdeflate\b/)?(i=n.default.createInflate()).on("error",r):t.match(/\bgzip\b/)&&(i=n.default.createGunzip()).on("error",r),i?e.pipe(i):e}maybeTranslate(e,t,r){if(t&&!/utf-*8/i.test(t))try{const i=d.default.decodeStream(t);i.on("error",r),e=e.pipe(i)}catch(t){e.emit("error",t)}return e}fetch(e){return i(this,void 0,void 0,function*(){const t=[];let r,i=!1;const s=a.default(e,{timeout:1e4,pool:!1});s.setMaxListeners(50),s.setHeader("user-agent","Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36"),s.setHeader("accept","text/html,application/xhtml+xml");const n=new o.default({});return n.on("readable",function(){const e=n;r=e.meta;let i=e.read();for(;i;)t.push(i),i=e.read()}),new Promise((e,a)=>{const o=s=>{i||(i=!0,s?a(s):e({feed:r,posts:t}))};s.on("error",o),s.on("response",e=>{if(200!==e.statusCode)return s.abort(),o(new Error("Bad status code "+e.statusCode+(e.statusMessage?" "+e.statusMessage:"")));const t=e.headers["content-encoding"]||"identity",r=this.getParams(e.headers["content-type"]||"").charset;let i=this.maybeDecompress(e,t,o);(i=this.maybeTranslate(i,r,o)).pipe(n)}),n.on("error",o),n.on("end",o)})})}get(e){return i(this,void 0,void 0,function*(){const t=yield this.fetch(e.url),r={title:t.feed.title,description:t.feed.description,link:t.feed.link,author:t.feed.author,generator:t.feed.generator,image:t.feed.image&&t.feed.image.url?t.feed.image.url:void 0,categories:t.feed.categories};return t.feed["itunes:summary"]&&t.feed["itunes:summary"]["#"]&&(r.description=t.feed["itunes:summary"]["#"]),{tag:r,episodes:t.posts.map(t=>{let r=[];const i=t["psc:chapters"];if(i){const e=i["psc:chapter"];e&&(r=e.map(e=>e["@"]))}return{id:"",podcastID:e.id,status:c.PodcastStatus.new,type:c.DBObjectType.episode,author:t.author,link:t.link,guid:t.guid,summary:t.summary,enclosures:t.enclosures,date:t.date?t.date.valueOf():0,name:t.title,chapters:r}})}})}}},function(e,t){e.exports=require("zlib")},function(e,t){e.exports=require("feedparser")},function(e,t){e.exports=require("iconv-lite")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0);t.NowPlayingService=class{constructor(e){this.stateService=e,this.playing=[]}getNowPlaying(){return i(this,void 0,void 0,function*(){return this.playing})}clear(){this.playing=[]}reportEpisode(e,t){return i(this,void 0,void 0,function*(){this.playing=this.playing.filter(e=>e.user.id!==t.id),this.playing.push({time:Date.now(),obj:e,user:t}),yield this.stateService.reportPlaying(e.id,s.DBObjectType.episode,t.id),yield this.stateService.reportPlaying(e.podcastID,s.DBObjectType.podcast,t.id)})}reportTrack(e,t){return i(this,void 0,void 0,function*(){this.playing=this.playing.filter(e=>e.user.id!==t.id),this.playing.push({time:Date.now(),obj:e,user:t}),yield this.stateService.reportPlaying(e.id,s.DBObjectType.track,t.id),yield this.stateService.reportPlaying(e.albumID,s.DBObjectType.album,t.id),yield this.stateService.reportPlaying(e.artistID,s.DBObjectType.artist,t.id),yield this.stateService.reportPlaying(e.parentID,s.DBObjectType.folder,t.id)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(7);t.RootService=class extends s.BaseStoreService{constructor(e){super(e),this.rootStore=e}checkUsedPath(e,t){return i(this,void 0,void 0,function*(){for(const r of t)if(0===e.indexOf(r.path)||0===r.path.indexOf(e))return Promise.reject(Error("Root path already used"))})}create(e){return i(this,void 0,void 0,function*(){const t=yield this.rootStore.all();return yield this.checkUsedPath(e.path,t),this.rootStore.add(e)})}update(e){return i(this,void 0,void 0,function*(){const t=yield this.rootStore.all();yield this.checkUsedPath(e.path,t.filter(t=>t.id!==e.id)),yield this.rootStore.replace(e)})}remove(e){return i(this,void 0,void 0,function*(){yield this.rootStore.remove(e.id)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(7);t.PlayQueueService=class extends n.BaseStoreService{constructor(e){super(e),this.playQueueStore=e}getQueueOrCreate(e,t){return i(this,void 0,void 0,function*(){let r=yield this.get(e);return r||((r=this.emptyPlaylist(e,t)).id=yield this.playQueueStore.add(r)),r})}emptyPlaylist(e,t){return{id:"",type:s.DBObjectType.playqueue,userID:e,trackIDs:[],changed:Date.now(),changedBy:t||"Unknown Client"}}get(e){return i(this,void 0,void 0,function*(){return this.playQueueStore.searchOne({userID:e})})}save(e,t,r,n,a){return i(this,void 0,void 0,function*(){let i=yield this.playQueueStore.searchOne({userID:e});return i?(i.trackIDs=t,i.currentID=r,i.position=n,i.changed=Date.now(),i.changedBy=a||"Unknown Client",yield this.playQueueStore.replace(i)):(i={id:"",type:s.DBObjectType.playqueue,userID:e,trackIDs:t,currentID:r,position:n,changed:Date.now(),changedBy:a||"Unknown Client"}).id=yield this.playQueueStore.add(i),i})}remove(e){return i(this,void 0,void 0,function*(){const t=yield this.get(e);t&&(yield this.playQueueStore.remove(t.id))})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(1)),a=s(r(2)),o=r(18),d=r(78),c=s(r(6)),u=a.default("WaveformService");t.WaveformService=class{constructor(e){this.waveformCachePath=e,this.waveformCacheDebounce=new o.DebouncePromises}getCacheID(e,t){return"waveform-"+e+"."+t}generateWaveform(e,t){return i(this,void 0,void 0,function*(){const r=new d.WaveformGenerator;switch(t){case"svg":return{buffer:{buffer:Buffer.from(yield r.svg(e)),contentType:"image/svg+xml"}};case"json":return{json:yield r.json(e)};case"dat":return{buffer:{buffer:yield r.binary(e),contentType:"application/binary"}}}return Promise.reject(Error("Invalid Format for Waveform generation"))})}clearWaveformCacheByIDs(e){return i(this,void 0,void 0,function*(){const t=e.filter(e=>e.length>0).map(e=>this.getCacheID(e,""));if(t.length>0){let e=yield c.default.readdir(this.waveformCachePath);e=e.filter(e=>t.findIndex(t=>0===e.indexOf(t))>=0);for(const t of e)yield c.default.unlink(n.default.resolve(this.waveformCachePath,t))}})}get(e,t,r){return i(this,void 0,void 0,function*(){if(!t||!(yield c.default.pathExists(t)))return Promise.reject(Error("Invalid filename for waveform generation"));const i=this.getCacheID(e,r);if(this.waveformCacheDebounce.isPending(i))return this.waveformCacheDebounce.append(i);this.waveformCacheDebounce.setPending(i);try{let e;const s=n.default.join(this.waveformCachePath,i);return(yield c.default.pathExists(s))?e={file:{filename:s,name:i}}:(e=yield this.generateWaveform(t,r)).buffer?(u.debug("Writing waveform cache file",s),yield c.default.writeFile(s,e.buffer.buffer)):e.json&&(u.debug("Writing waveform cache file",s),yield c.default.writeFile(s,JSON.stringify(e.json))),yield this.waveformCacheDebounce.resolve(i,e),e}catch(e){return yield this.waveformCacheDebounce.reject(i,e),Promise.reject(e)}})}getTrackWaveform(e,t){return i(this,void 0,void 0,function*(){return yield this.get(e.id,n.default.join(e.path,e.name),t)})}getEpisodeWaveform(e,t){return i(this,void 0,void 0,function*(){return e.path&&e.media?yield this.get(e.id,e.path,t):Promise.reject(Error("Podcast episode not ready"))})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(79)),a=s(r(22)),o=r(80),d=s(r(2)),c=s(r(33)),u=r(81),p=d.default("Waveform");class m extends o.Transform{constructor(e,t){super({writableObjectMode:!1,readableObjectMode:!0,highWaterMark:1024}),this._buf=new o.PassThrough,this._out=new o.PassThrough,this._started=!1,this._min=null,this._max=null,this._samples=0,this._total=0,this._samplesPerPixel=null!=e?e:256,this._sampleRate=null!=t?t:44100;const r={source:this._buf};this._ffmpeg=c.default(r).addOptions(["-f s16le","-ac 1","-acodec pcm_s16le","-ar "+this._sampleRate]),this._ffmpeg.on("start",e=>(p.debug("ffmpeg started with "+e),this._started=!0,this.emit("_started")));let i=!1;this._ffmpeg.on("error",e=>"ENOENT"===e.code?(i=!0,p.debug("ffmpeg failed to start."),this.emit("done","ffmpeg failed to start")):(i=!0,p.debug("ffmpeg decoding error: "+e),this.emit("done","ffmpeg decoding error: "+e))),this._ffmpeg.on("end",()=>{if(!i)return this.emit("done")}),this._ffmpeg.writeToStream(this._out),this._out.on("readable",()=>this.start())}start(){let e,t,r=null,i=this._out.read();for(;i&&i.length>0;)e=0,null!=r?(t=i.readInt8(0,!0)<<8|r,r=null,e=1):(t=i.readInt16LE(0,!0),e=2),this.readResults(t,e,i),i=this._out.read()}readResults(e,t,r){const i=r.length;for(;this._min=null===this._min?e:Math.min(this._min,e),this._max=null===this._max?e:Math.max(this._max,e),this._samples+=1,this._samples===this._samplesPerPixel&&(this.push([Math.round(this._min),Math.round(this._max)]),this._min=null,this._max=null,this._samples=0),!(t>=i);)e=r.readInt16LE(t,!0),t+=2}_transform(e,t,r){return this._total+=e.length,this._started?this._buf.write(e,t,r):this.once("_started",()=>this._buf.write(e,t,r))}_flush(e){return this._buf.end(),this._out.once("end",()=>(this._samples>0&&this.push([this._min,this._max]),e()))}}class l{constructor(e,t){this.stream=e,this.opts=t,this._samples=[],this.opts=Object.assign({samplesPerPixel:256,sampleRate:44100},t||{})}run(e){const t=new m(this.opts.samplesPerPixel,this.opts.sampleRate);t.on("readable",()=>{let e=t.read();for(;e&&e.length>0;)this._samples.push(e[0]),this._samples.push(e[1]),e=t.read()}),t.on("done",t=>{e(t)}),this.stream.pipe(t)}asBinary(){const e=Buffer.alloc(20+2*this._samples.length);e.writeInt32LE(1,0),e.writeUInt32LE(0,4),e.writeInt32LE(this.opts.sampleRate,8),e.writeInt32LE(this.opts.samplesPerPixel,12),e.writeInt32LE(this._samples.length/2,16);let t=20;return this._samples.forEach(r=>{e.writeInt16LE(r,t),t+=2}),e}asJSON(){return{version:1,sample_rate:this.opts.sampleRate,samples_per_pixel:this.opts.samplesPerPixel,bits:16,length:this._samples.length/2,data:this._samples}}}t.WaveformGenerator=class{binary(e){return i(this,void 0,void 0,function*(){return(yield this.generateWaveform(e)).asBinary()})}json(e){return i(this,void 0,void 0,function*(){return(yield this.generateWaveform(e)).asJSON()})}svg(e){return i(this,void 0,void 0,function*(){const t=yield this.json(e),r=this.buildSvg(t),i=new n.default;return(yield i.optimize(r)).data})}generateWaveform(e){return i(this,void 0,void 0,function*(){const t=a.default.createReadStream(e);return new Promise((e,r)=>{const i=new l(t,{samplesPerPixel:256,sampleRate:44100});i.run(t=>{t?r(t):e(i)})})})}buildSvg(e){if(e.data.length>0){let t=u.create(e);(t=Math.floor(t.duration*t.adapter.sample_rate/8e3)<256?t.resample({width:8e3,scale:256}):t.resample({width:8e3})).adapter.data.data=t.adapter.data.data.slice(0,8e3),e=t.adapter.data}const t=e.data.length,r=[];for(let i=0;i<t;i++){const t=e.data[i]/256+128;i%2==0?r.push(`M${~~(i/2)}, ${t}`):r.push(`L${~~(i/2)}, ${t}`)}return`<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<svg xmlns="http://www.w3.org/2000/svg" xml:space="preserve" version="1.1" preserveAspectRatio="none"\n     viewBox="0 0 4000 256" style="fill-rule:evenodd;clip-rule:evenodd;">\n\t\t<path stroke="green" d="${r.join(" ")}" />\n</svg>`}}},function(e,t){e.exports=require("svgo")},function(e,t){e.exports=require("stream")},function(e,t){e.exports=require("waveform-data")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(83),a=r(3),o=s(r(1)),d=s(r(6)),c=r(4);t.StreamService=class{constructor(){}streamFile(e,t,r,s,o){return i(this,void 0,void 0,function*(){if(!(yield d.default.pathExists(e)))return Promise.reject(Error("File not found"));"."===(s=s||"mp3")[0]&&(s=s.slice(1));const i=o||0;return"raw"!==s&&n.Transcoder.needsTranscoding(r||a.fileSuffix(e),s,i)?n.Transcoder.validTranscoding(s)?{pipe:new n.PreTranscoder(e,s,i)}:Promise.reject(Error("Unsupported transcoding format")):{file:{filename:e,name:t+"."+s}}})}streamTrack(e,t,r,s){return i(this,void 0,void 0,function*(){return this.streamFile(o.default.join(e.path,e.name),e.id,e.media.format,t,r)})}streamEpisode(e,t,r,s){return i(this,void 0,void 0,function*(){return e.path&&e.media?this.streamFile(e.path,e.id,e.media.format,t,r):Promise.reject(c.GenericError("Podcast episode not ready"))})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},n=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const a=s(r(33)),o=s(r(84)),d=s(r(2)),c=n(r(22)),u=r(16),p=d.default("audio.transcoder");t.Transcoder=class{constructor(e,t,r,i){this.filename=e,this.format=t,this.maxBitRate=r,this.duration=i,r<=0&&(this.maxBitRate=128)}static needsTranscoding(e,t,r){return t!==e||r>0}static validTranscoding(e){return u.SupportedTranscodeAudioFormat.indexOf(e)>=0}static getAvailableFormats(){return i(this,void 0,void 0,function*(){return new Promise((e,t)=>{a.default().getAvailableFormats((r,i)=>{if(r||!i)return t(r);e(Object.keys(i).filter(e=>i[e].canDemux).map(e=>({format:e,name:i[e].description})))})})})}pipe(e){p.info("Start transcode streaming",this.format,this.maxBitRate);const t=a.default({source:this.filename,nolog:!0});"mp3"===this.format&&t.withAudioCodec("libmp3lame"),t.withNoVideo().toFormat(this.format).withAudioBitrate(this.maxBitRate+"k").on("end",()=>{p.debug("file has been transcoded successfully")}).on("error",e=>{p.error("an error happened while transcoding: "+e.message)}),e.contentType(this.format),t.writeToStream(e,{end:!0})}};t.PreTranscoder=class{constructor(e,t,r){this.filename=e,this.format=t,this.maxBitRate=r,r<=0&&(this.maxBitRate=128)}pipe(e){p.info("Start transcode first and stream after",this.format,this.maxBitRate),o.default.file((t,r,i,s)=>{if(t)throw t;const n=a.default({source:this.filename,nolog:!0});"mp3"===this.format&&n.withAudioCodec("libmp3lame"),n.withNoVideo().toFormat(this.format).withAudioBitrate(this.maxBitRate+"k").on("end",()=>{p.info("file has been transcoded successfully, sending it now"),e.contentType(this.format),e.setHeader("Content-Length",c.statSync(r).size);const t=c.createReadStream(r,{autoClose:!0});t.on("end",()=>{s()}),t.on("error",()=>{s()}),t.pipe(e)}).on("error",t=>{s();const r="an error happened while transcoding: "+t.message;e.status(400).send(r),p.error(r)}),n.save(r)})}}},function(e,t){e.exports=require("tmp")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(7);t.BookmarkService=class extends n.BaseStoreService{constructor(e){super(e),this.bookmarkStore=e}getAll(e){return i(this,void 0,void 0,function*(){return yield this.bookmarkStore.search({userID:e})})}get(e,t){return i(this,void 0,void 0,function*(){return yield this.bookmarkStore.searchOne({userID:t,destID:e})})}create(e,t,r,n){return i(this,void 0,void 0,function*(){let i=yield this.bookmarkStore.searchOne({destID:e,userID:t});return i?(i.comment=n,i.position=r,i.changed=Date.now(),yield this.bookmarkStore.replace(i)):(i={id:"",type:s.DBObjectType.bookmark,destID:e,userID:t,position:r,comment:n,created:Date.now(),changed:Date.now()}).id=yield this.bookmarkStore.add(i),i})}remove(e,t){return i(this,void 0,void 0,function*(){yield this.bookmarkStore.removeByQuery({destID:e,userID:t})})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(7);t.StateService=class extends n.BaseStoreService{constructor(e){super(e),this.stateStore=e}emptyState(e,t,r){return{id:"",type:s.DBObjectType.state,destID:e,destType:t,played:0,lastplayed:0,faved:void 0,rated:0,userID:r}}fav(e,t,r,s){return i(this,void 0,void 0,function*(){const i=yield this.findOrCreate(e,r,t);if(s){if(void 0===i.faved)return i;i.faved=void 0}else{if(void 0!==i.faved)return i;i.faved=Date.now()}return 0===i.id.length?yield this.stateStore.add(i):yield this.stateStore.replace(i),i})}rate(e,t,r,s){return i(this,void 0,void 0,function*(){const i=yield this.findOrCreate(e,r,t);return i.rated=0===s?void 0:s,0===i.id.length?yield this.stateStore.add(i):yield this.stateStore.replace(i),i})}findOrCreate(e,t,r){return i(this,void 0,void 0,function*(){return(yield this.stateStore.searchOne({userID:t,destID:e,type:r}))||this.emptyState(e,r,t)})}findOrCreateMany(e,t,r){return i(this,void 0,void 0,function*(){if(!e||0===e.length)return{};const i=yield this.stateStore.search({userID:t,type:r,destIDs:e}),s={};return i.forEach(e=>{s[e.destID]=e}),e.forEach(e=>{s[e]||(s[e]=this.emptyState(e,r,t))}),s})}getHighestRatedDestIDs(e,t){return i(this,void 0,void 0,function*(){return(yield this.stateStore.search({userID:t,type:e,minRating:1})).filter(e=>void 0!==e.rated).sort((e,t)=>t.rated-e.rated).map(e=>e.destID)})}getAvgHighestDestIDs(e){return i(this,void 0,void 0,function*(){const t=yield this.stateStore.search({type:e}),r={};return t.forEach(e=>{void 0!==e.rated&&(r[e.destID]=r[e.destID]||[],r[e.destID].push(e.rated))}),Object.keys(r).map(e=>({id:e,avg:r[e].reduce((e,t)=>e+t,0)/r[e].length})).sort((e,t)=>t.avg-e.avg).map(e=>e.id)})}getFrequentlyPlayedDestIDs(e,t){return i(this,void 0,void 0,function*(){const r=yield this.stateStore.search({userID:t,type:e,isPlayed:!0});return r.sort((e,t)=>t.played-e.played),r.map(e=>e.destID)})}getFavedDestIDs(e,t){return i(this,void 0,void 0,function*(){const r=yield this.stateStore.search({userID:t,type:e,isFaved:!0});return r.sort((e,t)=>t.faved-e.faved),r.map(e=>e.destID)})}getRecentlyPlayedDestIDs(e,t){return i(this,void 0,void 0,function*(){const r=yield this.stateStore.search({userID:t,type:e,isPlayed:!0});return r.sort((e,t)=>t.lastplayed-e.lastplayed),r.map(e=>e.destID)})}reportPlaying(e,t,r){return i(this,void 0,void 0,function*(){const i=yield this.findOrCreate(e,r,t);return i.played++,i.lastplayed=Date.now(),yield this.stateStore.upsert([i]),i})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(0),a=s(r(1));t.ImageService=class{constructor(e,t,r,i,s,n){this.imageModule=e,this.trackService=t,this.folderService=r,this.artistService=i,this.albumService=s,this.userService=n}getObjImage(e,t,r){return i(this,void 0,void 0,function*(){let i;switch(e.type){case n.DBObjectType.track:const s=e;i=yield this.trackService.getTrackImage(s,t,r);break;case n.DBObjectType.folder:const a=e;i=yield this.folderService.getFolderImage(a,t,r);break;case n.DBObjectType.artist:const o=e;i=yield this.artistService.getArtistImage(o,t,r);break;case n.DBObjectType.album:const d=e;i=yield this.albumService.getAlbumImage(d,t,r);break;case n.DBObjectType.user:const c=e;i=yield this.userService.getUserImage(c,t,r)}return i||this.paintImage(e,t,r)})}paintImage(e,t,r){return i(this,void 0,void 0,function*(){const i=(e=>{switch(e.type){case n.DBObjectType.track:const t=e;return t.tag&&t.tag.title?t.tag.title:a.default.basename(t.path);case n.DBObjectType.folder:const r=e;let i;return r.tag&&(r.tag.type===n.FolderType.artist?i=r.tag.artist:[n.FolderType.multialbum,n.FolderType.album].indexOf(r.tag.type)>=0&&(i=r.tag.album)),i&&0!==i.length||(i=a.default.basename(r.path)),i;case n.DBObjectType.episode:const s=e;let o=s.tag?s.tag.title:void 0;return!o&&s.path&&(o=a.default.basename(s.path)),o||(o="podcast"),o;case n.DBObjectType.playlist:return e.name;case n.DBObjectType.podcast:const d=e;return d.tag?d.tag.title:d.url;case n.DBObjectType.album:case n.DBObjectType.artist:case n.DBObjectType.user:return e.name;default:return n.DBObjectType[e.type]}})(e);return this.imageModule.paint(i,t||128,r)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(1)),a=r(89),o=r(0);t.DownloadService=class{constructor(e){this.trackStore=e}downloadEpisode(e,t){return i(this,void 0,void 0,function*(){return e.path?{pipe:new a.CompressListStream([e.path],n.default.basename(e.path),t)}:Promise.reject(Error("Podcast episode not ready"))})}downloadTrack(e,t){return i(this,void 0,void 0,function*(){return{pipe:new a.CompressListStream([n.default.join(e.path,e.name)],n.default.basename(e.name),t)}})}downloadFolder(e,t){return i(this,void 0,void 0,function*(){return{pipe:new a.CompressFolderStream(e.path,n.default.basename(e.path),t)}})}downloadArtist(e,t){return i(this,void 0,void 0,function*(){const r=(yield this.trackStore.byIds(e.trackIDs)).map(e=>n.default.join(e.path,e.name));return{pipe:new a.CompressListStream(r,e.name,t)}})}downloadAlbum(e,t){return i(this,void 0,void 0,function*(){const r=(yield this.trackStore.byIds(e.trackIDs)).map(e=>n.default.join(e.path,e.name));return{pipe:new a.CompressListStream(r,e.name,t)}})}downloadPlaylist(e,t,r){return i(this,void 0,void 0,function*(){if(e.userID!==r.id&&!e.isPublic)return Promise.reject(Error("Unauthorized"));const i=(yield this.trackStore.byIds(e.trackIDs)).map(e=>n.default.join(e.path,e.name));return{pipe:new a.CompressListStream(i,e.name,t)}})}getObjDownload(e,t,r){return i(this,void 0,void 0,function*(){switch(e.type){case o.DBObjectType.track:return this.downloadTrack(e,t);case o.DBObjectType.folder:return this.downloadFolder(e,t);case o.DBObjectType.artist:return this.downloadArtist(e,t);case o.DBObjectType.album:return this.downloadAlbum(e,t);case o.DBObjectType.episode:return this.downloadEpisode(e,t);case o.DBObjectType.playlist:return this.downloadPlaylist(e,t,r)}return Promise.reject(Error("Invalid Download Type"))})}}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t};Object.defineProperty(t,"__esModule",{value:!0});const n=i(r(90)),a=s(r(1)),o=r(3);class d{constructor(e,t){if(this.streaming=!0,this.filename=o.replaceFileSystemChars(e,"_").replace(/ /g,"_"),this.format=t||"zip",!c.isSupportedFormat(this.format))throw new Error("Unsupported Download Format")}static isSupportedFormat(e){return["zip","tar"].indexOf(e)>=0}pipe(e){const t=n.default(this.format,{zlib:{level:0}});t.on("error",e=>{throw e}),e.contentType("zip"),e.setHeader("Content-Disposition",'attachment; filename="'+(this.filename||"download")+'.zip"'),e.on("finish",()=>{this.streaming=!1}),t.pipe(e),this.run(t),t.finalize()}}t.CompressFolderStream=class extends d{constructor(e,t,r){super(t,r),this.folder=e}run(e){e.directory(this.folder,!1)}};class c extends d{constructor(e,t,r){super(t,r),this.list=[],this.list=e}run(e){this.list.forEach(t=>{e.file(t,{name:a.basename(t)})})}}t.CompressListStream=c},function(e,t){e.exports=require("archiver")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(7);t.RadioService=class extends n.BaseStoreService{constructor(e){super(e),this.radioStore=e}create(e,t,r){return i(this,void 0,void 0,function*(){const i={id:"",type:s.DBObjectType.radio,name:e,homepage:r,url:t,created:Date.now(),changed:Date.now()};return i.id=yield this.radioStore.add(i),i})}update(e,t,r,s){return i(this,void 0,void 0,function*(){e.homepage=s||e.homepage,e.url=r||e.url,e.name=t||e.name,e.changed=Date.now(),yield this.radioStore.replace(e)})}remove(e){return i(this,void 0,void 0,function*(){yield this.radioStore.remove(e.id)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(3),a=s(r(1)),o=s(r(6)),d=s(r(2)),c=r(0),u=r(10),p=d.default("FolderService");t.FolderService=class extends u.BaseListService{constructor(e,t,r,i){super(e,r),this.folderStore=e,this.trackStore=t,this.imageModule=i}renameFolder(e,t){return i(this,void 0,void 0,function*(){if(0===(t=n.cleanFolderSystemChars(t,"").trim()).length)return Promise.reject(Error("Invalid Name"));const r=a.default.dirname(e.path),i=a.default.join(r,t);if(yield o.default.pathExists(i))return Promise.reject(Error("Directory already exists"));yield o.default.rename(e.path,i);const s=yield this.folderStore.search({inPath:e.path});for(const t of s){const r=t.path.slice(e.path.length-1);r.length>0&&r[0]!==a.default.sep?p.error("WRONG inPath MATCH",r,e.path,t.path):(t.path=i+n.ensureTrailingPathSeparator(r),yield this.folderStore.replace(t))}const d=yield this.trackStore.search({inPath:e.path});for(const t of d)t.path=t.path.replace(e.path,n.ensureTrailingPathSeparator(i)),yield this.trackStore.replace(t);e.path=n.ensureTrailingPathSeparator(i)})}collectFolderPath(e){return i(this,void 0,void 0,function*(){const t=[],r=this.folderStore;return yield function e(s){return i(this,void 0,void 0,function*(){if(!s)return;const i=yield r.byId(s);i&&(t.unshift(i),yield e(i.parentID))})}(e),t})}getFolderImage(e,t,r){return i(this,void 0,void 0,function*(){if(e.tag.image||(e.info&&e.info.album.image&&e.info.album.image.large?yield this.downloadFolderImage(e,e.info.album.image.large):e.info&&e.info.artist.image&&e.info.artist.image.large&&(yield this.downloadFolderImage(e,e.info.artist.image.large)),e.tag.image))return yield this.imageModule.get(e.id,a.default.join(e.path,e.tag.image),t,r)})}downloadFolderImage(e,t){return i(this,void 0,void 0,function*(){e.tag.image=yield this.imageModule.storeImage(e.path,c.FolderTypeImageName[e.tag.type],t),yield this.folderStore.replace(e)})}setFolderImage(e,t){return i(this,void 0,void 0,function*(){const r=c.FolderTypeImageName[e.tag.type]+a.default.extname(t),i=a.default.join(e.path,r);yield n.fileDeleteIfExists(i),yield o.default.copy(t,i),e.tag.image=r,yield this.folderStore.replace(e)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(1)),a=s(r(2)),o=r(34),d=r(3),c=s(r(95)),u=s(r(96)),p=r(18),m=s(r(6)),l=r(16),y=a.default("Images");t.ImageModule=class{constructor(e){this.imageCachePath=e,this.format="png",this.imageCacheDebounce=new p.DebouncePromises}storeImage(e,t,r){return i(this,void 0,void 0,function*(){y.debug("Requesting image",r);const i=n.default.extname(r).split("?")[0].trim().toLowerCase();if(0===i.length)return Promise.reject(Error("Invalid Image Url"));const s=t+i;return yield o.downloadFile(r,n.default.join(e,s)),y.info("image downloaded",s),s})}paint(e,t,r){return i(this,void 0,void 0,function*(){t=t||320;const i=new c.default(360,360,"#282828");this.font||(this.font=yield c.default.loadFont(c.default.FONT_SANS_32_WHITE)),i.print(this.font,10,10,{text:e,alignmentX:c.default.HORIZONTAL_ALIGN_CENTER,alignmentY:c.default.VERTICAL_ALIGN_MIDDLE},340,340),i.resize(t,t);const s=u.default.lookup(r||this.format);return s?{buffer:{buffer:yield i.getBufferAsync(s),contentType:s}}:Promise.reject("Unknown Image Format Request")})}getImage(e,t,r){return i(this,void 0,void 0,function*(){let i=n.default.extname(e);return"."===i[0]&&(i=i.slice(1)),this.getImageAs(e,i,t,r)})}getImageAs(e,t,r,s){return i(this,void 0,void 0,function*(){let i=n.default.extname(e);if("."===i[0]&&(i=i.slice(1)),!(yield m.default.pathExists(e)))return Promise.reject(Error("File not found"));if(r||i!==t){const i=yield c.default.read(e),s=u.default.lookup(t);return s?(r&&(i.crop(1,1,i.getWidth()-2,i.getHeight()-2),i.contain(r,r)),{buffer:{buffer:yield i.getBufferAsync(s),contentType:s}}):Promise.reject("Unknown Image Format Request")}return{file:{filename:e,name:s}}})}get(e,t,r,s){return i(this,void 0,void 0,function*(){if(!t)return Promise.reject(Error("Invalid Path"));if(s&&l.SupportedWriteImageFormat.indexOf(s)<0)return Promise.reject(Error("Invalid Format"));if(!s&&!r)return this.getImage(t,r,e+"."+(s||this.format));{const i="thumb-"+e+(r?"-"+r:"")+"."+(s||this.format);if(this.imageCacheDebounce.isPending(i))return this.imageCacheDebounce.append(i);this.imageCacheDebounce.setPending(i);try{let e;const a=n.default.join(this.imageCachePath,i);return(yield m.default.pathExists(a))?e={file:{filename:a,name:i}}:(e=s?yield this.getImageAs(t,s,r,i):yield this.getImage(t,r,i)).buffer&&(y.debug("Writing image cache file",a),yield m.default.writeFile(a,e.buffer.buffer)),yield this.imageCacheDebounce.resolve(i,e),e}catch(e){return yield this.imageCacheDebounce.reject(i,e),Promise.reject(e)}}})}resizeImage(e,t,r){return i(this,void 0,void 0,function*(){const i=yield c.default.read(e);i.contain(r,r),yield i.writeAsync(t)})}clearImageCacheByIDs(e){return i(this,void 0,void 0,function*(){const t=e.filter(e=>e.length>0).map(e=>"thumb-"+e);if(t.length>0){let e=yield m.default.readdir(this.imageCachePath);e=e.filter(e=>t.findIndex(t=>0===e.indexOf(t))>=0);for(const t of e)yield m.default.unlink(n.default.resolve(this.imageCachePath,t))}})}clearImageCacheByID(e){return i(this,void 0,void 0,function*(){if(0===e.length)return;const t="thumb-"+e;let r=yield m.default.readdir(this.imageCachePath);r=r.filter(e=>0===e.indexOf(t));for(const e of r)yield m.default.unlink(n.default.resolve(this.imageCachePath,e))})}createAvatar(e,t){return i(this,void 0,void 0,function*(){return e?(yield m.default.pathExists(e))?(yield this.resizeImage(e,e+".new",64),yield d.fileDeleteIfExists(t),void(yield m.default.rename(e+".new",t))):Promise.reject(Error("File not found")):Promise.reject(Error("Invalid Path"))})}}},function(e,t){e.exports=require("http")},function(e,t){e.exports=require("jimp")},function(e,t){e.exports=require("mime-types")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(10);t.TrackService=class extends s.BaseListService{constructor(e,t,r){super(e,r),this.trackStore=e,this.folderService=t}getTrackFolder(e){return i(this,void 0,void 0,function*(){return yield this.folderService.folderStore.byId(e.parentID)})}getTrackImage(e,t,r){return i(this,void 0,void 0,function*(){const i=yield this.getTrackFolder(e);if(i)return this.folderService.getFolderImage(i,t,r)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(10);t.ArtistService=class extends n.BaseListService{constructor(e,t,r,i){super(e,i),this.artistStore=e,this.trackStore=t,this.folderService=r}getArtistFolder(e){return i(this,void 0,void 0,function*(){if(0===e.trackIDs.length)return;const t=yield this.trackStore.byId(e.trackIDs[0]);if(!t)return;const r=yield this.folderService.collectFolderPath(t.parentID);if(0===r.length)return;let i=r.find(e=>e.tag.type===s.FolderType.artist);return i||(i=r[r.length-1]),i})}getArtistImage(e,t,r){return i(this,void 0,void 0,function*(){const i=yield this.getArtistFolder(e);if(i)return this.folderService.getFolderImage(i,t,r)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(10);t.AlbumService=class extends n.BaseListService{constructor(e,t,r,i){super(e,i),this.albumStore=e,this.trackStore=t,this.folderService=r}getAlbumImage(e,t,r){return i(this,void 0,void 0,function*(){const i=yield this.getAlbumFolder(e);if(i)return this.folderService.getFolderImage(i,t,r)})}getAlbumFolder(e){return i(this,void 0,void 0,function*(){if(0===e.trackIDs.length)return;const t=yield this.trackStore.byId(e.trackIDs[0]);if(!t)return;let r=yield this.folderService.collectFolderPath(t.parentID);if(0===r.length)return;let i=(r=r.sort((e,t)=>t.tag.level-e.tag.level))[0];for(const e of r){if(!(s.FolderTypesAlbum.indexOf(e.tag.type)>=0))break;i=e}return i})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(3),a=r(16),o=s(r(1)),d=s(r(2)),c=r(34),u=s(r(6)),p=r(0),m=r(18),l=r(10),y=d.default("EpisodeService");t.EpisodeService=class extends l.BaseListService{constructor(e,t,r,i){super(t,r),this.podcastsPath=e,this.episodeStore=t,this.audioModule=i,this.episodeDownloadDebounce=new m.DebouncePromises}isDownloading(e){return this.episodeDownloadDebounce.isPending(e)}downloadEpisodeFile(e){return i(this,void 0,void 0,function*(){let t="";if(!(e.enclosures&&e.enclosures.length>0))throw new Error("No podcast episode url found");t=e.enclosures[0].url;const r=n.fileSuffix(t);if(a.SupportedAudioFormat.indexOf(r)<0)throw new Error("Unsupported Podcast audio format");const i=o.default.resolve(this.podcastsPath,e.podcastID);yield u.default.ensureDir(i);const s=o.default.join(i,e.id+"."+r);return y.info("retrieving file",t),yield c.downloadFile(t,s),s})}downloadEpisode(e){return i(this,void 0,void 0,function*(){if(this.episodeDownloadDebounce.isPending(e.id))return this.episodeDownloadDebounce.append(e.id);this.episodeDownloadDebounce.setPending(e.id);try{try{const t=yield this.downloadEpisodeFile(e),r=yield u.default.stat(t),i=yield this.audioModule.read(t);e.status=p.PodcastStatus.completed,e.tag=i.tag,e.media=i.media,e.stat={created:r.ctime.valueOf(),modified:r.mtime.valueOf(),size:r.size},e.path=t}catch(t){e.status=p.PodcastStatus.error,e.error=(t||"").toString()}yield this.episodeStore.replace(e),yield this.episodeDownloadDebounce.resolve(e.id,void 0)}catch(t){return yield this.episodeDownloadDebounce.resolve(e.id,void 0),Promise.reject(t)}})}removeEpisodes(e){return i(this,void 0,void 0,function*(){const t=yield this.episodeStore.search({podcastID:e}),r=t.map(e=>e.id);yield this.episodeStore.remove(r);for(const e of t)e.path&&(yield n.fileDeleteIfExists(e.path));const i=o.default.resolve(this.podcastsPath,e);yield n.pathDeleteIfExists(i)})}deleteEpisode(e){return i(this,void 0,void 0,function*(){e.path&&(yield n.fileDeleteIfExists(e.path),e.path=void 0,e.stat=void 0,e.media=void 0,e.status=p.PodcastStatus.deleted,yield this.episodeStore.replace(e))})}mergeEpisodes(e,t){return i(this,void 0,void 0,function*(){if(!t||!t.length)return[];const r=(yield this.episodeStore.search({podcastID:e})).map(e=>e.link);return t=t.filter(e=>r.indexOf(e.link)<0),yield this.episodeStore.upsert(t),t})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(23);t.userAgent="JamServe/"+i.JAMSERVE_VERSION,t.ThirdPartyConfig={acoustid:{apiKey:"xuwbosoqd4",userAgent:t.userAgent},lastfm:{apiKey:"ead198fb293eefea29e8a5b8f0908e55",userAgent:t.userAgent},musicbrainz:{userAgent:t.userAgent+" ( jamserve@protonmail.com )"},chartlyrics:{userAgent:t.userAgent}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(24)),a=s(r(103)),o=r(104),d=r(155),c=s(r(1)),u=s(r(2)),p=s(r(165)),m=u.default("Server");t.Server=class{constructor(e){this.engine=e;const t=n.default();t.use(a.default.urlencoded({extended:!0,limit:"10mb"})),t.use(a.default.json({})),t.use(a.default.json({type:"application/vnd.api+json"})),t.use(p.default()),t.use(function(t,r,i){t.engine=e,i()}),t.use("/api/v1",o.initJamRouter(e)),t.use("/rest",d.initSubsonicRouter(e)),t.get("/assets/config/config.js",(e,t)=>{t.sendFile(c.default.resolve("./config/jamberry.config.js"))}),t.get("/*",n.default.static(c.default.resolve(e.config.paths.frontend))),t.get("/*",(t,r)=>{r.sendFile(c.default.join(c.default.resolve(e.config.paths.frontend),"index.html"))}),this.app=t}getURL(){return"http://"+("127.0.0.1"===this.engine.config.server.listen?"localhost":this.engine.config.server.listen)+":"+this.engine.config.server.port}start(){return i(this,void 0,void 0,function*(){this.server=this.app.listen(this.engine.config.server.port,this.engine.config.server.listen),m.info("Listening "+this.getURL())})}stop(){return i(this,void 0,void 0,function*(){return new Promise((e,t)=>{this.server?this.server.close(e):e()})})}}},function(e,t){e.exports=require("body-parser")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(24)),a=r(105),o=r(25),d=s(r(106)),c=s(r(1)),u=s(r(2)),p=r(107),m=s(r(37)),l=r(141),y=s(r(38)),f=s(r(142)),h=s(r(143)),g=s(r(144)),b=s(r(145)),v=r(4),q=r(146),S=r(147),I=r(152),k=r(27),A=r(23),D=r(153),$=r(154)({windowMs:36e5,max:5,message:"Too many login requests from this IP, please try again after an hour"}),w=u.default("Jam.Api");function j(e,t,r){f.default.authenticate("local",(i,s,n)=>{if(i||!s)return r();e.login(s,i=>{if(i)return w.error(i),r();const n=e.body.client||"Unknown Client";e.client=n;const a=I.getMaxAge(e.engine.config.server.jwt.maxAge),d={id:s.id,exp:a>0?Math.floor((Date.now()+a)/1e3):void 0,client:n},c=b.default.sign(d,e.engine.config.server.jwt.secret),u={version:A.JAMAPI_VERSION,allowedCookieDomains:e.engine.config.server.session.allowedCookieDomains,jwt:c,user:k.formatUser(e.user)};o.ApiResponder.data(t,u)})})(e,t,r)}function T(e,t,r){e.logout(),o.ApiResponder.ok(t)}function P(e,t){return i(this,void 0,void 0,function*(){if(t&&t.length>0)for(const r of t)if(!e.roles[r])return Promise.reject(v.UnauthError())})}t.initJamRouter=function(e){const t=new p.JamController(e),r=e.config.getDataPath(["cache","uploads"]),s=d.default({dest:`${r}/`}),u=n.default.Router(),b=I.getMaxAge(e.config.server.session.cookie.maxAge);u.use(y.default({name:e.config.server.session.cookie.name,secret:e.config.server.session.secret,store:new l.SessionJSONFileStore(e.config.getDataPath(["session","sessions.json"])),resave:!1,saveUninitialized:!1,cookie:{secure:e.config.server.session.cookie.secure,maxAge:b>0?b:void 0}})),u.use(f.default.initialize()),u.use(f.default.session()),f.default.serializeUser((e,t)=>{t(null,e.id)}),f.default.deserializeUser((t,r)=>{e.userService.getByID(t).then(e=>r(null,e||!1)).catch(r)}),f.default.use("local",new g.default.Strategy({usernameField:"username",passwordField:"password"},(t,r,i)=>{e.userService.auth(t,r).then(e=>i(null,e||!1)).catch(i)})),f.default.use("jwt-header",new h.default.Strategy({jwtFromRequest:h.default.ExtractJwt.fromAuthHeaderAsBearerToken(),secretOrKey:e.config.server.jwt.secret},(t,r)=>{e.userService.getByID(t.id).then(e=>r(null,e||!1,t)).catch(r)})),f.default.use("jwt-parameter",new h.default.Strategy({jwtFromRequest:h.default.ExtractJwt.fromUrlQueryParameter("bearer"),secretOrKey:e.config.server.jwt.secret},(t,r)=>{e.userService.getByID(t.id).then(e=>r(null,e||!1,t)).catch(r)})),u.use((e,t,r)=>{w.info(e.originalUrl),r()}),u.use(function(e,t,r){if(e.user)return r();f.default.authenticate("jwt-header",{session:!1},(t,i,s)=>{if(t)return w.error(t),r();e.jwt=!!i,e.client=s.client,e.user=i,r()})(e,t,r)}),u.use(function(e,t,r){if(e.user)return r();f.default.authenticate("jwt-parameter",{session:!1},(t,i,s)=>{if(t)return w.error(t),r();e.jwt=!!i,e.client=s.client,e.user=i,r()})(e,t,r)}),u.use(m.default({preflightContinue:!1,credentials:!0,allowedHeaders:["Content-Type","Authorization"],origin:!0,methods:["GET","POST"]}));const k={get:(e,t,r,s)=>{u.get(e,S.apiCheck(r||e),(e,r)=>i(this,void 0,void 0,function*(){try{yield P(e.user,s),yield t(e,r)}catch(e){yield o.ApiResponder.error(r,e)}}))},post:(e,t,r,s)=>{u.post(e,S.apiCheck(r||e),(e,r)=>i(this,void 0,void 0,function*(){try{yield P(e.user,s),yield t(e,r)}catch(e){yield o.ApiResponder.error(r,e)}}))},upload:(e,t,r,n,a)=>{u.post(e,S.apiCheck(n||e),s.single(t),D,(e,t)=>i(this,void 0,void 0,function*(){try{yield P(e.user,a),yield r(e,t)}catch(e){yield o.ApiResponder.error(t,e)}}))}};return q.registerPublicApi(k,t),u.post("/login",$,S.apiCheck("/login"),j),u.use(m.default(function(t,r){const i=e.config.server.session.allowedCookieDomains||[];r(null,{preflightContinue:!1,credentials:!0,allowedHeaders:["Content-Type","Authorization"],origin:function(e,r){-1===i.indexOf(e)&&e?"OPTIONS"===t.method||t.jwt?r(null,!0):r(new Error("Not allowed by CORS")):r(null,!0)},methods:["GET","POST"]})})),u.post("/logout",T),u.use("/docs",n.default.static(c.default.resolve("./dist/docs/api/"))),u.use(a.CheckAuthMiddleWare),q.registerAccessControlApi(k,t),u.use((e,t,r)=>{o.ApiResponder.error(t,v.NotFoundError("jam api cmd not found"))}),u}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CheckAuthMiddleWare=function(e,t,r){return!e.client&&e.session&&e.session.client&&(e.client=e.session.client),e.user?r():t.status(401).json({error:"Unauthorized"})}},function(e,t){e.exports=require("multer")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(108),n=r(109),a=r(111),o=r(113),d=r(115),c=r(117),u=r(118),p=r(120),m=r(122),l=r(123),y=r(125),f=r(126),h=r(27),g=r(127),b=r(129),v=r(131),q=r(132),S=r(133),I=r(134),k=r(135),A=r(137),D=r(139),$=r(23);t.JamController=class{constructor(e){this.engine=e,this.streamController=new f.StreamController(this.engine.streamService,this.engine.nowPlayingService,this.engine.store),this.chatController=new l.ChatController(this.engine.chatService),this.genreController=new g.GenreController(e.genreService),this.nowPlayingController=new b.NowPlayingController(e.nowPlayingService),this.imageController=new v.ImageController(this.engine.store,this.engine.imageService),this.downloadController=new q.DownloadController(this.engine.store,this.engine.downloadService),this.waveformController=new S.WaveformController(this.engine.store,this.engine.waveformService),this.autocompleteController=new I.AutocompleteController(this.engine.store),this.radioController=new D.RadioController(this.engine.radioService,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.rootController=new p.RootController(this.engine.rootService,this.engine.ioService,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.trackController=new c.TrackController(this.engine.trackService,this.engine.audioModule,this.engine.bookmarkService,this.engine.metaDataService,this.streamController,this.engine.ioService,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.episodeController=new s.EpisodeController(this.engine.episodeService,this.streamController,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.podcastController=new n.PodcastController(this.engine.podcastService,this.episodeController,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.albumController=new a.AlbumController(this.engine.albumService,this.trackController,this.engine.metaDataService,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.artistController=new o.ArtistController(this.engine.artistService,this.trackController,this.albumController,this.engine.metaDataService,this.engine.indexService,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.folderController=new u.FolderController(this.engine.folderService,this.trackController,this.engine.metaDataService,this.engine.indexService,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.userController=new m.UserController(this.engine.userService,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.playlistController=new d.PlaylistController(this.engine.playlistService,this.trackController,this.engine.stateService,this.engine.imageService,this.engine.downloadService),this.bookmarkController=new k.BookmarkController(this.engine.bookmarkService,this.trackController),this.playqueueController=new A.PlayQueueController(this.engine.playQueueService,this.trackController),this.metadataController=new y.MetadataController(this.engine.audioModule,this.trackController)}ping(e){return i(this,void 0,void 0,function*(){return{version:$.JAMAPI_VERSION}})}session(e){return i(this,void 0,void 0,function*(){return e.user?{version:$.JAMAPI_VERSION,allowedCookieDomains:this.engine.config.server.session.allowedCookieDomains,user:h.formatUser(e.user)}:{version:$.JAMAPI_VERSION,allowedCookieDomains:this.engine.config.server.session.allowedCookieDomains}})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(35),a=r(8),o=r(11);t.EpisodeController=class extends o.BaseListController{constructor(e,t,r,i,s){super(e,r,i,s),this.episodeService=e,this.streamController=t,this.stateService=r,this.imageService=i,this.downloadService=s}defaultSort(e){return e.sort((e,t)=>{if(!e.tag)return-1;if(!t.tag)return 1;if(void 0!==e.tag.track&&void 0!==t.tag.track){const r=e.tag.track-t.tag.track;if(0!==r)return r}return e.date-t.date})}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=n.formatEpisode(e,t,this.episodeService.isDownloading(e.id)?s.PodcastStatus.downloading:e.status);if(t.trackState){const t=yield this.stateService.findOrCreate(e.id,r.id,s.DBObjectType.episode);i.state=a.formatState(t)}return i})}translateQuery(e,t){return{query:e.query,name:e.name,podcastID:e.podcastID,status:e.status,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}retrieve(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);t.path||this.episodeService.downloadEpisode(t)})}stream(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return yield this.streamController.streamEpisode(t,e.query.format,e.query.maxBitRate,e.user)})}status(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return{status:this.episodeService.isDownloading(t.id)?s.PodcastStatus.downloading:t.status}})}list(e){return i(this,void 0,void 0,function*(){return this.getList(e.query,e.query,e.query,e.user)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(110),a=r(8),o=r(11);t.PodcastController=class extends o.BaseListController{constructor(e,t,r,i,s){super(e,r,i,s),this.podcastService=e,this.episodeController=t,this.stateService=r,this.imageService=i,this.downloadService=s}defaultSort(e){return e.sort((e,t)=>(e.tag&&e.tag.title?e.tag.title:e.url).localeCompare(t.tag&&t.tag.title?t.tag.title:t.url))}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=n.formatPodcast(e,this.podcastService.isDownloading(e.id)?s.PodcastStatus.downloading:e.status);if(t.podcastState){const t=yield this.stateService.findOrCreate(e.id,r.id,s.DBObjectType.podcast);i.state=a.formatState(t)}return t.podcastEpisodes&&(i.episodes=yield this.episodeController.prepareByQuery({podcastID:e.id},t,r)),i})}translateQuery(e,t){return{query:e.query,url:e.url,title:e.title,status:e.status,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}tracks(e){return i(this,void 0,void 0,function*(){return this.episodeController.prepareByQuery({podcastIDs:e.query.ids},e.query,e.user)})}refreshAll(e){return i(this,void 0,void 0,function*(){this.podcastService.refreshPodcasts()})}refresh(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);this.podcastService.refresh(t)})}create(e){return i(this,void 0,void 0,function*(){const t=yield this.podcastService.create(e.query.url);return this.prepare(t,{},e.user)})}delete(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);yield this.podcastService.remove(t)})}status(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return{lastCheck:t.lastCheck,status:this.podcastService.isDownloading(t.id)?s.PodcastStatus[s.PodcastStatus.downloading]:s.PodcastStatus[t.status]}})}list(e){return i(this,void 0,void 0,function*(){return this.getList(e.query,e.query,e.query,e.user)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatPodcast=function(e,t){return{id:e.id,url:e.url,created:e.created,lastCheck:e.lastCheck>0?e.lastCheck:void 0,status:t,errorMessage:e.errorMessage,name:e.tag?e.tag.title:e.url,description:e.tag?e.tag.description:void 0}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(12),a=r(11),o=r(112);t.AlbumController=class extends a.BaseListController{constructor(e,t,r,i,s,n){super(e,i,s,n),this.albumService=e,this.trackController=t,this.metaDataService=r,this.stateService=i,this.imageService=s,this.downloadService=n}defaultSort(e){return e.sort((e,t)=>e.name.localeCompare(t.name))}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=o.formatAlbum(e,t);if(t.albumState&&(i.state=yield this.stateService.findOrCreate(e.id,r.id,s.DBObjectType.album)),t.albumInfo){const t=yield this.metaDataService.getAlbumInfo(e);i.info=o.formatAlbumInfo(t)}return t.albumTracks&&(i.tracks=yield this.trackController.prepareListByIDs(e.trackIDs,t,r)),i})}translateQuery(e,t){return{query:e.query,name:e.name,rootID:e.rootID,artist:e.artist,artistID:e.artistID,trackID:e.trackID,mbAlbumID:e.mbAlbumID,mbArtistID:e.mbArtistID,genre:e.genre,newerThan:e.newerThan,fromYear:e.fromYear,toYear:e.toYear,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}similarTracks(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=yield this.metaDataService.getAlbumSimilarTracks(t);return this.trackController.prepareList(n.paginate(r,e.query.amount,e.query.offset),e.query,e.user)})}list(e){return i(this,void 0,void 0,function*(){return this.getList(e.query,e.query,e.query,e.user)})}tracks(e){return i(this,void 0,void 0,function*(){const t=yield this.byIDs(e.query.ids);let r=[];return t.forEach(e=>{r=r.concat(e.trackIDs)}),this.trackController.prepareListByIDs(r,e.query,e.user)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatAlbumInfo=function(e){return{description:e.album.description,lastFmUrl:e.album.url,releases:e.album.releases,smallImageUrl:e.album.image&&e.album.image.small?e.album.image.small:void 0,mediumImageUrl:e.album.image&&e.album.image.medium?e.album.image.medium:void 0,largeImageUrl:e.album.image&&e.album.image.large?e.album.image.large:void 0}},t.formatAlbum=function(e,t){let r={artistID:e.mbArtistID,albumID:e.mbAlbumID};return Object.keys(r).find(e=>!!r[e])||(r=void 0),{id:e.id,name:e.name,albumType:e.albumType,created:e.created,artist:e.artist,artistID:e.artistID,trackCount:e.trackIDs.length,tag:{genre:e.genre,year:e.year,duration:e.duration,created:e.created,musicbrainz:r},trackIDs:t.albumTrackIDs?e.trackIDs:void 0}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(12),a=r(11),o=r(114),d=r(8),c=r(36);t.ArtistController=class extends a.BaseListController{constructor(e,t,r,i,s,n,a,o){super(e,n,a,o),this.artistService=e,this.trackController=t,this.albumController=r,this.metaDataService=i,this.indexService=s,this.stateService=n,this.imageService=a,this.downloadService=o}defaultSort(e){return e.sort((e,t)=>e.name.localeCompare(t.name))}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=o.formatArtist(e,t);if(t.artistState){const t=yield this.stateService.findOrCreate(e.id,r.id,s.DBObjectType.artist);i.state=d.formatState(t)}if(t.artistInfo){const r=yield this.metaDataService.getArtistInfos(e,!1,!!t.artistInfoSimilar);if(i.info=o.formatArtistInfo(r.info),t.artistInfoSimilar){const e=[];(r.similar||[]).forEach(r=>{r.artist&&e.push(o.formatArtist(r.artist,t))}),i.info.similar=e}}return t.artistTracks&&(i.tracks=yield this.trackController.prepareListByIDs(e.trackIDs,t,r)),t.artistAlbums&&(i.albums=yield this.albumController.prepareListByIDs(e.albumIDs,t,r)),i})}translateQuery(e,t){return{query:e.query,name:e.name,rootID:e.rootID,albumID:e.albumID,mbArtistID:e.mbArtistID,newerThan:e.newerThan,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}similar(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=((yield this.metaDataService.getArtistInfos(t,!1,!0)).similar||[]).filter(e=>!!e.artist).map(e=>e.artist);return this.prepareList(r,e.query,e.user)})}similarTracks(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=yield this.metaDataService.getArtistSimilarTracks(t);return this.trackController.prepareList(n.paginate(r,e.query.amount,e.query.offset),e.query,e.user)})}list(e){return i(this,void 0,void 0,function*(){return this.getList(e.query,e.query,e.query,e.user)})}index(e){return i(this,void 0,void 0,function*(){const t=yield this.indexService.getArtistIndex(!1);return c.formatArtistIndex(this.indexService.filterArtistIndex(e.query.rootID,t))})}tracks(e){return i(this,void 0,void 0,function*(){const t=yield this.byIDs(e.query.ids);let r=[];return t.forEach(e=>{r=r.concat(e.trackIDs)}),this.trackController.prepareListByIDs(r,e.query,e.user)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatArtistInfo=function(e){return{description:e.artist.description,lastFmUrl:e.album.url,smallImageUrl:e.album.image&&e.album.image.small?e.album.image.small:void 0,mediumImageUrl:e.album.image&&e.album.image.medium?e.album.image.medium:void 0,largeImageUrl:e.album.image&&e.album.image.large?e.album.image.large:void 0}},t.formatArtist=function(e,t){let r={artistID:e.mbArtistID};return Object.keys(r).find(e=>!!r[e])||(r=void 0),{id:e.id,name:e.name,albumCount:e.albumIDs.length,albumTypes:e.albumTypes,albumIDs:t.artistAlbumIDs?e.albumIDs:void 0,trackIDs:t.artistTracksIDs?e.trackIDs:void 0,trackCount:e.trackIDs.length,created:e.created,musicbrainz:r}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(14),n=r(0),a=r(4),o=r(8),d=r(116);t.PlaylistController=class extends s.BaseController{constructor(e,t,r,i,s){super(e,r,i,s),this.playlistService=e,this.trackController=t,this.stateService=r,this.imageService=i,this.downloadService=s}defaultSort(e){return e.sort((e,t)=>e.name.localeCompare(t.name))}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=d.formatPlaylist(e,t);if(t.playlistState){const t=yield this.stateService.findOrCreate(e.id,r.id,n.DBObjectType.artist);i.state=o.formatState(t)}return t.playlistTracks&&(i.tracks=yield this.trackController.prepareListByIDs(e.trackIDs,t,r)),i})}translateQuery(e,t){return{query:e.query,name:e.name,userID:t.id,isPublic:e.isPublic,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}create(e){return i(this,void 0,void 0,function*(){const t=yield this.playlistService.create(e.query.name,e.query.comment,void 0!==e.query.isPublic&&e.query.isPublic,e.user.id,e.query.trackIDs||[]);return this.prepare(t,{playlistTracksIDs:!0,playlistState:!0},e.user)})}update(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);if(t.userID!==e.user.id)return Promise.reject(a.UnauthError());t.name=e.query.name||t.name,t.comment=e.query.comment||t.comment,t.isPublic=void 0===e.query.isPublic?t.isPublic:e.query.isPublic,t.changed=Date.now(),t.trackIDs=e.query.trackIDs||[],yield this.playlistService.update(t)})}tracks(e){return i(this,void 0,void 0,function*(){let t=yield this.byIDs(e.query.ids);t=t.filter(t=>t.userID===e.user.id);let r=[];return t.forEach(e=>{r=r.concat(e.trackIDs)}),this.trackController.prepareListByIDs(r,e.query,e.user)})}delete(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);if(t.userID!==e.user.id)return Promise.reject(a.UnauthError());yield this.playlistService.remove(t)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatPlaylist=function(e,t){return{id:e.id,name:e.name,userID:e.userID,comment:e.comment,isPublic:e.isPublic,duration:e.duration,created:e.created,changed:e.changed,trackCount:e.trackIDs.length,trackIDs:t.playlistTracksIDs?e.trackIDs:void 0}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(0),a=s(r(1)),o=r(4),d=r(12),c=r(11),u=r(26),p=r(8);t.TrackController=class extends c.BaseListController{constructor(e,t,r,i,s,n,a,o,d){super(e,a,o,d),this.trackService=e,this.audioModule=t,this.bookmarkService=r,this.metaService=i,this.streamController=s,this.ioService=n,this.stateService=a,this.imageService=o,this.downloadService=d}defaultSort(e){return e.sort((e,t)=>{if(void 0!==e.tag.track&&void 0!==t.tag.track){const r=e.tag.track-t.tag.track;if(0!==r)return r}return e.name.localeCompare(t.name)})}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=u.formatTrack(e,t);if(t.trackID3&&(i.tagID3=yield this.audioModule.readID3v2(a.default.join(e.path,e.name))),t.trackState){const t=yield this.stateService.findOrCreate(e.id,r.id,n.DBObjectType.track);i.state=p.formatState(t)}return i})}translateQuery(e,t){return{query:e.query,rootID:e.rootID,parentID:e.parentID,artist:e.artist,title:e.title,album:e.album,genre:e.genre,newerThan:e.newerThan,fromYear:e.fromYear,toYear:e.toYear,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}tagID3(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return this.audioModule.readID3v2(a.default.join(t.path,t.name))})}tagID3s(e){return i(this,void 0,void 0,function*(){let t=yield this.byIDs(e.query.ids);t=this.defaultSort(t);const r={};for(const e of t)r[e.id]=yield this.audioModule.readID3v2(a.default.join(e.path,e.name));return r})}tagID3Update(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);yield this.audioModule.saveID3v2(a.default.join(t.path,t.name),e.query.tag),this.ioService.refreshTracks([t])})}tagID3sUpdate(e){return i(this,void 0,void 0,function*(){const t=yield this.byIDs(e.query.tagID3s.map(e=>e.id)),r=e.query.tagID3s.map(e=>({track:t.find(t=>t.id===e.id),tag:e.tag}));for(const e of r){if(!e.track)return Promise.reject(o.NotFoundError());yield this.audioModule.saveID3v2(a.default.join(e.track.path,e.track.name),e.tag)}this.ioService.refreshTracks(t)})}stream(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return yield this.streamController.streamTrack(t,e.query.format,e.query.maxBitRate,e.user)})}similar(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=yield this.metaService.getTrackSimilarTracks(t);return this.prepareList(d.paginate(r,e.query.amount,e.query.offset),e.query,e.user)})}list(e){return i(this,void 0,void 0,function*(){return this.getList(e.query,e.query,e.query,e.user)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(0),a=r(4),o=r(12),d=r(11),c=r(119),u=r(8),p=r(36),m=s(r(1)),l=r(3);const y={FOLDER_TAG_MISSING:{name:"Missing TAG",check:e=>i(this,void 0,void 0,function*(){return!e.tag})},FOLDER_TAG_VALUES_MISSING:{name:"Missing Tag Values (album, artist, year)",check:e=>i(this,void 0,void 0,function*(){return e.tag&&(e.tag.type===n.FolderType.album||e.tag.type===n.FolderType.multialbum)&&(!e.tag.album||!e.tag.artist||!e.tag.year)})},ALBUM_IMAGE_MISSING:{name:"Missing album image",check:e=>i(this,void 0,void 0,function*(){return!(!e.tag||e.tag.type!==n.FolderType.album&&e.tag.type!==n.FolderType.multialbum||e.tag.image)})},ALBUM_IMAGE_NAME_NONCONFORM:{name:"Album Image Name is not cover.[ext]",check:e=>i(this,void 0,void 0,function*(){return!(!e.tag||e.tag.type!==n.FolderType.album&&e.tag.type!==n.FolderType.multialbum||!e.tag.image||0===e.tag.image.indexOf("cover."))})},ALBUM_NAME_NONCONFORM:{name:'Album folder name is not "[Year] Album-Name"',check:e=>i(this,void 0,void 0,function*(){if(e.tag&&e.tag.type===n.FolderType.album&&e.tag.album&&e.tag.year&&e.tag.year>0){const t=m.default.basename(e.path).trim().replace(/[_:!?\/ ]/g,"").toLowerCase(),r=function(e){const t=e.year?e.year.toString():"";return((t.length>0?"["+t+"] ":"")+l.replaceFileSystemChars(e.album||"","_")).trim()}(e.tag).replace(/[_:!?\/ ]/g,"").toLowerCase();return 0!==t.localeCompare(r)}return!1})},ALBUM_GENRE_MISSING:{name:"Album genre is missing",check:e=>i(this,void 0,void 0,function*(){return e.tag&&(!e.tag.genre||0===e.tag.genre.length)})},ALBUM_ID_MISSING:{name:"Missing musicbrainz album id",check:e=>i(this,void 0,void 0,function*(){return e.tag&&(e.tag.type===n.FolderType.album||e.tag.type===n.FolderType.multialbum)&&!e.tag.mbAlbumID})},ARTIST_IMAGE_NAME_NONCONFORM:{name:"Artist Image Name is not artist.[ext]",check:e=>i(this,void 0,void 0,function*(){return!(!e.tag||e.tag.type!==n.FolderType.artist&&e.tag.type!==n.FolderType.multiartist||!e.tag.image||0===e.tag.image.indexOf("artist."))})},ARTIST_IMAGE_MISSING:{name:"Missing artist image",check:e=>i(this,void 0,void 0,function*(){return!(!e.tag||e.tag.type!==n.FolderType.artist&&e.tag.type!==n.FolderType.multiartist||e.tag.image)})}};function f(e){return i(this,void 0,void 0,function*(){const t=[],r=Object.keys(y);for(const i of r)if(y[i].check){(yield y[i].check(e))&&t.push({id:i,name:y[i].name})}return t})}t.getFolderProblems=f;t.FolderController=class extends d.BaseListController{constructor(e,t,r,i,s,n,a){super(e,s,n,a),this.folderService=e,this.trackController=t,this.metadataService=r,this.indexService=i,this.stateService=s,this.imageService=n,this.downloadService=a}defaultSort(e){return e.sort((e,t)=>(e.tag&&e.tag.title?e.tag.title:m.default.basename(e.path)).localeCompare(t.tag&&t.tag.title?t.tag.title:m.default.basename(t.path)))}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=c.formatFolder(e,t);if((t.folderChildren||t.folderTracks)&&(i.tracks=yield this.trackController.prepareByQuery({parentID:e.id},t,r)),t.folderChildren||t.folderSubfolders){const s=yield this.folderService.folderStore.search({parentID:e.id,sorts:[{field:"name",descending:!1}]});i.folders=yield this.prepareList(s,{folderState:t.folderState,folderHealth:t.folderHealth,folderTag:t.folderTag},r)}if(t.folderState){const t=yield this.stateService.findOrCreate(e.id,r.id,n.DBObjectType.folder);i.state=u.formatState(t)}if(t.folderInfo)if(e.tag.type===n.FolderType.artist){const r=yield this.metadataService.getFolderArtistInfo(e,!1,!!t.folderInfoSimilar);if(i.artistInfo=c.formatArtistFolderInfo(r.info),t.folderInfoSimilar){const e=[];(r.similar||[]).forEach(r=>{r.folder&&e.push(c.formatFolder(r.folder,t))}),i.artistInfo.similar=e}}else{const t=yield this.metadataService.getFolderInfo(e);i.albumInfo=c.formatAlbumFolderInfo(t)}if(t.folderHealth){const t=yield f(e);i.health={problems:t}}if(t.folderParents){const t=yield this.folderService.collectFolderPath(e.parentID);i.parents=t.map(e=>({id:e.id,name:m.default.basename(e.path)}))}return i})}translateQuery(e,t){return{query:e.query,rootID:e.rootID,parentID:e.parentID,artist:e.artist,title:e.title,album:e.album,genre:e.genre,newerThan:e.newerThan,fromYear:e.fromYear,toYear:e.toYear,offset:e.offset,amount:e.amount,types:e.type?[e.type]:void 0,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}subfolders(e){return i(this,void 0,void 0,function*(){const t=yield this.folderService.folderStore.search({parentID:e.query.id});return this.prepareList(t,e.query,e.user)})}tracks(e){return i(this,void 0,void 0,function*(){const t=yield this.byIDs(e.query.ids),r=e.query.recursive?{inPaths:t.map(e=>e.path)}:{parentIDs:t.map(e=>e.id)};return this.trackController.prepareByQuery(r,e.query,e.user)})}children(e){return i(this,void 0,void 0,function*(){const t=yield this.folderService.folderStore.search({parentID:e.query.id}),r=yield this.trackController.prepareByQuery({parentID:e.query.id},e.query,e.user);return{folders:yield this.prepareList(t,e.query,e.user),tracks:r}})}imageUrlUpdate(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);yield this.folderService.downloadFolderImage(t,e.query.url)})}imageUploadUpdate(e){return i(this,void 0,void 0,function*(){if(!e.file)return Promise.reject(a.InvalidParamError("Image upload failed"));const t=yield this.byID(e.query.id);yield this.folderService.setFolderImage(t,e.file)})}nameUpdate(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);yield this.folderService.renameFolder(t,e.query.name)})}artistInfo(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=yield this.metadataService.getFolderArtistInfo(t,!1,e.query.similar),i=c.formatArtistFolderInfo(r.info);if(e.query.similar){const t=(r.similar||[]).filter(e=>!!e.folder).map(e=>e.folder);i.similar=yield this.prepareList(t,{},e.user)}return i})}artistSimilar(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=((yield this.metadataService.getFolderArtistInfo(t,!1,!0)).similar||[]).filter(e=>!!e.folder).map(e=>e.folder);return this.prepareList(r,e.query,e.user)})}albumInfo(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=yield this.metadataService.getFolderInfo(t);return c.formatAlbumFolderInfo(r)})}artistSimilarTracks(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id),r=yield this.metadataService.getFolderSimilarTracks(t);return this.trackController.prepareList(o.paginate(r,e.query.amount,e.query.offset),e.query,e.user)})}list(e){return i(this,void 0,void 0,function*(){return this.getList(e.query,e.query,e.query,e.user)})}index(e){return i(this,void 0,void 0,function*(){const t=yield this.indexService.getFolderIndex(!1);return p.formatFolderIndex(this.indexService.filterFolderIndex(e.query.rootID,t))})}}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(1)),n=r(0);function a(e){let t={artistID:e.tag.mbArtistID,albumID:e.tag.mbAlbumID};return Object.keys(t).find(e=>!!t[e])||(t=void 0),{artist:e.tag.artist,album:e.tag.album,genre:e.tag.genre,year:e.tag.year,musicbrainz:t}}t.formatArtistFolderInfo=function(e){return{description:e.artist.description,lastFmUrl:e.album.url,smallImageUrl:e.album.image&&e.album.image.small?e.album.image.small:void 0,mediumImageUrl:e.album.image&&e.album.image.medium?e.album.image.medium:void 0,largeImageUrl:e.album.image&&e.album.image.large?e.album.image.large:void 0}},t.formatAlbumFolderInfo=function(e){return{description:e.album.description,lastFmUrl:e.album.url,releases:e.album.releases,smallImageUrl:e.album.image&&e.album.image.small?e.album.image.small:void 0,mediumImageUrl:e.album.image&&e.album.image.medium?e.album.image.medium:void 0,largeImageUrl:e.album.image&&e.album.image.large?e.album.image.large:void 0}},t.formatFolder=function(e,t){return t=t||{},{id:e.id,parentID:e.parentID,name:s.default.basename(e.path),created:e.stat.created,type:e.tag&&void 0!==e.tag.type&&n.FolderType[e.tag.type]||"unknown",tag:t.folderTag?a(e):void 0}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(14),n=r(0),a=r(121);t.RootController=class extends s.BaseController{constructor(e,t,r,i,s){super(e,r,i,s),this.rootService=e,this.ioService=t,this.stateService=r,this.imageService=i,this.downloadService=s}defaultSort(e){return e.sort((e,t)=>e.name.localeCompare(t.name))}prepare(e,t,r){return i(this,void 0,void 0,function*(){return a.formatRoot(e,this.ioService.getRootStatus(e.id))})}translateQuery(e,t){return{query:e.query,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}create(e){return i(this,void 0,void 0,function*(){const t={id:"",created:Date.now(),type:n.DBObjectType.root,name:e.query.name,path:e.query.path};return t.id=yield this.rootService.create(t),this.prepare(t,{},e.user)})}update(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return t.name=e.query.name,t.path=e.query.path,yield this.rootService.update(t),this.prepare(t,{},e.user)})}delete(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);yield this.rootService.remove(t),yield this.ioService.refresh()})}scanAll(e){return i(this,void 0,void 0,function*(){this.ioService.refresh()})}scan(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);this.ioService.refreshRoot(t)})}status(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return this.ioService.getRootStatus(t.id)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatRoot=function(e,t){return{id:e.id,name:e.name,created:e.created,path:e.path,status:t}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(14),n=r(0),a=r(4),o=r(27),d=r(21),c=r(9);t.UserController=class extends s.BaseController{constructor(e,t,r,i){super(e,t,r,i),this.userService=e,this.stateService=t,this.imageService=r,this.downloadService=i}defaultSort(e){return e.sort((e,t)=>e.name.localeCompare(t.name))}prepare(e,t,r){return i(this,void 0,void 0,function*(){return o.formatUser(e)})}translateQuery(e,t){return{query:e.query,name:e.name,isAdmin:e.isAdmin,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}create(e){return i(this,void 0,void 0,function*(){const t=c.randomString(10),r=d.hashSaltPassword(t),i={id:"",name:e.query.name||"",salt:r.salt,hash:r.hash,email:"",subsonic_pass:c.randomString(10),type:n.DBObjectType.user,created:Date.now(),scrobblingEnabled:!1,roles:{admin:void 0!==e.query.roleAdmin&&e.query.roleAdmin,stream:void 0===e.query.roleStream||e.query.roleStream,upload:void 0!==e.query.roleUpload&&e.query.roleUpload,podcast:void 0!==e.query.rolePodcast&&e.query.rolePodcast}};return i.id=yield this.userService.create(i),this.prepare(i,{},e.user)})}update(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);if(e.query.name){if(e.query.name!==t.name&&(yield this.userService.getByName(e.query.name)))return Promise.reject(a.GenericError("Username already exists"));t.name=e.query.name.trim()}return e.query.email&&(t.email=e.query.email.trim()),void 0!==e.query.roleAdmin&&(t.roles.admin=e.query.roleAdmin),void 0!==e.query.rolePodcast&&(t.roles.podcast=e.query.rolePodcast),void 0!==e.query.roleStream&&(t.roles.stream=e.query.roleStream),void 0!==e.query.roleUpload&&(t.roles.upload=e.query.roleUpload),yield this.userService.update(t),this.prepare(t,{},e.user)})}delete(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);yield this.userService.remove(t)})}imageUploadUpdate(e){return i(this,void 0,void 0,function*(){if(!e.file)return Promise.reject(a.InvalidParamError("Image upload failed"));const t=yield this.byID(e.query.id);return t.id===e.user.id||e.user.roles.admin?yield this.userService.setUserImage(t,e.file):Promise.reject(a.UnauthError())})}passwordUpdate(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return t.id===e.user.id||e.user.roles.admin?yield this.userService.setUserPassword(t,e.query.password):Promise.reject(a.UnauthError())})}emailUpdate(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);return t.id===e.user.id||e.user.roles.admin?yield this.userService.setUserEmail(t,e.query.email):Promise.reject(a.UnauthError())})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(4),n=r(124);t.ChatController=class{constructor(e){this.chatService=e}list(e){return i(this,void 0,void 0,function*(){return(yield this.chatService.get(e.query.since)).map(e=>n.formatChatMessage(e))})}create(e){return i(this,void 0,void 0,function*(){yield this.chatService.add(e.query.message,e.user)})}delete(e){return i(this,void 0,void 0,function*(){const t=yield this.chatService.find(e.query.time);return t?t.userID!==e.user.id?Promise.reject(s.UnauthError()):void(yield this.chatService.remove(t)):Promise.reject(s.NotFoundError())})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatChatMessage=function(e){return{username:e.username,userID:e.userID,time:e.time,message:e.message}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(1));t.MetadataController=class{constructor(e,t){this.audioModule=e,this.trackController=t,this.cache={}}brainzSearch(e){return i(this,void 0,void 0,function*(){const t=Object.assign({},e.query);delete t.type;const r="search-"+e.query.type+JSON.stringify(t);if(this.cache[r])return console.log("serving from cache search"),this.cache[r];const i=yield this.audioModule.musicbrainzSearch(e.query.type,t);return this.cache[r]=i,i})}acoustidLookup(e){return i(this,void 0,void 0,function*(){const t="acoustid-"+e.query.id+e.query.inc;if(this.cache[t])return console.log("serving from cache acoustid"),this.cache[t];const r=yield this.trackController.byID(e.query.id),i=yield this.audioModule.acoustidLookup(n.default.join(r.path,r.name),e.query.inc);return this.cache[t]=i,i})}lastfmLookup(e){return i(this,void 0,void 0,function*(){const t="lastfm-"+e.query.type+e.query.id;if(this.cache[t])return console.log("serving from cache lastfm"),this.cache[t];const r=yield this.audioModule.lastFMLookup(e.query.type,e.query.id);return this.cache[t]=r,r})}brainzLookup(e){return i(this,void 0,void 0,function*(){const t="lookup-"+e.query.type+e.query.id+e.query.inc;if(this.cache[t])return console.log("serving from cache lookup"),this.cache[t];const r=yield this.audioModule.musicbrainzLookup(e.query.type,e.query.id,e.query.inc);return this.cache[t]=r,r})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(4),n=r(0);t.StreamController=class{constructor(e,t,r){this.streamService=e,this.nowPlayingService=t,this.store=r}streamTrack(e,t,r,s){return i(this,void 0,void 0,function*(){const i=yield this.streamService.streamTrack(e,t,r,s);return this.nowPlayingService.reportTrack(e,s),i})}streamEpisode(e,t,r,s){return i(this,void 0,void 0,function*(){const i=yield this.streamService.streamEpisode(e,t,r,s);return this.nowPlayingService.reportEpisode(e,s),i})}streamDBObject(e,t,r,s){return i(this,void 0,void 0,function*(){switch(e.type){case n.DBObjectType.track:return this.streamTrack(e,t,r,s);case n.DBObjectType.episode:return this.streamEpisode(e,t,r,s)}return Promise.reject(Error("Invalid Object Type for Streaming"))})}stream(e){return i(this,void 0,void 0,function*(){const t=e.query.id;if(!t||0===t.length)return Promise.reject(s.InvalidParamError());const r=yield this.store.findInAll(t);if(!r)return Promise.reject(s.NotFoundError());const i=yield this.streamDBObject(r,e.query.format,void 0,e.user);return i||Promise.reject(s.NotFoundError())})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(128);t.GenreController=class{constructor(e){this.genreService=e}list(e){return i(this,void 0,void 0,function*(){return(yield this.genreService.getGenres(e.query.rootID)).map(e=>s.formatGenre(e))})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatGenre=function(e){return{name:e.name,trackCount:e.trackCount,albumCount:e.albumCount,artistCount:e.artistCount}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(130);t.NowPlayingController=class{constructor(e){this.nowplayingService=e}list(e){return i(this,void 0,void 0,function*(){return(yield this.nowplayingService.getNowPlaying()).map(e=>s.packNowPlaying(e))})}}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(13)),n=r(0),a=r(26),o=r(35);t.packNowPlaying=function(e){const t={username:e.user.name,minutesAgo:Math.round(s.default.duration(s.default().diff(s.default(e.time))).asMinutes())};switch(e.obj.type){case n.DBObjectType.track:t.track=a.formatTrack(e.obj,{});break;case n.DBObjectType.episode:const r=e.obj;t.track=o.formatEpisode(r,{},r.status)}return t}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(4);t.ImageController=class{constructor(e,t){this.store=e,this.imageService=t}image(e){return i(this,void 0,void 0,function*(){const t=e.query.id;if(!t||0===t.length)return Promise.reject(s.InvalidParamError());const r=yield this.store.findInAll(t);if(!r)return Promise.reject(s.NotFoundError());const i=yield this.imageService.getObjImage(r,e.query.size,e.query.format);return i||Promise.reject(s.NotFoundError())})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(4);t.DownloadController=class{constructor(e,t){this.store=e,this.downloadService=t}download(e){return i(this,void 0,void 0,function*(){const t=e.query.id;if(!t||0===t.length)return Promise.reject(s.InvalidParamError());const r=yield this.store.findInAll(t);if(!r)return Promise.reject(s.NotFoundError());const i=yield this.downloadService.getObjDownload(r,e.query.format,e.user);return i||Promise.reject(s.NotFoundError())})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(4),n=r(0);t.WaveformController=class{constructor(e,t){this.store=e,this.waveformService=t}waveform(e){return i(this,void 0,void 0,function*(){const t=e.query.id;if(!t||0===t.length)return Promise.reject(s.InvalidParamError());const r=yield this.store.findInAll(t);if(!r)return Promise.reject(s.NotFoundError());const i=e.query.format||"svg";switch(r.type){case n.DBObjectType.track:return yield this.waveformService.getTrackWaveform(r,i);case n.DBObjectType.episode:return yield this.waveformService.getEpisodeWaveform(r,i)}return Promise.reject(Error("Invalid Object Type for Waveform generation"))})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});t.AutocompleteController=class{constructor(e){this.store=e}autocomplete(e){return i(this,void 0,void 0,function*(){return yield this.autocompleteQuery(e.query)})}autocompleteQuery(e){return i(this,void 0,void 0,function*(){const t={};if(void 0!==e.track&&e.track>0){const r=yield this.store.trackStore.search({query:e.query,amount:e.track});t.tracks=r.map(e=>({id:e.id,name:e.tag.title||""}))}if(void 0!==e.album&&e.album>0){const r=yield this.store.albumStore.search({query:e.query,amount:e.album});t.albums=r.map(e=>({id:e.id,name:e.name}))}if(void 0!==e.artist&&e.artist>0){const r=yield this.store.artistStore.search({query:e.query,amount:e.artist});t.artists=r.map(e=>({id:e.id,name:e.name}))}if(void 0!==e.folder&&e.folder>0){const r=yield this.store.artistStore.search({query:e.query,amount:e.folder});t.folders=r.map(e=>({id:e.id,name:e.name}))}if(void 0!==e.playlist&&e.playlist>0){const r=yield this.store.playlistStore.search({query:e.query,amount:e.playlist});t.playlists=r.map(e=>({id:e.id,name:e.name}))}if(void 0!==e.podcast&&e.podcast>0){const r=yield this.store.podcastStore.search({query:e.query,amount:e.podcast});t.podcasts=r.map(e=>({id:e.id,name:e.tag?e.tag.title:""}))}if(void 0!==e.episode&&e.episode>0){const r=yield this.store.episodeStore.search({query:e.query,amount:e.episode});t.episodes=r.map(e=>({id:e.id,name:e.name}))}return t})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(136);t.BookmarkController=class{constructor(e,t){this.bookmarkService=e,this.trackController=t}defaultSort(e){return e.sort((e,t)=>t.changed-e.changed)}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=s.formatBookmark(e);return t.bookmarkTrack&&(i.track=yield this.trackController.prepareByID(e.id,t,r)),i})}translateQuery(e,t){return{query:e.query,userID:e.userID,destID:e.trackID,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}create(e){return i(this,void 0,void 0,function*(){const t=yield this.trackController.byID(e.query.trackID),r=yield this.bookmarkService.create(t.id,e.user.id,e.query.position||0,e.query.comment);return this.prepare(r,{},e.user)})}delete(e){return i(this,void 0,void 0,function*(){yield this.bookmarkService.remove(e.query.id,e.user.id)})}list(e){return i(this,void 0,void 0,function*(){const t=yield this.bookmarkService.getAll(e.user.id),r=t.map(e=>s.formatBookmark(e));if(e.query.bookmarkTrack){const i=yield this.trackController.prepareListByIDs(t.map(e=>e.destID),e.query,e.user);r.forEach(e=>{e.track=i.find(t=>t.id===e.trackID)})}return r})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatBookmark=function(e){return{id:e.id,trackID:e.destID,comment:e.comment,created:e.created,changed:e.changed,position:e.position}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(138);t.PlayQueueController=class{constructor(e,t){this.playqueueService=e,this.trackController=t}get(e){return i(this,void 0,void 0,function*(){const t=yield this.playqueueService.getQueueOrCreate(e.user.id,e.client),r=s.formatPlayQueue(t,e.query);return e.query.playQueueTracks&&(r.tracks=yield this.trackController.prepareListByIDs(t.trackIDs,e.query,e.user)),r})}update(e){return i(this,void 0,void 0,function*(){return yield this.playqueueService.save(e.user.id,e.query.trackIDs,e.query.currentID,e.query.position,e.client)})}delete(e){return i(this,void 0,void 0,function*(){yield this.playqueueService.remove(e.user.id)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatPlayQueue=function(e,t){return{changed:e.changed,changedBy:e.changedBy,currentID:e.currentID,position:e.position,trackIDs:t.playQueueTrackIDs?e.trackIDs:void 0}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(14),n=r(0),a=r(140),o=r(8);t.RadioController=class extends s.BaseController{constructor(e,t,r,i){super(e,t,r,i),this.radioService=e,this.stateService=t,this.imageService=r,this.downloadService=i}defaultSort(e){return e.sort((e,t)=>e.name.localeCompare(t.name))}prepare(e,t,r){return i(this,void 0,void 0,function*(){const i=a.formatRadio(e);if(t.radioState){const t=yield this.stateService.findOrCreate(e.id,r.id,n.DBObjectType.radio);i.state=o.formatState(t)}return i})}translateQuery(e,t){return{query:e.query,url:e.url,name:e.name,homepage:e.homepage,offset:e.offset,amount:e.amount,sorts:e.sortField?[{field:e.sortField,descending:!!e.sortDescending}]:void 0}}create(e){return i(this,void 0,void 0,function*(){const t=yield this.radioService.create(e.query.name,e.query.url,e.query.homepage);return this.prepare(t,{radioState:!0},e.user)})}update(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);yield this.radioService.update(t,e.query.name,e.query.url,e.query.homepage)})}delete(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id);yield this.radioService.remove(t)})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.formatRadio=function(e){return{id:e.id,url:e.url,created:e.created,changed:e.changed,name:e.name,homepage:e.homepage}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(6)),a=s(r(1)),o=r(38);t.SessionJSONFileStore=class extends o.Store{constructor(e){super(),this.cache={},this.get=((e,t)=>{const r=this.cache[e];if(r&&this.expired(r))return this.destroy(e,e=>{t(e)});t(null,r)}),this.set=((e,t,r)=>{this.cache[e]=t,this.savejson(r)}),this.destroy=((e,t)=>{delete this.cache[e],this.savejson(t)}),this.all=(e=>{e(null,this.cache)}),this.length=(e=>{e(null,Object.keys(this.cache).length)}),this.clear=(e=>{this.cache={},this.savejson(e)}),this.filename=a.default.resolve(e||"sessions.json"),this.init().catch(e=>{console.log("SessionJSONFileStore",e)})}init(){return i(this,void 0,void 0,function*(){if(yield n.default.ensureDir(a.default.dirname(this.filename)),yield n.default.pathExists(this.filename)){const e=yield n.default.readJson(this.filename);Object.keys(e).forEach(t=>{const r=e[t];void 0!==r.cookie.expires&&"boolean"!=typeof r.cookie.expires&&(r.cookie.expires=new Date(r.cookie.expires)),this.expired(r)||(this.cache[t]=r)})}})}expired(e){return!!(e.cookie&&e.cookie.expires instanceof Date)&&e.cookie.expires.valueOf()<Date.now()}savejson(e){n.default.writeFile(this.filename,JSON.stringify(this.cache),t=>{e&&e(t)})}}},function(e,t){e.exports=require("passport")},function(e,t){e.exports=require("passport-jwt")},function(e,t){e.exports=require("passport-local")},function(e,t){e.exports=require("jsonwebtoken")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(25);t.registerPublicApi=function(e,t){e.get("/ping",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.ping(i);yield s.ApiResponder.data(r,n)})),e.get("/session",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.session(i);yield s.ApiResponder.data(r,n)}))},t.registerAccessControlApi=function(e,t){e.get("/lastfm/lookup",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.metadataController.lastfmLookup(i);yield s.ApiResponder.data(r,n)})),e.get("/acoustid/lookup",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.metadataController.acoustidLookup(i);yield s.ApiResponder.data(r,n)})),e.get("/brainz/lookup",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.metadataController.brainzLookup(i);yield s.ApiResponder.data(r,n)})),e.get("/brainz/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.metadataController.brainzSearch(i);yield s.ApiResponder.data(r,n)})),e.get("/autocomplete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.autocompleteController.autocomplete(i);yield s.ApiResponder.data(r,n)})),e.get("/genre/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.genreController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/nowPlaying/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.nowPlayingController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/chat/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.chatController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/index",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.index(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/children",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.children(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/tracks",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.tracks(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/subfolders",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.subfolders(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/artist/similar",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.artistSimilar(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/artist/info",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.artistInfo(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/album/info",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.albumInfo(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/state",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.state(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/states",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.states(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/artist/similar/tracks",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.artistSimilarTracks(i);yield s.ApiResponder.data(r,n)})),e.get("/track/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/track/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/track/tagID3",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.tagID3(i);yield s.ApiResponder.data(r,n)})),e.get("/track/tagID3s",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.tagID3s(i);yield s.ApiResponder.data(r,n)})),e.get("/track/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/track/state",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.state(i);yield s.ApiResponder.data(r,n)})),e.get("/track/states",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.states(i);yield s.ApiResponder.data(r,n)})),e.get("/track/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/track/similar",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.similar(i);yield s.ApiResponder.data(r,n)})),e.get("/episode/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/episode/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/episode/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/episode/retrieve",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client};yield t.episodeController.retrieve(i),yield s.ApiResponder.ok(r)}),"/episode/retrieve",["podcast"]),e.get("/episode/state",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.state(i);yield s.ApiResponder.data(r,n)})),e.get("/episode/states",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.states(i);yield s.ApiResponder.data(r,n)})),e.get("/episode/status",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.status(i);yield s.ApiResponder.data(r,n)})),e.get("/episode/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/podcast/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/podcast/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/podcast/status",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.status(i);yield s.ApiResponder.data(r,n)})),e.get("/podcast/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/podcast/refreshAll",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client};yield t.podcastController.refreshAll(i),yield s.ApiResponder.ok(r)}),"/podcast/refreshAll",["podcast"]),e.get("/podcast/refresh",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client};yield t.podcastController.refresh(i),yield s.ApiResponder.ok(r)}),"/podcast/refresh",["podcast"]),e.get("/podcast/state",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.state(i);yield s.ApiResponder.data(r,n)})),e.get("/podcast/states",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.states(i);yield s.ApiResponder.data(r,n)})),e.get("/podcast/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/radio/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.radioController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/radio/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.radioController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/radio/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.radioController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/radio/state",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.radioController.state(i);yield s.ApiResponder.data(r,n)})),e.get("/radio/states",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.radioController.states(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/state",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.state(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/states",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.states(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/similar/tracks",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.similarTracks(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/similar",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.similar(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/index",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.index(i);yield s.ApiResponder.data(r,n)})),e.get("/artist/tracks",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.tracks(i);yield s.ApiResponder.data(r,n)})),e.get("/album/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/album/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/album/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/album/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/album/state",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.state(i);yield s.ApiResponder.data(r,n)})),e.get("/album/states",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.states(i);yield s.ApiResponder.data(r,n)})),e.get("/album/similar/tracks",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.similarTracks(i);yield s.ApiResponder.data(r,n)})),e.get("/album/tracks",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.tracks(i);yield s.ApiResponder.data(r,n)})),e.get("/playlist/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playlistController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/playlist/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playlistController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/playlist/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playlistController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/playlist/state",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playlistController.state(i);yield s.ApiResponder.data(r,n)})),e.get("/playlist/states",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playlistController.states(i);yield s.ApiResponder.data(r,n)})),e.get("/playlist/tracks",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playlistController.tracks(i);yield s.ApiResponder.data(r,n)})),e.get("/user/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.userController.search(i);yield s.ApiResponder.data(r,n)}),"/user/search",["admin"]),e.get("/user/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.userController.id(i);yield s.ApiResponder.data(r,n)}),"/user/id",["admin"]),e.get("/user/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.userController.ids(i);yield s.ApiResponder.data(r,n)}),"/user/ids",["admin"]),e.get("/playqueue/get",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playqueueController.get(i);yield s.ApiResponder.data(r,n)})),e.get("/root/search",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.rootController.search(i);yield s.ApiResponder.data(r,n)})),e.get("/root/id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.rootController.id(i);yield s.ApiResponder.data(r,n)})),e.get("/root/ids",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.rootController.ids(i);yield s.ApiResponder.data(r,n)})),e.get("/root/scan",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client};yield t.rootController.scan(i),yield s.ApiResponder.ok(r)}),"/root/scan",["admin"]),e.get("/root/scanAll",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client};yield t.rootController.scanAll(i),yield s.ApiResponder.ok(r)}),"/root/scanAll",["admin"]),e.get("/root/status",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.rootController.status(i);yield s.ApiResponder.data(r,n)})),e.get("/folder/download",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.download(i);yield s.ApiResponder.binary(r,n)}),"/folder/download",["stream"]),e.get("/folder/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.folderController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/track/stream",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.stream(i);yield s.ApiResponder.binary(r,n)}),"/track/stream",["stream"]),e.get("/track/download",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.download(i);yield s.ApiResponder.binary(r,n)}),"/track/download",["stream"]),e.get("/track/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.trackController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/episode/stream",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.stream(i);yield s.ApiResponder.binary(r,n)}),"/episode/stream",["stream"]),e.get("/episode/download",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.download(i);yield s.ApiResponder.binary(r,n)}),"/episode/download",["stream"]),e.get("/episode/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.episodeController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/podcast/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/podcast/download",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.podcastController.download(i);yield s.ApiResponder.binary(r,n)}),"/podcast/download",["stream"]),e.get("/artist/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/artist/download",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.artistController.download(i);yield s.ApiResponder.binary(r,n)}),"/artist/download",["stream"]),e.get("/album/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/album/download",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.albumController.download(i);yield s.ApiResponder.binary(r,n)}),"/album/download",["stream"]),e.get("/bookmark/list",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.bookmarkController.list(i);yield s.ApiResponder.data(r,n)})),e.get("/playlist/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playlistController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/playlist/download",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.playlistController.download(i);yield s.ApiResponder.binary(r,n)}),"/playlist/download",["stream"]),e.get("/user/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.userController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/root/image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.query,user:e.user,client:e.client},n=yield t.rootController.image(i);yield s.ApiResponder.binary(r,n)})),e.get("/image/:id-:size.:format",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.imageController.image(i);yield s.ApiResponder.binary(r,n)}),"/image/{id}-{size}.{format}"),e.get("/image/:id-:size",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.imageController.image(i);yield s.ApiResponder.binary(r,n)}),"/image/{id}-{size}"),e.get("/image/:id.:format",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.imageController.image(i);yield s.ApiResponder.binary(r,n)}),"/image/{id}.{format}"),e.get("/image/:id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.imageController.image(i);yield s.ApiResponder.binary(r,n)}),"/image/{id}"),e.get("/stream/:id.:format",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.streamController.stream(i);yield s.ApiResponder.binary(r,n)}),"/stream/{id}.{format}",["stream"]),e.get("/stream/:id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.streamController.stream(i);yield s.ApiResponder.binary(r,n)}),"/stream/{id}",["stream"]),e.get("/waveform/:id.:format",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.waveformController.waveform(i);yield s.ApiResponder.binary(r,n)}),"/waveform/{id}.{format}",["stream"]),e.get("/download/:id",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.downloadController.download(i);yield s.ApiResponder.binary(r,n)}),"/download/{id}",["stream"]),e.get("/download/:id.:format",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.params,user:e.user,client:e.client},n=yield t.downloadController.download(i);yield s.ApiResponder.binary(r,n)}),"/download/{id}.{format}",["stream"]),e.post("/bookmark/delete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.bookmarkController.delete(i),yield s.ApiResponder.ok(r)})),e.post("/podcast/delete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.podcastController.delete(i),yield s.ApiResponder.ok(r)}),"/podcast/delete",["podcast"]),e.post("/chat/delete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.chatController.delete(i),yield s.ApiResponder.ok(r)})),e.post("/playlist/delete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.playlistController.delete(i),yield s.ApiResponder.ok(r)})),e.post("/user/delete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.userController.delete(i),yield s.ApiResponder.ok(r)}),"/user/delete",["admin"]),e.post("/root/delete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.rootController.delete(i),yield s.ApiResponder.ok(r)}),"/root/delete",["admin"]),e.post("/radio/delete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.radioController.delete(i),yield s.ApiResponder.ok(r)}),"/radio/delete",["admin"]),e.post("/chat/create",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.chatController.create(i),yield s.ApiResponder.ok(r)})),e.post("/track/fav/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.trackController.favUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/track/rate/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.trackController.rateUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/track/tagID3/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.trackController.tagID3Update(i),yield s.ApiResponder.ok(r)}),"/track/tagID3/update",["admin"]),e.post("/track/tagID3s/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.trackController.tagID3sUpdate(i),yield s.ApiResponder.ok(r)}),"/track/tagID3s/update",["admin"]),e.post("/radio/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.radioController.update(i),yield s.ApiResponder.ok(r)}),"/radio/update",["admin"]),e.upload("/folder/imageUpload/update","image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client,file:e.file?e.file.path:void 0};yield t.folderController.imageUploadUpdate(i),yield s.ApiResponder.ok(r)}),"/folder/imageUpload/update",["admin"]),e.post("/folder/imageUrl/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.folderController.imageUrlUpdate(i),yield s.ApiResponder.ok(r)}),"/folder/imageUrl/update",["admin"]),e.post("/folder/name/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.folderController.nameUpdate(i),yield s.ApiResponder.ok(r)}),"/folder/name/update",["admin"]),e.post("/folder/fav/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.folderController.favUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/folder/rate/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.folderController.rateUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/album/fav/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.albumController.favUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/album/rate/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.albumController.rateUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/artist/fav/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.artistController.favUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/artist/rate/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.artistController.rateUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/episode/fav/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.episodeController.favUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/episode/rate/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.episodeController.rateUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/bookmark/create",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client},n=yield t.bookmarkController.create(i);yield s.ApiResponder.data(r,n)})),e.post("/radio/create",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client},n=yield t.radioController.create(i);yield s.ApiResponder.data(r,n)}),"/radio/create",["admin"]),e.post("/podcast/create",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client},n=yield t.podcastController.create(i);yield s.ApiResponder.data(r,n)}),"/podcast/create",["podcast"]),e.post("/podcast/fav/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.podcastController.favUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/podcast/rate/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.podcastController.rateUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/playlist/create",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client},n=yield t.playlistController.create(i);yield s.ApiResponder.data(r,n)})),e.post("/playlist/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.playlistController.update(i),yield s.ApiResponder.ok(r)})),e.post("/playlist/fav/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.playlistController.favUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/playlist/rate/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.playlistController.rateUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/playqueue/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.playqueueController.update(i),yield s.ApiResponder.ok(r)})),e.post("/playqueue/delete",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.playqueueController.delete(i),yield s.ApiResponder.ok(r)})),e.post("/user/create",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client},n=yield t.userController.create(i);yield s.ApiResponder.data(r,n)}),"/user/create",["admin"]),e.post("/user/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.userController.update(i),yield s.ApiResponder.ok(r)}),"/user/update",["admin"]),e.post("/user/password/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.userController.passwordUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/user/email/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.userController.emailUpdate(i),yield s.ApiResponder.ok(r)})),e.upload("/user/imageUpload/update","image",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client,file:e.file?e.file.path:void 0};yield t.userController.imageUploadUpdate(i),yield s.ApiResponder.ok(r)})),e.post("/root/create",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client},n=yield t.rootController.create(i);yield s.ApiResponder.data(r,n)}),"/root/create",["admin"]),e.post("/root/update",(e,r)=>i(this,void 0,void 0,function*(){const i={query:e.body,user:e.user,client:e.client};yield t.rootController.update(i),yield s.ApiResponder.ok(r)}),"/root/update",["admin"])}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(39),s=r(25),n=r(150),a=r(151);t.apiCheck=function(e){return function(t,r,o){i.checkOpenApiParameters(e,t,n,a).then(()=>{o()}).catch(e=>{s.ApiResponder.error(r,e)})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=new(r(149));t.validate=function(e,t){return i(this,void 0,void 0,function*(){const r=s.compile(t);return r(e)?{errors:[]}:{errors:r.errors}})}},function(e,t){e.exports=require("ajv")},function(e){e.exports={openapi:"3.0.0",info:{description:"Api for JamServe",version:"0.1.1",title:"JamApi",license:{name:"MIT"}},servers:[{url:"http://localhost:4040/api/{version}/",description:"A local JamServe API",variables:{version:{enum:["v1"],default:"v1"}}}],paths:{"/ping":{get:{operationId:"ping",description:"is the api online?",tags:["various"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Ping"}}}}},security:[]}},"/session":{get:{operationId:"session",description:"check the login state",tags:["auth"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Session"}}}}},security:[]}},"/lastfm/lookup":{get:{operationId:"metadataController.lastfmLookup",description:"lookup lastfm data",tags:["metadata"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/LastFM.Result"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"type",schema:{type:"string"},description:"lookup by lastfm type",required:!0},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/acoustid/lookup":{get:{operationId:"metadataController.acoustidLookup",description:"lookup acoustid data",tags:["metadata"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Result"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"inc",schema:{type:"string"},description:"comma-separated acoustid includes",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/brainz/lookup":{get:{operationId:"metadataController.brainzLookup",description:"lookup musicbrainz data",tags:["metadata"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/MusicBrainz.Response"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"type",schema:{type:"string"},description:"lookup by musicbrainz type",required:!0},{in:"query",name:"inc",schema:{type:"string"},description:"comma-separated musicbrainz includes",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/brainz/search":{get:{operationId:"metadataController.brainzSearch",description:"search musicbrainz data",tags:["metadata"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/MusicBrainz.Response"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"type",schema:{type:"string"},description:"search by musicbrainz type",required:!0},{in:"query",name:"recording",schema:{type:"string"},description:"search by recording name",required:!1},{in:"query",name:"releasegroup",schema:{type:"string"},description:"search by releasegroup name",required:!1},{in:"query",name:"release",schema:{type:"string"},description:"search by release name",required:!1},{in:"query",name:"artist",schema:{type:"string"},description:"search by artist name",required:!1},{in:"query",name:"tracks",schema:{type:"integer"},description:"search by number of release tracks",required:!1}]}},"/autocomplete":{get:{operationId:"autocompleteController.autocomplete",description:"autocomplete",tags:["various"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.AutoComplete"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"query",schema:{type:"string"},description:"query to complete",required:!0},{in:"query",name:"track",schema:{default:0,minimum:0,type:"integer"},description:"amount of track names to complete",required:!1},{in:"query",name:"artist",schema:{default:0,minimum:0,type:"integer"},description:"amount of artist names to complete",required:!1},{in:"query",name:"album",schema:{default:0,minimum:0,type:"integer"},description:"amount of album names to complete",required:!1},{in:"query",name:"folder",schema:{default:0,minimum:0,type:"integer"},description:"amount of folder names to complete",required:!1},{in:"query",name:"playlist",schema:{default:0,minimum:0,type:"integer"},description:"amount of playlist names to complete",required:!1},{in:"query",name:"podcast",schema:{default:0,minimum:0,type:"integer"},description:"amount of podcast names to complete",required:!1},{in:"query",name:"episode",schema:{default:0,minimum:0,type:"integer"},description:"amount of episode names to complete",required:!1}]}},"/genre/list":{get:{operationId:"genreController.list",description:"get list of genres found in the library",tags:["various"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Genre"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1}]}},"/nowPlaying/list":{get:{operationId:"nowPlayingController.list",description:"get list of tracks played by all users",tags:["various"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.NowPlaying"}}}}},401:{description:"unauthorized"},500:{description:"internal server error"}}}},"/chat/list":{get:{operationId:"chatController.list",description:"get chat messages",tags:["chat"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.ChatMessage"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"since",schema:{minimum:0,type:"integer"},description:"filter by post time (unix time)",required:!1}]}},"/folder/index":{get:{operationId:"folderController.index",description:"get the navigation index for folders",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.FolderIndex"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1}]}},"/folder/id":{get:{operationId:"folderController.id",description:"get a folder by id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Folder"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"folderTag",schema:{default:!1,type:"boolean"},description:"include tag on folder(s)",required:!1},{in:"query",name:"folderState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on folder(s)",required:!1},{in:"query",name:"folderHealth",schema:{default:!1,type:"boolean"},description:"include information about the meta data quality on folder(s)",required:!1},{in:"query",name:"folderParents",schema:{default:!1,type:"boolean"},description:"include a list of all parent folder ids on folder(s)",required:!1},{in:"query",name:"folderInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on folder(s)",required:!1},{in:"query",name:"folderInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar folders list  on folder(s)",required:!1},{in:"query",name:"folderChildren",schema:{default:!1,type:"boolean"},description:"include tracks and sub folders on folder(s)",required:!1},{in:"query",name:"folderSubfolders",schema:{default:!1,type:"boolean"},description:"include sub folders on folder(s)",required:!1},{in:"query",name:"folderTracks",schema:{default:!1,type:"boolean"},description:"include tracks on folder(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/folder/ids":{get:{operationId:"folderController.ids",description:"get folders by ids",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Folder"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"folderTag",schema:{default:!1,type:"boolean"},description:"include tag on folder(s)",required:!1},{in:"query",name:"folderState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on folder(s)",required:!1},{in:"query",name:"folderHealth",schema:{default:!1,type:"boolean"},description:"include information about the meta data quality on folder(s)",required:!1},{in:"query",name:"folderParents",schema:{default:!1,type:"boolean"},description:"include a list of all parent folder ids on folder(s)",required:!1},{in:"query",name:"folderInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on folder(s)",required:!1},{in:"query",name:"folderInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar folders list  on folder(s)",required:!1},{in:"query",name:"folderChildren",schema:{default:!1,type:"boolean"},description:"include tracks and sub folders on folder(s)",required:!1},{in:"query",name:"folderSubfolders",schema:{default:!1,type:"boolean"},description:"include sub folders on folder(s)",required:!1},{in:"query",name:"folderTracks",schema:{default:!1,type:"boolean"},description:"include tracks on folder(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/folder/children":{get:{operationId:"folderController.children",description:"get tracks and subfolders of a folder by id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.FolderChildren"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"folderTag",schema:{default:!1,type:"boolean"},description:"include tag on folder(s)",required:!1},{in:"query",name:"folderState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on folder(s)",required:!1},{in:"query",name:"folderHealth",schema:{default:!1,type:"boolean"},description:"include information about the meta data quality on folder(s)",required:!1},{in:"query",name:"folderParents",schema:{default:!1,type:"boolean"},description:"include a list of all parent folder ids on folder(s)",required:!1},{in:"query",name:"folderInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on folder(s)",required:!1},{in:"query",name:"folderInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar folders list  on folder(s)",required:!1}]}},"/folder/tracks":{get:{operationId:"folderController.tracks",description:"get tracks of a folder by id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"recursive",schema:{default:!1,type:"boolean"},description:"include tracks of a sub folders",required:!1},{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/folder/subfolders":{get:{operationId:"folderController.subfolders",description:"get sub folders of a folder by id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Folder"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"folderTag",schema:{default:!1,type:"boolean"},description:"include tag on folder(s)",required:!1},{in:"query",name:"folderState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on folder(s)",required:!1},{in:"query",name:"folderHealth",schema:{default:!1,type:"boolean"},description:"include information about the meta data quality on folder(s)",required:!1},{in:"query",name:"folderParents",schema:{default:!1,type:"boolean"},description:"include a list of all parent folder ids on folder(s)",required:!1},{in:"query",name:"folderInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on folder(s)",required:!1},{in:"query",name:"folderInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar folders list  on folder(s)",required:!1}]}},"/folder/artist/similar":{get:{operationId:"folderController.artistSimilar",description:"get similar artist folders of a folder by id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Folder"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"folderTag",schema:{default:!1,type:"boolean"},description:"include tag on folder(s)",required:!1},{in:"query",name:"folderState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on folder(s)",required:!1},{in:"query",name:"folderHealth",schema:{default:!1,type:"boolean"},description:"include information about the meta data quality on folder(s)",required:!1},{in:"query",name:"folderParents",schema:{default:!1,type:"boolean"},description:"include a list of all parent folder ids on folder(s)",required:!1},{in:"query",name:"folderInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on folder(s)",required:!1},{in:"query",name:"folderInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar folders list  on folder(s)",required:!1},{in:"query",name:"folderChildren",schema:{default:!1,type:"boolean"},description:"include tracks and sub folders on folder(s)",required:!1},{in:"query",name:"folderSubfolders",schema:{default:!1,type:"boolean"},description:"include sub folders on folder(s)",required:!1},{in:"query",name:"folderTracks",schema:{default:!1,type:"boolean"},description:"include tracks on folder(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/folder/artist/info":{get:{operationId:"folderController.artistInfo",description:"get extended artist meta data of a folder by id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.ArtistFolderInfo"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"similar",schema:{default:!1,type:"boolean"},description:"include similar artists",required:!0},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/folder/album/info":{get:{operationId:"folderController.albumInfo",description:"get extended album meta data of a folder by id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.AlbumFolderInfo"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/folder/list":{get:{operationId:"folderController.list",description:"get a list of folders by list type",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Folder"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"parentID",schema:{type:"string"},description:"filter by parent folder id",required:!1},{in:"query",name:"artist",schema:{type:"string"},description:"filter by artist name",required:!1},{in:"query",name:"title",schema:{type:"string"},description:"filter by title",required:!1},{in:"query",name:"album",schema:{type:"string"},description:"filter by album name",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:"filter by genre",required:!1},{in:"query",name:"newerThan",schema:{minimum:0,type:"integer"},description:"filter by creation date (unix time)",required:!1},{in:"query",name:"fromYear",schema:{minimum:0,type:"integer"},description:"filter by year",required:!1},{in:"query",name:"toYear",schema:{minimum:0,type:"integer"},description:"filter by year",required:!1},{in:"query",name:"type",schema:{enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"},description:"filter by folder type",required:!1},{in:"query",name:"types",schema:{type:"array",items:{enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"}},description:"filter by folder types",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"folderTag",schema:{default:!1,type:"boolean"},description:"include tag on folder(s)",required:!1},{in:"query",name:"folderState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on folder(s)",required:!1},{in:"query",name:"folderHealth",schema:{default:!1,type:"boolean"},description:"include information about the meta data quality on folder(s)",required:!1},{in:"query",name:"folderParents",schema:{default:!1,type:"boolean"},description:"include a list of all parent folder ids on folder(s)",required:!1},{in:"query",name:"folderInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on folder(s)",required:!1},{in:"query",name:"folderInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar folders list  on folder(s)",required:!1},{in:"query",name:"list",schema:{$ref:"#/components/schemas/JamParameters.ListType"},description:"the type of the item list",required:!0},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/folder/search":{get:{operationId:"folderController.search",description:"search folders",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Folder"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"parentID",schema:{type:"string"},description:"filter by parent folder id",required:!1},{in:"query",name:"artist",schema:{type:"string"},description:"filter by artist name",required:!1},{in:"query",name:"title",schema:{type:"string"},description:"filter by title",required:!1},{in:"query",name:"album",schema:{type:"string"},description:"filter by album name",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:"filter by genre",required:!1},{in:"query",name:"newerThan",schema:{minimum:0,type:"integer"},description:"filter by creation date (unix time)",required:!1},{in:"query",name:"fromYear",schema:{minimum:0,type:"integer"},description:"filter by year",required:!1},{in:"query",name:"toYear",schema:{minimum:0,type:"integer"},description:"filter by year",required:!1},{in:"query",name:"type",schema:{enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"},description:"filter by folder type",required:!1},{in:"query",name:"types",schema:{type:"array",items:{enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"}},description:"filter by folder types",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"folderChildren",schema:{default:!1,type:"boolean"},description:"include tracks and sub folders on folder(s)",required:!1},{in:"query",name:"folderSubfolders",schema:{default:!1,type:"boolean"},description:"include sub folders on folder(s)",required:!1},{in:"query",name:"folderTracks",schema:{default:!1,type:"boolean"},description:"include tracks on folder(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"folderTag",schema:{default:!1,type:"boolean"},description:"include tag on folder(s)",required:!1},{in:"query",name:"folderState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on folder(s)",required:!1},{in:"query",name:"folderHealth",schema:{default:!1,type:"boolean"},description:"include information about the meta data quality on folder(s)",required:!1},{in:"query",name:"folderParents",schema:{default:!1,type:"boolean"},description:"include a list of all parent folder ids on folder(s)",required:!1},{in:"query",name:"folderInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on folder(s)",required:!1},{in:"query",name:"folderInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar folders list  on folder(s)",required:!1}]}},"/folder/state":{get:{operationId:"folderController.state",description:"get the user state (fav/rating) by folder id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.State"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/folder/states":{get:{operationId:"folderController.states",description:"get the user states (fav/rating) by folders ids",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.States"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/folder/artist/similar/tracks":{get:{operationId:"folderController.artistSimilarTracks",description:"get similar tracks of a by artist folder id",tags:["folder"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/track/id":{get:{operationId:"trackController.id",description:"get a track by id",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Track"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/track/ids":{get:{operationId:"trackController.ids",description:"get tracks by ids",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/track/tagID3":{get:{operationId:"trackController.tagID3",description:"get an id3 tag by track id",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.ID3Tag"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/track/tagID3s":{get:{operationId:"trackController.tagID3s",description:"get id3 tags by track ids",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.ID3Tags"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/track/search":{get:{operationId:"trackController.search",description:"search tracks",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"artist",schema:{type:"string"},description:"filter by artist name",required:!1},{in:"query",name:"artistID",schema:{type:"string"},description:"filter by artist id",required:!1},{in:"query",name:"parentID",schema:{type:"string"},description:"filter by parent folder id",required:!1},{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"title",schema:{type:"string"},description:"filter by title",required:!1},{in:"query",name:"album",schema:{type:"string"},description:"filter by album",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:"filter by genre",required:!1},{in:"query",name:"newerThan",schema:{type:"integer"},description:"filter by creation date",required:!1},{in:"query",name:"fromYear",schema:{type:"integer"},description:"filter by year",required:!1},{in:"query",name:"toYear",schema:{type:"integer"},description:"filter by year",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/track/state":{get:{operationId:"trackController.state",description:"get the user state (fav/rating) by track id",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.State"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/track/states":{get:{operationId:"trackController.states",description:"get the user states (fav/rating) by track ids",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.States"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/track/list":{get:{operationId:"trackController.list",description:"get a track list by track list type",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"artist",schema:{type:"string"},description:"filter by artist name",required:!1},{in:"query",name:"artistID",schema:{type:"string"},description:"filter by artist id",required:!1},{in:"query",name:"parentID",schema:{type:"string"},description:"filter by parent folder id",required:!1},{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"title",schema:{type:"string"},description:"filter by title",required:!1},{in:"query",name:"album",schema:{type:"string"},description:"filter by album",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:"filter by genre",required:!1},{in:"query",name:"newerThan",schema:{type:"integer"},description:"filter by creation date",required:!1},{in:"query",name:"fromYear",schema:{type:"integer"},description:"filter by year",required:!1},{in:"query",name:"toYear",schema:{type:"integer"},description:"filter by year",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"list",schema:{$ref:"#/components/schemas/JamParameters.ListType"},description:"the type of the item list",required:!0},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/track/similar":{get:{operationId:"trackController.similar",description:"get the similar tracks by track id",tags:["track"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/episode/id":{get:{operationId:"episodeController.id",description:"get a podcast episode by id",tags:["episode"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.PodcastEpisode"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/episode/ids":{get:{operationId:"episodeController.ids",description:"get podcast episodes by ids",tags:["episode"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.PodcastEpisode"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/episode/search":{get:{operationId:"episodeController.search",description:"search podcast episodes",tags:["episode"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.PodcastEpisode"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"podcastID",schema:{type:"string"},description:"filter by podcast id",required:!1},{in:"query",name:"name",schema:{type:"string"},description:"filter by title",required:!1},{in:"query",name:"status",schema:{type:"string"},description:"filter by status",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/episode/retrieve":{get:{operationId:"episodeController.retrieve",description:"retrieve a podcast episode media file",tags:["episode"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/episode/state":{get:{operationId:"episodeController.state",description:"get the user state (fav/rating) by podcast episode id",tags:["episode"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.State"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/episode/states":{get:{operationId:"episodeController.states",description:"get the user states (fav/rating) by podcast episode ids",tags:["episode"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.States"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/episode/status":{get:{operationId:"episodeController.status",description:"get the episode state (e.g. downloading, new, etc.) by podcast episode id",tags:["episode"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.PodcastEpisodeStatus"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/episode/list":{get:{operationId:"episodeController.list",description:"get a list of episodes by list type",tags:["episode"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.PodcastEpisode"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"podcastID",schema:{type:"string"},description:"filter by podcast id",required:!1},{in:"query",name:"name",schema:{type:"string"},description:"filter by title",required:!1},{in:"query",name:"status",schema:{type:"string"},description:"filter by status",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"list",schema:{$ref:"#/components/schemas/JamParameters.ListType"},description:"the type of the item list",required:!0},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/podcast/id":{get:{operationId:"podcastController.id",description:"get a podcast by id",tags:["podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Podcast"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"podcastState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on podcast(s)",required:!1},{in:"query",name:"podcastEpisodes",schema:{default:!1,type:"boolean"},description:"include episodes on podcast(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/podcast/ids":{get:{operationId:"podcastController.ids",description:"get podcasts by ids",tags:["podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Podcast"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"podcastState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on podcast(s)",required:!1},{in:"query",name:"podcastEpisodes",schema:{default:!1,type:"boolean"},description:"include episodes on podcast(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/podcast/status":{get:{operationId:"podcastController.status",description:"get the podcast state (e.g. downloading, new, etc.) by podcast id",tags:["podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.PodcastStatus"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/podcast/search":{get:{operationId:"podcastController.search",description:"search podcasts",tags:["podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Podcast"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"url",schema:{type:"string"},description:"filter by podcast url",required:!1},{in:"query",name:"title",schema:{type:"string"},description:"filter by podcast title",required:!1},{in:"query",name:"status",schema:{type:"string"},description:"filter by podcast status",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"podcastState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on podcast(s)",required:!1},{in:"query",name:"podcastEpisodes",schema:{default:!1,type:"boolean"},description:"include episodes on podcast(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/podcast/refreshAll":{get:{operationId:"podcastController.refreshAll",description:"check all podcast feeds for new episodes",tags:["podcast"],responses:{200:{description:"ok"}}}},"/podcast/refresh":{get:{operationId:"podcastController.refresh",description:"check podcast feeds for new episodes by podcast id",tags:["podcast"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/podcast/state":{get:{operationId:"podcastController.state",description:"get the user state (fav/rating) by podcast id",tags:["podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.State"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/podcast/states":{get:{operationId:"podcastController.states",description:"get the user states (fav/rating) by podcast ids",tags:["podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.States"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/podcast/list":{get:{operationId:"podcastController.list",description:"get a list of podcasts by list type",tags:["podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Podcast"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"url",schema:{type:"string"},description:"filter by podcast url",required:!1},{in:"query",name:"title",schema:{type:"string"},description:"filter by podcast title",required:!1},{in:"query",name:"status",schema:{type:"string"},description:"filter by podcast status",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"podcastState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on podcast(s)",required:!1},{in:"query",name:"podcastEpisodes",schema:{default:!1,type:"boolean"},description:"include episodes on podcast(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"list",schema:{$ref:"#/components/schemas/JamParameters.ListType"},description:"the type of the item list",required:!0},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/radio/id":{get:{operationId:"radioController.id",tags:["radio"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Radio"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"radioState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on radio(s)",required:!0}]}},"/radio/ids":{get:{operationId:"radioController.ids",tags:["radio"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Radio"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"radioState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on radio(s)",required:!0}]}},"/radio/search":{get:{operationId:"radioController.search",tags:["radio"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Radio"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"radioState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on radio(s)",required:!0}]}},"/radio/state":{get:{operationId:"radioController.state",tags:["radio"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.State"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/radio/states":{get:{operationId:"radioController.states",tags:["radio"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.States"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/artist/id":{get:{operationId:"artistController.id",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Artist"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"artistAlbums",schema:{default:!1,type:"boolean"},description:"include albums on artist(s)",required:!1},{in:"query",name:"artistAlbumIDs",schema:{default:!1,type:"boolean"},description:"include album ids on artist(s)",required:!1},{in:"query",name:"artistState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on artist(s)",required:!1},{in:"query",name:"artistTracks",schema:{default:!1,type:"boolean"},description:"include tracks on artist(s)",required:!1},{in:"query",name:"artistTracksIDs",schema:{default:!1,type:"boolean"},description:"include track ids on artist(s)",required:!1},{in:"query",name:"artistInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on artist(s)",required:!1},{in:"query",name:"artistInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar artists on artist(s)",required:!1},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/artist/ids":{get:{operationId:"artistController.ids",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Artist"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"artistAlbums",schema:{default:!1,type:"boolean"},description:"include albums on artist(s)",required:!1},{in:"query",name:"artistAlbumIDs",schema:{default:!1,type:"boolean"},description:"include album ids on artist(s)",required:!1},{in:"query",name:"artistState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on artist(s)",required:!1},{in:"query",name:"artistTracks",schema:{default:!1,type:"boolean"},description:"include tracks on artist(s)",required:!1},{in:"query",name:"artistTracksIDs",schema:{default:!1,type:"boolean"},description:"include track ids on artist(s)",required:!1},{in:"query",name:"artistInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on artist(s)",required:!1},{in:"query",name:"artistInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar artists on artist(s)",required:!1},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/artist/search":{get:{operationId:"artistController.search",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Artist"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"name",schema:{type:"string"},description:"filter by name",required:!1},{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"albumID",schema:{type:"string"},description:"filter by album id",required:!1},{in:"query",name:"mbArtistID",schema:{type:"string"},description:"filter by musicbrainz album id",required:!1},{in:"query",name:"newerThan",schema:{minimum:0,type:"integer"},description:"filter by creation date (unix time)",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"artistAlbums",schema:{default:!1,type:"boolean"},description:"include albums on artist(s)",required:!1},{in:"query",name:"artistAlbumIDs",schema:{default:!1,type:"boolean"},description:"include album ids on artist(s)",required:!1},{in:"query",name:"artistState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on artist(s)",required:!1},{in:"query",name:"artistTracks",schema:{default:!1,type:"boolean"},description:"include tracks on artist(s)",required:!1},{in:"query",name:"artistTracksIDs",schema:{default:!1,type:"boolean"},description:"include track ids on artist(s)",required:!1},{in:"query",name:"artistInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on artist(s)",required:!1},{in:"query",name:"artistInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar artists on artist(s)",required:!1},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/artist/state":{get:{operationId:"artistController.state",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.State"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/artist/states":{get:{operationId:"artistController.states",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.States"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/artist/list":{get:{operationId:"artistController.list",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Artist"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"name",schema:{type:"string"},description:"filter by name",required:!1},{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"albumID",schema:{type:"string"},description:"filter by album id",required:!1},{in:"query",name:"mbArtistID",schema:{type:"string"},description:"filter by musicbrainz album id",required:!1},{in:"query",name:"newerThan",schema:{minimum:0,type:"integer"},description:"filter by creation date (unix time)",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"artistAlbums",schema:{default:!1,type:"boolean"},description:"include albums on artist(s)",required:!1},{in:"query",name:"artistAlbumIDs",schema:{default:!1,type:"boolean"},description:"include album ids on artist(s)",required:!1},{in:"query",name:"artistState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on artist(s)",required:!1},{in:"query",name:"artistTracks",schema:{default:!1,type:"boolean"},description:"include tracks on artist(s)",required:!1},{in:"query",name:"artistTracksIDs",schema:{default:!1,type:"boolean"},description:"include track ids on artist(s)",required:!1},{in:"query",name:"artistInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on artist(s)",required:!1},{in:"query",name:"artistInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar artists on artist(s)",required:!1},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"list",schema:{$ref:"#/components/schemas/JamParameters.ListType"},description:"the type of the item list",required:!0},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/artist/similar/tracks":{get:{operationId:"artistController.similarTracks",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/artist/similar":{get:{operationId:"artistController.similar",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Artist"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"artistAlbums",schema:{default:!1,type:"boolean"},description:"include albums on artist(s)",required:!1},{in:"query",name:"artistAlbumIDs",schema:{default:!1,type:"boolean"},description:"include album ids on artist(s)",required:!1},{in:"query",name:"artistState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on artist(s)",required:!1},{in:"query",name:"artistTracks",schema:{default:!1,type:"boolean"},description:"include tracks on artist(s)",required:!1},{in:"query",name:"artistTracksIDs",schema:{default:!1,type:"boolean"},description:"include track ids on artist(s)",required:!1},{in:"query",name:"artistInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on artist(s)",required:!1},{in:"query",name:"artistInfoSimilar",schema:{default:!1,type:"boolean"},description:"include similar artists on artist(s)",required:!1},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/artist/index":{get:{operationId:"artistController.index",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.ArtistIndex"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1}]}},"/artist/tracks":{get:{operationId:"artistController.tracks",tags:["artist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/album/id":{get:{operationId:"albumController.id",tags:["album"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Album"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/album/ids":{get:{operationId:"albumController.ids",tags:["album"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Album"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/album/list":{get:{operationId:"albumController.list",tags:["album"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Album"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"name",schema:{type:"string"},description:"filter by name",required:!1},{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"artist",schema:{type:"string"},description:"filter by artist name",required:!1},{in:"query",name:"artistID",schema:{type:"string"},description:"filter by artist id",required:!1},{in:"query",name:"trackID",schema:{type:"string"},description:"filter by track id",required:!1},{in:"query",name:"mbAlbumID",schema:{type:"string"},description:"filter by album id",required:!1},{in:"query",name:"mbArtistID",schema:{type:"string"},description:"filter by artist id",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:"filter by genre",required:!1},{in:"query",name:"newerThan",schema:{minimum:0,type:"integer"},description:"filter by creation date (unix time)",required:!1},{in:"query",name:"fromYear",schema:{minimum:0,type:"integer"},description:"filter by year",required:!1},{in:"query",name:"toYear",schema:{minimum:0,type:"integer"},description:"filter by year",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"list",schema:{$ref:"#/components/schemas/JamParameters.ListType"},description:"the type of the item list",required:!0}]}},"/album/search":{get:{operationId:"albumController.search",tags:["album"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Album"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"name",schema:{type:"string"},description:"filter by name",required:!1},{in:"query",name:"rootID",schema:{type:"string"},description:"filter by root id",required:!1},{in:"query",name:"artist",schema:{type:"string"},description:"filter by artist name",required:!1},{in:"query",name:"artistID",schema:{type:"string"},description:"filter by artist id",required:!1},{in:"query",name:"trackID",schema:{type:"string"},description:"filter by track id",required:!1},{in:"query",name:"mbAlbumID",schema:{type:"string"},description:"filter by album id",required:!1},{in:"query",name:"mbArtistID",schema:{type:"string"},description:"filter by artist id",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:"filter by genre",required:!1},{in:"query",name:"newerThan",schema:{minimum:0,type:"integer"},description:"filter by creation date (unix time)",required:!1},{in:"query",name:"fromYear",schema:{minimum:0,type:"integer"},description:"filter by year",required:!1},{in:"query",name:"toYear",schema:{minimum:0,type:"integer"},description:"filter by year",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"albumTracks",schema:{default:!1,type:"boolean"},description:"include tracks on album(s)",required:!1},{in:"query",name:"albumTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on album(s)",required:!1},{in:"query",name:"albumState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on album(s)",required:!1},{in:"query",name:"albumInfo",schema:{default:!1,type:"boolean"},description:"include extended meta data on album(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/album/state":{get:{operationId:"albumController.state",tags:["album"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.State"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/album/states":{get:{operationId:"albumController.states",tags:["album"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.States"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/album/similar/tracks":{get:{operationId:"albumController.similarTracks",tags:["album"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1},{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1}]}},"/album/tracks":{get:{operationId:"albumController.tracks",tags:["album"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/playlist/id":{get:{operationId:"playlistController.id",tags:["playlist"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Playlist"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0},{in:"query",name:"playlistTracks",schema:{default:!1,type:"boolean"},description:"include tracks on playlist(s)",required:!1},{in:"query",name:"playlistTracksIDs",schema:{default:!1,type:"boolean"},description:"include track ids on playlist(s)",required:!1},{in:"query",name:"playlistState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on playlist(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/playlist/ids":{get:{operationId:"playlistController.ids",tags:["playlist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Playlist"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"playlistTracks",schema:{default:!1,type:"boolean"},description:"include tracks on playlist(s)",required:!1},{in:"query",name:"playlistTracksIDs",schema:{default:!1,type:"boolean"},description:"include track ids on playlist(s)",required:!1},{in:"query",name:"playlistState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on playlist(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/playlist/search":{get:{operationId:"playlistController.search",tags:["playlist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Playlist"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"name",schema:{type:"string"},description:"filter by playlist name",required:!1},{in:"query",name:"isPublic",schema:{type:"boolean"},description:"filter by public state",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1},{in:"query",name:"playlistTracks",schema:{default:!1,type:"boolean"},description:"include tracks on playlist(s)",required:!1},{in:"query",name:"playlistTracksIDs",schema:{default:!1,type:"boolean"},description:"include track ids on playlist(s)",required:!1},{in:"query",name:"playlistState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on playlist(s)",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/playlist/state":{get:{operationId:"playlistController.state",tags:["playlist"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.State"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/playlist/states":{get:{operationId:"playlistController.states",tags:["playlist"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.States"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/playlist/tracks":{get:{operationId:"playlistController.tracks",tags:["playlist"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/user/search":{get:{operationId:"userController.search",tags:["user"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.User"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"name",schema:{type:"string"},description:"filter by user name",required:!1},{in:"query",name:"isAdmin",schema:{type:"boolean"},description:"filter by user admin role",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1}]}},"/user/id":{get:{operationId:"userController.id",tags:["user"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.User"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/user/ids":{get:{operationId:"userController.ids",tags:["user"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.User"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/playqueue/get":{get:{operationId:"playqueueController.get",description:"get a playqueue for calling user",tags:["playqueue"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.PlayQueue"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"playQueueTracks",schema:{default:!1,type:"boolean"},description:"include tracks on playqueue",required:!1},{in:"query",name:"playQueueTrackIDs",schema:{default:!1,type:"boolean"},description:"include track ids on playqueue",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/root/search":{get:{operationId:"rootController.search",tags:["root"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Root"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"offset",schema:{default:0,minimum:0,type:"integer"},description:"get back items from position",required:!1},{in:"query",name:"amount",schema:{minimum:1,type:"integer"},description:"get back number of items",required:!1},{in:"query",name:"query",schema:{type:"string"},description:"search query",required:!1},{in:"query",name:"sortField",schema:{type:"string"},description:"the obj property name to sort on (e.g. 'artist', 'creation')",required:!1},{in:"query",name:"sortDescending",schema:{default:!1,type:"boolean"},description:"the sort direction",required:!1}]}},"/root/id":{get:{operationId:"rootController.id",tags:["root"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Root"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/root/ids":{get:{operationId:"rootController.ids",tags:["root"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Root"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"ids",schema:{type:"array",items:{type:"string"}},description:"array of item ids",required:!0}]}},"/root/scan":{get:{operationId:"rootController.scan",tags:["root"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/root/scanAll":{get:{operationId:"rootController.scanAll",tags:["root"],responses:{200:{description:"ok"},401:{description:"unauthorized"},500:{description:"internal server error"}}}},"/root/status":{get:{operationId:"rootController.status",tags:["root"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.RootStatus"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/folder/download":{get:{operationId:"folderController.download",tags:["folder"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}},"application/tar":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"zip",enum:["tar","zip"],type:"string"},description:"format of download stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/folder/image":{get:{operationId:"folderController.image",tags:["folder"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/track/stream":{get:{operationId:"trackController.stream",tags:["track"],responses:{200:{description:"binary data",content:{"audio/mpeg":{schema:{type:"string",format:"binary"}},"audio/flac":{schema:{type:"string",format:"binary"}},"audio/mp4":{schema:{type:"string",format:"binary"}},"audio/ogg":{schema:{type:"string",format:"binary"}},"audio/x-flv":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"maxBitRate",schema:{minimum:10,type:"integer"},description:"maximal bitrate if transcoding (in Kbps)",required:!1},{in:"query",name:"format",schema:{default:"mp3",enum:["mp3"],type:"string"},description:"format of audio stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/track/download":{get:{operationId:"trackController.download",tags:["track"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}},"application/tar":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"zip",enum:["tar","zip"],type:"string"},description:"format of download stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/track/image":{get:{operationId:"trackController.image",tags:["track"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/episode/stream":{get:{operationId:"episodeController.stream",tags:["episode"],responses:{200:{description:"binary data",content:{"audio/mpeg":{schema:{type:"string",format:"binary"}},"audio/flac":{schema:{type:"string",format:"binary"}},"audio/mp4":{schema:{type:"string",format:"binary"}},"audio/ogg":{schema:{type:"string",format:"binary"}},"audio/x-flv":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"maxBitRate",schema:{minimum:10,type:"integer"},description:"maximal bitrate if transcoding (in Kbps)",required:!1},{in:"query",name:"format",schema:{default:"mp3",enum:["mp3"],type:"string"},description:"format of audio stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/episode/download":{get:{operationId:"episodeController.download",tags:["episode"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}},"application/tar":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"zip",enum:["tar","zip"],type:"string"},description:"format of download stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/episode/image":{get:{operationId:"episodeController.image",tags:["episode"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/podcast/image":{get:{operationId:"podcastController.image",tags:["podcast"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/podcast/download":{get:{operationId:"podcastController.download",tags:["podcast"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}},"application/tar":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"zip",enum:["tar","zip"],type:"string"},description:"format of download stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/artist/image":{get:{operationId:"artistController.image",tags:["artist"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/artist/download":{get:{operationId:"artistController.download",tags:["artist"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}},"application/tar":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"zip",enum:["tar","zip"],type:"string"},description:"format of download stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/album/image":{get:{operationId:"albumController.image",tags:["album"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/album/download":{get:{operationId:"albumController.download",tags:["album"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}},"application/tar":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"zip",enum:["tar","zip"],type:"string"},description:"format of download stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/bookmark/list":{get:{operationId:"bookmarkController.list",description:"get a bookmarks list for the calling user",tags:["bookmark"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"array",items:{$ref:"#/components/schemas/Jam.Bookmark"}}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"bookmarkTrack",schema:{default:!1,type:"boolean"},description:"include the track of the bookmark",required:!1},{in:"query",name:"trackMedia",schema:{default:!1,type:"boolean"},description:"include media informations on track(s)",required:!1},{in:"query",name:"trackTag",schema:{default:!1,type:"boolean"},description:"include tag on track(s)",required:!1},{in:"query",name:"trackID3",schema:{default:!1,type:"boolean"},description:"include id3 tag on track(s)",required:!1},{in:"query",name:"trackState",schema:{default:!1,type:"boolean"},description:"include user states (fav,rate) on track(s)",required:!1}]}},"/playlist/image":{get:{operationId:"playlistController.image",tags:["playlist"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/playlist/download":{get:{operationId:"playlistController.download",tags:["playlist"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}},"application/tar":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"zip",enum:["tar","zip"],type:"string"},description:"format of download stream",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/user/image":{get:{operationId:"userController.image",tags:["user"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/root/image":{get:{operationId:"rootController.image",tags:["root"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"query",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!1},{in:"query",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/image/{id}-{size}.{format}":{get:{operationId:"imageController.image",tags:["image"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!0},{in:"path",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!0},{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/image/{id}-{size}":{get:{operationId:"imageController.image",tags:["image"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"size",schema:{minimum:16,maximum:1024,type:"integer"},description:"size of the image",required:!0},{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/image/{id}.{format}":{get:{operationId:"imageController.image",tags:["image"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"format",schema:{default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},description:"format of the image",required:!0},{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/image/{id}":{get:{operationId:"imageController.image",tags:["image"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/stream/{id}.{format}":{get:{operationId:"streamController.stream",description:"stream a media file in a format",tags:["media"],responses:{200:{description:"binary data",content:{"audio/mpeg":{schema:{type:"string",format:"binary"}},"audio/flac":{schema:{type:"string",format:"binary"}},"audio/mp4":{schema:{type:"string",format:"binary"}},"audio/ogg":{schema:{type:"string",format:"binary"}},"audio/x-flv":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"format",schema:{default:"mp3",enum:["mp3"],type:"string"},description:"format of audio stream",required:!0},{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/stream/{id}":{get:{operationId:"streamController.stream",description:"stream a media file",tags:["media"],responses:{200:{description:"binary data",content:{"audio/mpeg":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/waveform/{id}.{format}":{get:{operationId:"waveformController.waveform",description:"get peaks waveform data as svg | json | binary",tags:["media"],responses:{200:{description:"binary data",content:{"image/svg+xml":{schema:{type:"string",format:"binary"}},"application/json":{schema:{type:"string",format:"binary"}},"application/binary":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"format",schema:{default:"svg",enum:["dat","json","svg"],type:"string"},description:"format of waveform data",required:!0},{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/download/{id}":{get:{operationId:"downloadController.download",tags:["download"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/download/{id}.{format}":{get:{operationId:"downloadController.download",tags:["download"],responses:{200:{description:"binary data",content:{"application/zip":{schema:{type:"string",format:"binary"}},"application/tar":{schema:{type:"string",format:"binary"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},parameters:[{in:"path",name:"format",schema:{default:"zip",enum:["tar","zip"],type:"string"},description:"format of download stream",required:!0},{in:"path",name:"id",schema:{type:"string"},description:"the item id",required:!0}]}},"/login":{post:{operationId:"login",description:"login an user",tags:["auth"],responses:{200:{description:"ok",headers:{"Set-Cookie":{schema:{type:"string",example:"jam.sid=abcde12345; Path=/; HttpOnly"}}},content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Session",description:"returns a Jam.Session on success"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},security:[],requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Login"}}}}}},"/logout":{post:{operationId:"logout",description:"logout an user",tags:["auth"],responses:{200:{description:"ok"},401:{description:"unauthorized"},500:{description:"internal server error"}}}},"/bookmark/delete":{post:{operationId:"bookmarkController.delete",description:"delete a bookmark",tags:["bookmark"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ID"}}}}}},"/podcast/delete":{post:{operationId:"podcastController.delete",tags:["podcast"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ID"}}}}}},"/chat/delete":{post:{operationId:"chatController.delete",tags:["chat"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ChatDelete"}}}}}},"/playlist/delete":{post:{operationId:"playlistController.delete",tags:["playlist"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ID"}}}}}},"/user/delete":{post:{operationId:"userController.delete",tags:["user"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ID"}}}}}},"/root/delete":{post:{operationId:"rootController.delete",tags:["root"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ID"}}}}}},"/radio/delete":{post:{operationId:"radioController.delete",tags:["radio"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ID"}}}}}},"/chat/create":{post:{operationId:"chatController.create",tags:["chat"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ChatNew"}}}}}},"/track/fav/update":{post:{operationId:"trackController.favUpdate",tags:["track"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the fav user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Fav"}}}}}},"/track/rate/update":{post:{operationId:"trackController.rateUpdate",tags:["track"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the rating user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Rate"}}}}}},"/track/tagID3/update":{post:{operationId:"trackController.tagID3Update",tags:["track"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.TagID3Update"}}}}}},"/track/tagID3s/update":{post:{operationId:"trackController.tagID3sUpdate",tags:["track"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.TagID3sUpdate"}}}}}},"/radio/update":{post:{operationId:"radioController.update",tags:["radio"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.RadioUpdate"}}}}}},"/folder/imageUpload/update":{post:{operationId:"folderController.imageUploadUpdate",tags:["folder"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ID"}}}}}},"/folder/imageUrl/update":{post:{operationId:"folderController.imageUrlUpdate",tags:["folder"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Set the image of a folder by url",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.FolderEditImg"}}}}}},"/folder/name/update":{post:{operationId:"folderController.nameUpdate",tags:["folder"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Rename the folder",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.FolderEditName"}}}}}},"/folder/fav/update":{post:{operationId:"folderController.favUpdate",tags:["folder"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the fav user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Fav"}}}}}},"/folder/rate/update":{post:{operationId:"folderController.rateUpdate",tags:["folder"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the rating user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Rate"}}}}}},"/album/fav/update":{post:{operationId:"albumController.favUpdate",tags:["album"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the fav user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Fav"}}}}}},"/album/rate/update":{post:{operationId:"albumController.rateUpdate",tags:["album"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the rating user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Rate"}}}}}},"/artist/fav/update":{post:{operationId:"artistController.favUpdate",tags:["artist"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the fav user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Fav"}}}}}},"/artist/rate/update":{post:{operationId:"artistController.rateUpdate",tags:["artist"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the rating user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Rate"}}}}}},"/episode/fav/update":{post:{operationId:"episodeController.favUpdate",tags:["episode"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the fav user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Fav"}}}}}},"/episode/rate/update":{post:{operationId:"episodeController.rateUpdate",tags:["episode"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the rating user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Rate"}}}}}},"/bookmark/create":{post:{operationId:"bookmarkController.create",description:"create a bookmark",tags:["bookmark"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Bookmark"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.BookmarkCreate"}}}}}},"/radio/create":{post:{operationId:"radioController.create",tags:["radio"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Radio"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.RadioNew"}}}}}},"/podcast/create":{post:{operationId:"podcastController.create",tags:["podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Podcast"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.PodcastNew"}}}}}},"/podcast/fav/update":{post:{operationId:"podcastController.favUpdate",tags:["podcast"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the fav user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Fav"}}}}}},"/podcast/rate/update":{post:{operationId:"podcastController.rateUpdate",tags:["podcast"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the rating user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Rate"}}}}}},"/playlist/create":{post:{operationId:"playlistController.create",tags:["playlist"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Playlist"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.PlaylistNew"}}}}}},"/playlist/update":{post:{operationId:"playlistController.update",tags:["playlist"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.PlaylistUpdate"}}}}}},"/playlist/fav/update":{post:{operationId:"playlistController.favUpdate",tags:["playlist"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the fav user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Fav"}}}}}},"/playlist/rate/update":{post:{operationId:"playlistController.rateUpdate",tags:["playlist"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{description:"Change the rating user state",required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.Rate"}}}}}},"/playqueue/update":{post:{operationId:"playqueueController.update",description:"create/update the playqueue for calling user",tags:["playqueue"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.PlayQueueSet"}}}}}},"/playqueue/delete":{post:{operationId:"playqueueController.delete",description:"delete the playqueue for calling user",tags:["playqueue"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}}}},"/user/create":{post:{operationId:"userController.create",description:"create a new user",tags:["user"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.User"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.UserNew"}}}}}},"/user/update":{post:{operationId:"userController.update",description:"update user",tags:["user"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.UserUpdate"}}}}}},"/user/password/update":{post:{operationId:"userController.passwordUpdate",description:"set a password for the user",tags:["user"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.UserPasswordUpdate"}}}}}},"/user/email/update":{post:{operationId:"userController.emailUpdate",description:"set an email for an user",tags:["user"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.UserEmailUpdate"}}}}}},"/user/imageUpload/update":{post:{operationId:"userController.imageUploadUpdate",description:"set an avatar image for an user",tags:["user"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.ID"}}}}}},"/root/create":{post:{operationId:"rootController.create",tags:["root"],responses:{200:{description:"ok",content:{"application/json":{schema:{$ref:"#/components/schemas/Jam.Root"}}}},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.RootNew"}}}}}},"/root/update":{post:{operationId:"rootController.update",tags:["root"],responses:{200:{description:"ok"},400:{description:"parameter is missing or invalid"},401:{description:"unauthorized"},404:{description:"requested object not found"},500:{description:"internal server error"}},requestBody:{required:!0,content:{"application/json":{schema:{$ref:"#/components/schemas/JamParameters.RootUpdate"}}}}}}},components:{securitySchemes:{cookieAuth:{type:"apiKey",in:"cookie",name:"jam.sid"},bearerAuth:{type:"http",scheme:"bearer",bearerFormat:"JWT"}},schemas:{"Jam.Ping":{type:"object",properties:{version:{type:"string"}},required:["version"]},"Jam.Session":{type:"object",properties:{version:{type:"string"},user:{$ref:"#/components/schemas/Jam.User"},jwt:{type:"string"},allowedCookieDomains:{type:"array",items:{type:"string"}}},required:["allowedCookieDomains","version"]},"Jam.User":{type:"object",properties:{email:{type:"string"},roles:{$ref:"#/components/schemas/Jam.Roles"},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","email","id","name","roles"]},"Jam.Roles":{type:"object",properties:{stream:{type:"boolean"},upload:{type:"boolean"},podcast:{type:"boolean"},admin:{type:"boolean"}}},"Jam.State":{type:"object",properties:{played:{type:"number"},lastplayed:{type:"number"},faved:{type:"number"},rated:{type:"number"}}},"LastFM.Result":{type:"object",properties:{similartracks:{$ref:"#/components/schemas/LastFM.SimilarTracks"},toptracks:{$ref:"#/components/schemas/LastFM.TopTracks"},artist:{$ref:"#/components/schemas/LastFM.Artist"},album:{$ref:"#/components/schemas/LastFM.Album"},track:{$ref:"#/components/schemas/LastFM.Track"}}},"LastFM.SimilarTracks":{type:"object",properties:{track:{type:"array",items:{$ref:"#/components/schemas/LastFM.Track"}},artist:{type:"string"}},required:["artist","track"]},"LastFM.Track":{type:"object",properties:{name:{type:"string"},url:{type:"string"},duration:{type:"string"},playcount:{type:"string"},mbid:{type:"string"},match:{type:"string"},rank:{type:"string"},streamable:{$ref:"#/components/schemas/LastFM.Streamable"},artist:{$ref:"#/components/schemas/LastFM.ArtistInfo"},image:{type:"array",items:{$ref:"#/components/schemas/LastFM.Image"}}},required:["artist","duration","image","match","mbid","name","playcount","rank","streamable","url"]},"LastFM.Streamable":{type:"object",properties:{url:{type:"string"},fulltrack:{type:"string"}},required:["fulltrack","url"]},"LastFM.ArtistInfo":{type:"object",properties:{name:{type:"string"},mbid:{type:"string"},url:{type:"string"}},required:["mbid","name","url"]},"LastFM.Image":{type:"object",properties:{url:{type:"string"},size:{type:"string"}},required:["size","url"]},"LastFM.TopTracks":{type:"object",properties:{track:{type:"array",items:{$ref:"#/components/schemas/LastFM.TopTrack"}},artist:{type:"string"}},required:["artist","track"]},"LastFM.TopTrack":{type:"object",properties:{name:{type:"string"},mbid:{type:"string"},url:{type:"string"},streamable:{type:"string"},playcount:{type:"number"},listeners:{type:"number"},image:{type:"array",items:{$ref:"#/components/schemas/LastFM.Image"}},artist:{$ref:"#/components/schemas/LastFM.ArtistInfo"},rank:{type:"string"}},required:["artist","image","listeners","mbid","name","playcount","rank","streamable","url"]},"LastFM.Artist":{type:"object",properties:{name:{type:"string"},mbid:{type:"string"},url:{type:"string"},image:{type:"array",items:{$ref:"#/components/schemas/LastFM.Image"}},streamable:{type:"string"},ontour:{type:"string"},stats:{$ref:"#/components/schemas/LastFM.Stats"},tags:{type:"array",items:{$ref:"#/components/schemas/LastFM.Tag"}},bio:{$ref:"#/components/schemas/LastFM.Biography"},similar:{$ref:"#/components/schemas/LastFM.SimilarArtists"}},required:["image","mbid","name","ontour","streamable","tags","url"]},"LastFM.Stats":{type:"object",properties:{listeners:{type:"string"},playcount:{type:"string"}},required:["listeners","playcount"]},"LastFM.Tag":{type:"object",properties:{name:{type:"string"},url:{type:"string"}},required:["name","url"]},"LastFM.Biography":{type:"object",properties:{published:{type:"string"},summary:{type:"string"},content:{type:"string"},links:{type:"array",items:{$ref:"#/components/schemas/LastFM.Link"}}},required:["content","published","summary"]},"LastFM.Link":{type:"object",properties:{url:{type:"string"},rel:{type:"string"},href:{type:"string"}},required:["href","rel","url"]},"LastFM.SimilarArtists":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/components/schemas/LastFM.SimilarArtist"}}}},"LastFM.SimilarArtist":{type:"object",properties:{name:{type:"string"},url:{type:"string"},image:{type:"array",items:{$ref:"#/components/schemas/LastFM.Image"}}},required:["image","name","url"]},"LastFM.Album":{type:"object",properties:{name:{type:"string"},artist:{type:"string"},mbid:{type:"string"},url:{type:"string"},image:{type:"array",items:{$ref:"#/components/schemas/LastFM.Image"}},listeners:{type:"string"},playcount:{type:"string"},tracks:{type:"array",items:{$ref:"#/components/schemas/LastFM.Track"}},tags:{type:"array",items:{$ref:"#/components/schemas/LastFM.Tag"}},wiki:{$ref:"#/components/schemas/LastFM.Wiki"}},required:["artist","image","listeners","mbid","name","playcount","tracks","url"]},"LastFM.Wiki":{type:"object",properties:{published:{type:"string"},summary:{type:"string"},content:{type:"string"}},required:["content","published","summary"]},"Acoustid.Result":{type:"object",properties:{recordings:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Recording"}},score:{type:"number"},id:{type:"string"}},required:["id","recordings","score"]},"Acoustid.Recording":{type:"object",properties:{id:{type:"string"},sources:{type:"number"},artists:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Artist"}},duration:{type:"number"},releasegroups:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Releasegroup"}},title:{type:"string"}},required:["artists","duration","id","releasegroups","sources","title"]},"Acoustid.Artist":{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]},"Acoustid.Releasegroup":{type:"object",properties:{id:{type:"string"},releases:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Release"}},title:{type:"string"},secondarytypes:{type:"array",items:{type:"string"}},type:{type:"string"},artists:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Artist"}}},required:["artists","id","releases","secondarytypes","title","type"]},"Acoustid.Release":{type:"object",properties:{mediums:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Medium"}},id:{type:"string"},track_count:{type:"number"},medium_count:{type:"number"},releaseevents:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Releaseevent"}},country:{type:"string"},date:{$ref:"#/components/schemas/Acoustid.AcousticDate"},title:{type:"string"}},required:["country","date","id","medium_count","mediums","releaseevents","title","track_count"]},"Acoustid.Medium":{type:"object",properties:{position:{type:"number"},tracks:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Track"}},track_count:{type:"number"},format:{type:"string"},title:{type:"string"}},required:["format","position","title","track_count","tracks"]},"Acoustid.Track":{type:"object",properties:{position:{type:"number"},artists:{type:"array",items:{$ref:"#/components/schemas/Acoustid.Artist"}},id:{type:"string"},title:{type:"string"}},required:["artists","id","position","title"]},"Acoustid.Releaseevent":{type:"object",properties:{date:{$ref:"#/components/schemas/Acoustid.AcousticDate"},country:{type:"string"}},required:["country","date"]},"Acoustid.AcousticDate":{type:"object",properties:{month:{type:"number"},year:{type:"number"},day:{type:"number"}},required:["month","year"]},"MusicBrainz.Response":{type:"object",properties:{release:{$ref:"#/components/schemas/MusicBrainz.Release"},releases:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Release"}},releaseGroup:{$ref:"#/components/schemas/MusicBrainz.ReleaseGroup"},releaseGroups:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ReleaseGroup"}},recording:{$ref:"#/components/schemas/MusicBrainz.Recording"},recordings:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Recording"}},count:{type:"number"},offset:{type:"number"},created:{type:"string"}}},"MusicBrainz.Release":{type:"object",properties:{media:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ReleaseMedia"}},score:{type:"number"},count:{type:"number"},id:{type:"string"},title:{type:"string"},sortName:{type:"string"},status:{type:"string"},statusId:{type:"string"},date:{type:"string"},country:{type:"string"},packaging:{type:"string"},packagingId:{type:"string"},disambiguation:{type:"string"},annotation:{type:"string"},quality:{type:"string"},barcode:{type:"string"},asin:{type:"string"},textRepresentation:{type:"object",properties:{language:{type:"string"},script:{type:"string"}},required:["language","script"]},trackCount:{type:"number"},artistCredit:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ArtistCredit"}},releaseGroup:{$ref:"#/components/schemas/MusicBrainz.ReleaseGroupBase"},labelInfo:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Label"}},tags:{type:"array",items:{type:"object",properties:{count:{type:"number"},name:{type:"string"}},required:["count","name"]}},releaseEvents:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ReleaseEvent"}},coverArtArchive:{type:"object",properties:{front:{type:"boolean"},back:{type:"boolean"},darkened:{type:"boolean"},artwork:{type:"boolean"},count:{type:"number"}},required:["artwork","back","count","darkened","front"]}},required:["artistCredit","id","labelInfo","media","releaseEvents","releaseGroup","sortName","status","tags","textRepresentation","title","trackCount"]},"MusicBrainz.ReleaseMedia":{type:"object",properties:{format:{type:"string"},formatId:{type:"string"},title:{type:"string"},discCount:{type:"number"},trackCount:{type:"number"},position:{type:"number"},trackOffset:{type:"number"},tracks:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ReleaseTrack"}},discs:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Disc"}}},required:["discCount","format","position","trackCount","trackOffset"]},"MusicBrainz.ReleaseTrack":{type:"object",properties:{id:{type:"string"},title:{type:"string"},position:{type:"number"},length:{type:"number"},number:{type:"string"},recording:{$ref:"#/components/schemas/MusicBrainz.RecordingBase"},artistCredit:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ArtistCredit"}}},required:["id","length","number","position","title"]},"MusicBrainz.RecordingBase":{type:"object",properties:{id:{type:"string"},title:{type:"string"},disambiguation:{type:"string"},length:{type:"number"},video:{type:"boolean"},rating:{$ref:"#/components/schemas/MusicBrainz.Rating"},aliases:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Alias"}},artistCredit:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ArtistCredit"}},isrcs:{type:"array",items:{type:"string"}}},required:["disambiguation","id","length","title","video"]},"MusicBrainz.Rating":{type:"object",properties:{votesCount:{type:"number"},value:{type:"number"}},required:["value","votesCount"]},"MusicBrainz.Alias":{type:"object",properties:{name:{type:"string"},sortName:{type:"string"},locale:{type:"string"},type:{type:"string"},typeId:{type:"string"},primary:{type:"string"},beginDate:{type:"string"},endDate:{type:"string"},ended:{type:"boolean"}},required:["ended","name"]},"MusicBrainz.ArtistCredit":{type:"object",properties:{name:{type:"string"},joinphrase:{type:"string"},artist:{type:"object",properties:{id:{type:"string"},name:{type:"string"},sortName:{type:"string"},disambiguation:{type:"string"},aliases:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Alias"}}},required:["aliases","disambiguation","id","name","sortName"]}},required:["artist","joinphrase","name"]},"MusicBrainz.Disc":{type:"object",properties:{id:{type:"string"},sectors:{type:"number"},offsetCount:{type:"number"},offsets:{type:"array",items:{type:"number"}}},required:["id","offsetCount","offsets","sectors"]},"MusicBrainz.ReleaseGroupBase":{type:"object",properties:{id:{type:"string"},title:{type:"string"},disambiguation:{type:"string"},firstReleaseDate:{type:"string"},primaryType:{type:"string"},primaryTypeId:{type:"string"},secondaryTypes:{type:"array",items:{type:"string"}},secondaryTypeIds:{type:"array",items:{type:"string"}},rating:{$ref:"#/components/schemas/MusicBrainz.Rating"},artistCredit:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ArtistCredit"}}},required:["id","primaryType","title"]},"MusicBrainz.Label":{type:"object",properties:{catalogNumber:{type:"string"},label:{type:"object",properties:{id:{type:"string"},name:{type:"string"},disambiguation:{type:"string"},labelCode:{type:"string"},sortName:{type:"string"}},required:["id","name"]},aliases:{type:"array",items:{type:"object",properties:{name:{type:"string"},sortName:{type:"string"},ended:{type:"boolean"}},required:["ended","name","sortName"]}}},required:["aliases","catalogNumber","label"]},"MusicBrainz.ReleaseEvent":{type:"object",properties:{date:{type:"string"},area:{type:"object",properties:{id:{type:"string"},name:{type:"string"},sortName:{type:"string"},disambiguation:{type:"string"},iso31661Codes:{type:"array",items:{type:"string"}}},required:["id","iso31661Codes","name","sortName"]}},required:["area","date"]},"MusicBrainz.ReleaseGroup":{type:"object",properties:{releases:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Release"}},score:{type:"number"},count:{type:"number"},id:{type:"string"},title:{type:"string"},disambiguation:{type:"string"},firstReleaseDate:{type:"string"},primaryType:{type:"string"},primaryTypeId:{type:"string"},secondaryTypes:{type:"array",items:{type:"string"}},secondaryTypeIds:{type:"array",items:{type:"string"}},rating:{$ref:"#/components/schemas/MusicBrainz.Rating"},artistCredit:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ArtistCredit"}}},required:["id","primaryType","title"]},"MusicBrainz.Recording":{type:"object",properties:{releases:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Release"}},score:{type:"number"},count:{type:"number"},id:{type:"string"},title:{type:"string"},disambiguation:{type:"string"},length:{type:"number"},video:{type:"boolean"},rating:{$ref:"#/components/schemas/MusicBrainz.Rating"},aliases:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Alias"}},artistCredit:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.ArtistCredit"}},isrcs:{type:"array",items:{type:"string"}}},required:["disambiguation","id","length","title","video"]},"Jam.AutoComplete":{type:"object",properties:{tracks:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},artists:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},albums:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},folders:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},playlists:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},podcasts:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},episodes:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}}}},"Jam.Genre":{type:"object",properties:{name:{type:"string"},trackCount:{type:"number"},albumCount:{type:"number"},artistCount:{type:"number"}},required:["albumCount","artistCount","name","trackCount"]},"Jam.NowPlaying":{type:"object",properties:{username:{type:"string"},minutesAgo:{type:"number"},track:{$ref:"#/components/schemas/Jam.Track"}},required:["minutesAgo","username"]},"Jam.Track":{type:"object",properties:{duration:{type:"number"},tag:{$ref:"#/components/schemas/Jam.TrackTag"},tagID3:{$ref:"#/components/schemas/Jam.ID3Tag"},media:{$ref:"#/components/schemas/Jam.TrackMedia"},parentID:{type:"string"},artistID:{type:"string"},albumID:{type:"string"},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","duration","id","name","parentID"]},"Jam.TrackTag":{type:"object",properties:{title:{type:"string"},album:{type:"string"},artist:{type:"string"},genre:{type:"string"},year:{type:"number"},trackNr:{type:"number"},musicbrainz:{$ref:"#/components/schemas/Jam.TrackMBTag"}}},"Jam.TrackMBTag":{type:"object",properties:{trackID:{type:"string"},recordingID:{type:"string"},releaseTrackID:{type:"string"},artistID:{type:"string"},albumID:{type:"string"}}},"Jam.ID3Tag":{type:"object",properties:{version:{type:"number"},frames:{$ref:"#/components/schemas/ID3v2FrameValues.Frames"}},required:["frames","version"]},"ID3v2FrameValues.Frames":{type:"object",additionalProperties:{type:"array",items:{}},properties:{AENC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.AudioEncryption"}},APIC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Pic"}},ASPI:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},BUF:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},CDM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},CHAP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Chapter"}},CM1:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},CNT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Number"}},COM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.LangDescText"}},COMM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.LangDescText"}},COMR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},CRA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.AudioEncryption"}},CRM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},CTOC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.ChapterToc"}},ENCR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},EQU:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},EQUA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},ETC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.EventTimingCodes"}},ETCO:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.EventTimingCodes"}},GEO:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.GEOB"}},GEOB:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.GEOB"}},GRID:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},IPL:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.TextList"}},IPLS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.TextList"}},LINK:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Link"}},LNK:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Link"}},MCDI:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},MLL:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},MLLT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},NCO:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},NCON:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},OWNE:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},PCNT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Number"}},PCS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Number"}},PCST:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Number"}},PIC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Pic"}},POP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Popularimeter"}},POPM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Popularimeter"}},POSS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},PRI:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.IdBin"}},PRIV:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.IdBin"}},RBUF:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},REV:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},RGAD:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.ReplayGainAdjustment"}},RVA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.RVA"}},RVA2:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.RVA2"}},RVAD:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.RVA"}},RVRB:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},SEEK:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},SIGN:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},SLT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.SynchronisedLyricsEvent"}},STC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},SYLT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.SynchronisedLyrics"}},SYTC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},TAL:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TALB:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TBP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TBPM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TCM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TCMP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bool"}},TCO:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.TextList"}},TCOM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TCON:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.TextList"}},TCOP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TCP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bool"}},TCR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDAT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDES:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDLY:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDOR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDRC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDRL:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDTG:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TDY:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TEN:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TENC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TEXT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TFLT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TGID:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TID:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TIM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TIME:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TIPL:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.TextList"}},TIT1:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TIT2:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TIT3:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TKE:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TKEY:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TKWD:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},TLA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TLAN:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TLE:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TLEN:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TMCL:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.TextList"}},TMED:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TMOO:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TMT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOAL:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOF:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOFN:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOL:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOLY:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOPE:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TORY:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TOWN:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TP1:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.TextList"}},TP2:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TP3:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TP4:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TPA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TPB:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TPE1:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.TextList"}},TPE2:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TPE3:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TPE4:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TPOS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TPRO:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TPUB:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TRC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TRCK:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TRD:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TRDA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TRK:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TRSN:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TRSO:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TS2:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSI:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSIZ:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSO2:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSOA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSOC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSOP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSOT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSRC:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TSSE:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TST:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TT1:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TT2:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TT3:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TXT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TXX:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.IdText"}},TXXX:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.IdText"}},TYE:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},TYER:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},UFI:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.IdAscii"}},UFID:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.IdAscii"}},ULT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.LangDescText"}},USER:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},USLT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.LangDescText"}},WAF:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WAR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WAS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WCM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WCOM:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WCOP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WCP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WFD:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},WFED:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},WOAF:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WOAR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WOAS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WORS:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WPAY:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WPB:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WPUB:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Ascii"}},WXX:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.IdText"}},WXXX:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.IdText"}},XDOR:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},XHD3:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Bin"}},XSOA:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},XSOP:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}},XSOT:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.Text"}}}},"ID3v2FrameValues.AudioEncryption":{type:"object",properties:{id:{type:"string"},previewStart:{type:"number"},previewLength:{type:"number"},bin:{type:"string"}},required:["bin","id","previewLength","previewStart"]},"ID3v2FrameValues.Pic":{type:"object",properties:{description:{type:"string"},pictureType:{type:"number"},url:{type:"string"},bin:{type:"string"},mimeType:{type:"string"}},required:["description","pictureType"]},"ID3v2FrameValues.Bin":{type:"object",properties:{bin:{type:"string"}},required:["bin"]},"ID3v2FrameValues.Chapter":{type:"object",properties:{id:{type:"string"},start:{type:"number"},end:{type:"number"},offset:{type:"number"},offsetEnd:{type:"number"}},required:["end","id","offset","offsetEnd","start"]},"ID3v2FrameValues.Text":{type:"object",properties:{text:{type:"string"}},required:["text"]},"ID3v2FrameValues.Number":{type:"object",properties:{num:{type:"number"}},required:["num"]},"ID3v2FrameValues.LangDescText":{type:"object",properties:{language:{type:"string"},id:{type:"string"},text:{type:"string"}},required:["id","language","text"]},"ID3v2FrameValues.ChapterToc":{type:"object",properties:{id:{type:"string"},ordered:{type:"boolean"},topLevel:{type:"boolean"},children:{type:"array",items:{type:"string"}}},required:["children","id","ordered","topLevel"]},"ID3v2FrameValues.EventTimingCodes":{type:"object",properties:{format:{type:"number"},events:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.EventTimingCodesEvent"}}},required:["events","format"]},"ID3v2FrameValues.EventTimingCodesEvent":{type:"object",properties:{type:{type:"number"},timestamp:{type:"number"}},required:["timestamp","type"]},"ID3v2FrameValues.GEOB":{type:"object",properties:{filename:{type:"string"},mimeType:{type:"string"},contentDescription:{type:"string"},bin:{type:"string"}},required:["bin","contentDescription","filename","mimeType"]},"ID3v2FrameValues.TextList":{type:"object",properties:{list:{type:"array",items:{type:"string"}}},required:["list"]},"ID3v2FrameValues.Link":{type:"object",properties:{url:{type:"string"},id:{type:"string"},additional:{type:"array",items:{type:"string"}}},required:["additional","id","url"]},"ID3v2FrameValues.Popularimeter":{type:"object",properties:{rating:{type:"number"},count:{type:"number"},email:{type:"string"}},required:["count","email","rating"]},"ID3v2FrameValues.IdBin":{type:"object",properties:{id:{type:"string"},bin:{type:"string"}},required:["bin","id"]},"ID3v2FrameValues.ReplayGainAdjustment":{type:"object",properties:{peak:{type:"number"},radioAdjustment:{type:"number"},audiophileAdjustment:{type:"number"}},required:["audiophileAdjustment","peak","radioAdjustment"]},"ID3v2FrameValues.RVA":{type:"object",properties:{right:{type:"number"},left:{type:"number"},peakRight:{type:"number"},peakLeft:{type:"number"},rightBack:{type:"number"},leftBack:{type:"number"},peakRightBack:{type:"number"},peakLeftBack:{type:"number"},center:{type:"number"},peakCenter:{type:"number"},bass:{type:"number"},peakBass:{type:"number"}},required:["left","right"]},"ID3v2FrameValues.RVA2":{type:"object",properties:{id:{type:"string"},channels:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.RVA2Channel"}}},required:["channels","id"]},"ID3v2FrameValues.RVA2Channel":{type:"object",properties:{type:{type:"number"},adjustment:{type:"number"},peak:{type:"number"}},required:["adjustment","type"]},"ID3v2FrameValues.SynchronisedLyricsEvent":{type:"object",properties:{timestamp:{type:"number"},text:{type:"string"}},required:["text","timestamp"]},"ID3v2FrameValues.SynchronisedLyrics":{type:"object",properties:{id:{type:"string"},language:{type:"string"},timestampFormat:{type:"number"},contentType:{type:"number"},events:{type:"array",items:{$ref:"#/components/schemas/ID3v2FrameValues.SynchronisedLyricsEvent"}}},required:["contentType","events","id","language","timestampFormat"]},"ID3v2FrameValues.Bool":{type:"object",properties:{bool:{type:"boolean"}},required:["bool"]},"ID3v2FrameValues.IdText":{type:"object",properties:{id:{type:"string"},text:{type:"string"}},required:["id","text"]},"ID3v2FrameValues.IdAscii":{type:"object",properties:{id:{type:"string"},text:{type:"string"}},required:["id","text"]},"ID3v2FrameValues.Ascii":{type:"object",properties:{text:{type:"string"}},required:["text"]},"Jam.TrackMedia":{type:"object",properties:{bitRate:{type:"number"},format:{type:"string"},channels:{type:"number"},sampleRate:{type:"number"}},required:["bitRate","channels","format","sampleRate"]},"Jam.ChatMessage":{type:"object",properties:{username:{type:"string"},userID:{type:"string"},time:{type:"number"},message:{type:"string"}},required:["message","time","userID","username"]},"Jam.FolderIndex":{type:"object",properties:{lastModified:{type:"number"},groups:{type:"array",items:{$ref:"#/components/schemas/Jam.FolderIndexGroup"}}},required:["groups","lastModified"]},"Jam.FolderIndexGroup":{type:"object",properties:{name:{type:"string"},entries:{type:"array",items:{$ref:"#/components/schemas/Jam.FolderIndexEntry"}}},required:["entries","name"]},"Jam.FolderIndexEntry":{type:"object",properties:{name:{type:"string"},folderID:{type:"string"},trackCount:{type:"number"}},required:["folderID","name","trackCount"]},"Jam.Folder":{type:"object",properties:{parentID:{type:"string"},type:{$ref:"#/components/schemas/Jam.FolderType"},tag:{$ref:"#/components/schemas/Jam.FolderTag"},health:{$ref:"#/components/schemas/Jam.FolderHealth"},artistInfo:{$ref:"#/components/schemas/Jam.ArtistFolderInfo"},albumInfo:{$ref:"#/components/schemas/Jam.AlbumInfo"},folders:{type:"array",items:{$ref:"#/components/schemas/Jam.Folder"}},tracks:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}},parents:{type:"array",items:{$ref:"#/components/schemas/Jam.FolderParent"}},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","id","name","type"]},"Jam.FolderType":{enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"},"Jam.FolderTag":{type:"object",properties:{album:{type:"string"},artist:{type:"string"},genre:{type:"string"},year:{type:"number"},musicbrainz:{type:"object",properties:{artistID:{type:"string"},albumID:{type:"string"}}}}},"Jam.FolderHealth":{type:"object",properties:{problems:{type:"array",items:{$ref:"#/components/schemas/Jam.FolderProblem"}}}},"Jam.FolderProblem":{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]},"Jam.ArtistFolderInfo":{type:"object",properties:{similar:{type:"array",items:{$ref:"#/components/schemas/Jam.Folder"}},description:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Jam.AlbumInfo":{type:"object",properties:{releases:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Release"}},description:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Jam.FolderParent":{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]},"Jam.FolderChildren":{type:"object",properties:{folders:{type:"array",items:{$ref:"#/components/schemas/Jam.Folder"}},tracks:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}}}},"Jam.AlbumFolderInfo":{type:"object",properties:{releases:{type:"array",items:{$ref:"#/components/schemas/MusicBrainz.Release"}},description:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"JamParameters.ListType":{enum:["avghighest","faved","frequent","highest","random","recent"],type:"string"},"Jam.States":{type:"object",additionalProperties:{$ref:"#/components/schemas/Jam.State"}},"Jam.ID3Tags":{type:"object",additionalProperties:{$ref:"#/components/schemas/Jam.ID3Tag"}},"Jam.PodcastEpisode":{type:"object",properties:{podcastID:{type:"string"},status:{$ref:"#/components/schemas/Jam.PodcastEpisodeStatusType"},date:{type:"number"},summary:{type:"string"},guid:{type:"string"},author:{type:"string"},link:{type:"string"},errorMessage:{type:"string"},duration:{type:"number"},tag:{$ref:"#/components/schemas/Jam.TrackTag"},tagID3:{$ref:"#/components/schemas/Jam.ID3Tag"},media:{$ref:"#/components/schemas/Jam.TrackMedia"},parentID:{type:"string"},artistID:{type:"string"},albumID:{type:"string"},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","date","duration","id","name","parentID","podcastID","status"]},"Jam.PodcastEpisodeStatusType":{enum:["completed","deleted","downloading","error","new"],type:"string"},"Jam.PodcastEpisodeStatus":{type:"object",properties:{status:{$ref:"#/components/schemas/Jam.PodcastEpisodeStatusType"}},required:["status"]},"Jam.Podcast":{type:"object",properties:{url:{type:"string"},status:{$ref:"#/components/schemas/Jam.PodcastStatusType"},lastCheck:{type:"number"},errorMessage:{type:"string"},description:{type:"string"},episodes:{type:"array",items:{$ref:"#/components/schemas/Jam.PodcastEpisode"}},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","id","name","status","url"]},"Jam.PodcastStatusType":{enum:["completed","downloading","error","new"],type:"string"},"Jam.PodcastStatus":{type:"object",properties:{status:{$ref:"#/components/schemas/Jam.PodcastStatusType"},lastCheck:{type:"number"}},required:["status"]},"Jam.Radio":{type:"object",properties:{url:{type:"string"},homepage:{type:"string"},created:{type:"number"},changed:{type:"number"},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"}},required:["changed","created","id","name","url"]},"Jam.Artist":{type:"object",properties:{albumCount:{type:"number"},trackCount:{type:"number"},musicbrainz:{type:"object",properties:{artistID:{type:"string"}}},albumTypes:{type:"array",items:{enum:["album","audiobook","compilation","unknown"],type:"string"}},tracks:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}},trackIDs:{type:"array",items:{type:"string"}},albumIDs:{type:"array",items:{type:"string"}},albums:{type:"array",items:{$ref:"#/components/schemas/Jam.Album"}},info:{$ref:"#/components/schemas/Jam.ArtistInfo"},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["albumCount","albumTypes","created","id","name","trackCount"]},"Jam.Album":{type:"object",properties:{artist:{type:"string"},tag:{$ref:"#/components/schemas/Jam.AlbumTag"},albumType:{$ref:"#/components/schemas/Jam.AlbumType"},trackCount:{type:"number"},artistID:{type:"string"},trackIDs:{type:"array",items:{type:"string"}},tracks:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}},info:{$ref:"#/components/schemas/Jam.AlbumInfo"},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["albumType","artistID","created","id","name","trackCount"]},"Jam.AlbumTag":{type:"object",properties:{duration:{type:"number"},created:{type:"number"},genre:{type:"string"},year:{type:"number"},musicbrainz:{type:"object",properties:{artistID:{type:"string"},albumID:{type:"string"}}}},required:["created","duration"]},"Jam.AlbumType":{enum:["album","audiobook","compilation","unknown"],type:"string"},"Jam.ArtistInfo":{type:"object",properties:{similar:{type:"array",items:{$ref:"#/components/schemas/Jam.Artist"}},description:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Jam.ArtistIndex":{type:"object",properties:{lastModified:{type:"number"},groups:{type:"array",items:{$ref:"#/components/schemas/Jam.ArtistIndexGroup"}}},required:["groups","lastModified"]},"Jam.ArtistIndexGroup":{type:"object",properties:{name:{type:"string"},entries:{type:"array",items:{$ref:"#/components/schemas/Jam.ArtistIndexEntry"}}},required:["entries","name"]},"Jam.ArtistIndexEntry":{type:"object",properties:{name:{type:"string"},artistID:{type:"string"},trackCount:{type:"number"}},required:["artistID","name","trackCount"]},"Jam.Playlist":{type:"object",properties:{userID:{type:"string"},isPublic:{type:"boolean"},comment:{type:"string"},duration:{type:"number"},trackCount:{type:"number"},changed:{type:"number"},tracks:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}},trackIDs:{type:"array",items:{type:"string"}},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["changed","created","duration","id","isPublic","name","trackCount","userID"]},"Jam.PlayQueue":{type:"object",properties:{trackIDs:{type:"array",items:{type:"string"}},tracks:{type:"array",items:{$ref:"#/components/schemas/Jam.Track"}},currentID:{type:"string"},position:{type:"number"},changed:{type:"number"},changedBy:{type:"string"}},required:["changed","changedBy"]},"Jam.Root":{type:"object",properties:{path:{type:"string"},status:{$ref:"#/components/schemas/Jam.RootStatus"},id:{type:"string"},state:{$ref:"#/components/schemas/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","id","name","path","status"]},"Jam.RootStatus":{type:"object",properties:{lastScan:{type:"number"},error:{type:"string"},scanning:{type:"boolean"}},required:["lastScan"]},"Jam.Bookmark":{type:"object",properties:{id:{type:"string"},track:{$ref:"#/components/schemas/Jam.Track"},trackID:{type:"string"},position:{type:"number"},comment:{type:"string"},created:{type:"number"},changed:{type:"number"}},required:["changed","created","id","position","trackID"]},"JamParameters.Login":{type:"object",properties:{username:{description:"user name",type:"string"},password:{description:"password",type:"string"},client:{description:"client name",type:"string"}},required:["client","password","username"]},"JamParameters.ID":{type:"object",properties:{id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.ChatDelete":{type:"object",properties:{time:{description:"time of the post (unix time)",minimum:0,type:"integer"}},required:["time"]},"JamParameters.ChatNew":{type:"object",properties:{message:{description:"the chat message",type:"string"}},required:["message"]},"JamParameters.Fav":{description:"Change the fav user state",type:"object",properties:{remove:{description:"add or remove the item fav",default:!1,type:"boolean"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.Rate":{description:"Change the rating user state",type:"object",properties:{rating:{description:"the rating for the item",minimum:0,maximum:5,type:"integer"},id:{description:"the item id",type:"string"}},required:["id","rating"]},"JamParameters.TagID3Update":{type:"object",properties:{id:{description:"the id of the track",type:"string"},tag:{$ref:"#/components/schemas/Jam.ID3Tag",description:"the id3 tag to store in the track"}},required:["id","tag"]},"JamParameters.TagID3sUpdate":{type:"object",properties:{tagID3s:{description:"array of id3 tag updates",type:"array",items:{$ref:"#/components/schemas/JamParameters.TagID3Update"}}},required:["tagID3s"]},"JamParameters.RadioUpdate":{type:"object",properties:{name:{description:"radio name",type:"string"},url:{description:"radio stream url",type:"string"},homepage:{description:"radio homepage url",type:"string"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.FolderEditImg":{description:"Set the image of a folder by url",type:"object",properties:{url:{description:"url of an image",type:"string"},id:{description:"the item id",type:"string"}},required:["id","url"]},"JamParameters.FolderEditName":{description:"Rename the folder",type:"object",properties:{name:{description:"the new folder name",type:"string"},id:{description:"the item id",type:"string"}},required:["id","name"]},"JamParameters.BookmarkCreate":{type:"object",properties:{trackID:{description:"a track id",type:"string"},comment:{description:"a comment",type:"string"},position:{description:"the position of the bookmark (in ms)",minimum:0,type:"integer"}},required:["position"]},"JamParameters.RadioNew":{type:"object",properties:{name:{description:"radio name",type:"string"},url:{description:"radio stream url",type:"string"},homepage:{description:"radio homepage url",type:"string"}},required:["name","url"]},"JamParameters.PodcastNew":{type:"object",properties:{url:{description:"podcast feed url",type:"string"}},required:["url"]},"JamParameters.PlaylistNew":{type:"object",properties:{name:{description:"name of playlist",type:"string"},comment:{description:"a comment",type:"string"},isPublic:{description:"set the playlist visible for other users or not",type:"boolean"},trackIDs:{description:"track ids of the playlist, may include duplicates",type:"array",items:{type:"string"}}},required:["name"]},"JamParameters.PlaylistUpdate":{type:"object",properties:{name:{description:"name of playlist",type:"string"},comment:{description:"a comment",type:"string"},isPublic:{description:"set the playlist visible for other users or not",type:"boolean"},trackIDs:{description:"track ids of the playlist, may include duplicates",type:"array",items:{type:"string"}},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.PlayQueueSet":{type:"object",properties:{trackIDs:{description:"the track ids of the playqueue",type:"array",items:{type:"string"}},currentID:{description:"the track id of the current playing track",type:"string"},position:{description:"the position in the current playing track",minimum:0,type:"integer"}},required:["trackIDs"]},"JamParameters.UserNew":{type:"object",properties:{name:{description:"name of the user",type:"string"},email:{description:"email of the user",type:"string"},roleAdmin:{description:"user has admin rights",default:!1,type:"boolean"},rolePodcast:{description:"user has podcast admin rights",default:!1,type:"boolean"},roleStream:{description:"user has streaming/download rights",default:!0,type:"boolean"},roleUpload:{description:"user has upload rights",default:!1,type:"boolean"}},required:["name"]},"JamParameters.UserUpdate":{type:"object",properties:{name:{description:"name of the user",type:"string"},email:{description:"email of the user",type:"string"},roleAdmin:{description:"user has admin rights",type:"boolean"},rolePodcast:{description:"user has podcast admin rights",type:"boolean"},roleStream:{description:"user has streaming/download rights",type:"boolean"},roleUpload:{description:"user has upload rights",type:"boolean"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.UserPasswordUpdate":{type:"object",properties:{password:{description:"new password of user",type:"string"},id:{description:"the item id",type:"string"}},required:["id","password"]},"JamParameters.UserEmailUpdate":{type:"object",properties:{email:{description:"new email of user",type:"string"},id:{description:"the item id",type:"string"}},required:["email","id"]},"JamParameters.RootNew":{type:"object",properties:{name:{description:"name of the root",type:"string"},path:{description:"absolute path of the root",type:"string"}},required:["name","path"]},"JamParameters.RootUpdate":{type:"object",properties:{name:{description:"name of the root",type:"string"},path:{description:"absolute path of the root",type:"string"},id:{description:"the item id",type:"string"}},required:["id","name","path"]}}},security:[{cookieAuth:[]},{bearerAuth:[]}]}},function(e){e.exports={type:"object",properties:{GET:{type:"object",properties:{ping:{description:"various: is the api online?",type:"object",properties:{result:{$ref:"#/definitions/Jam.Ping"},public:{type:"boolean",enum:[!0]}},required:["public","result"]},session:{description:"auth: check the login state",type:"object",properties:{result:{$ref:"#/definitions/Jam.Session"},public:{type:"boolean",enum:[!0]}},required:["public","result"]},"lastfm/lookup":{description:"metadata: lookup lastfm data",type:"object",properties:{operationId:{type:"string",enum:["metadata.lastfmLookup"]},params:{$ref:"#/definitions/JamParameters.LastFMLookup"},result:{$ref:"#/definitions/LastFM.Result"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","operationId","params","result"]},"acoustid/lookup":{description:"metadata: lookup acoustid data",type:"object",properties:{operationId:{type:"string",enum:["metadata.acoustidLookup"]},params:{$ref:"#/definitions/JamParameters.AcoustidLookup"},result:{type:"array",items:{$ref:"#/definitions/Acoustid.Result"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","operationId","params","result"]},"brainz/lookup":{description:"metadata: lookup musicbrainz data",type:"object",properties:{operationId:{type:"string",enum:["metadata.brainzLookup"]},params:{$ref:"#/definitions/JamParameters.BrainzLookup"},result:{$ref:"#/definitions/MusicBrainz.Response"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","operationId","params","result"]},"brainz/search":{description:"metadata: search musicbrainz data",type:"object",properties:{operationId:{type:"string",enum:["metadata.brainzSearch"]},params:{$ref:"#/definitions/JamParameters.BrainzSearch"},result:{$ref:"#/definitions/MusicBrainz.Response"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","operationId","params","result"]},autocomplete:{description:"various: autocomplete",type:"object",properties:{operationId:{type:"string",enum:["autocomplete.autocomplete"]},params:{$ref:"#/definitions/JamParameters.AutoComplete"},result:{$ref:"#/definitions/Jam.AutoComplete"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","operationId","params","result"]},"genre/list":{description:"various: get list of genres found in the library",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Genres"},result:{type:"array",items:{$ref:"#/definitions/Jam.Genre"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"nowPlaying/list":{description:"various: get list of tracks played by all users",type:"object",properties:{result:{type:"array",items:{$ref:"#/definitions/Jam.NowPlaying"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"}]}},required:["errors","result"]},"chat/list":{description:"chat: get chat messages",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Chat"},result:{type:"array",items:{$ref:"#/definitions/Jam.ChatMessage"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"folder/index":{description:"folder: get the navigation index for folders",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Index"},result:{$ref:"#/definitions/Jam.FolderIndex"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"folder/id":{description:"folder: get a folder by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Folder"},result:{$ref:"#/definitions/Jam.Folder"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/ids":{description:"folder: get folders by ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Folders"},result:{type:"array",items:{$ref:"#/definitions/Jam.Folder"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"folder/children":{description:"folder: get tracks and subfolders of a folder by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.FolderChildren"},result:{$ref:"#/definitions/Jam.FolderChildren"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/tracks":{description:"folder: get tracks of a folder by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.FolderTracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/subfolders":{description:"folder: get sub folders of a folder by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.FolderSubFolders"},result:{type:"array",items:{$ref:"#/definitions/Jam.Folder"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/artist/similar":{description:"folder: get similar artist folders of a folder by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Folder"},result:{type:"array",items:{$ref:"#/definitions/Jam.Folder"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/artist/info":{description:"folder: get extended artist meta data of a folder by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ArtistInfo"},result:{$ref:"#/definitions/Jam.ArtistFolderInfo"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/album/info":{description:"folder: get extended album meta data of a folder by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.AlbumInfo"},result:{$ref:"#/definitions/Jam.AlbumFolderInfo"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/list":{description:"folder: get a list of folders by list type",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.FolderList"},result:{type:"array",items:{$ref:"#/definitions/Jam.Folder"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"folder/search":{description:"folder: search folders",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.FolderSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.Folder"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"folder/state":{description:"folder: get the user state (fav/rating) by folder id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.State"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/states":{description:"folder: get the user states (fav/rating) by folders ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.States"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"folder/artist/similar/tracks":{description:"folder: get similar tracks of a by artist folder id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.SimilarTracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"track/id":{description:"track: get a track by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Track"},result:{$ref:"#/definitions/Jam.Track"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"track/ids":{description:"track: get tracks by ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Tracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"track/tagID3":{description:"track: get an id3 tag by track id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.ID3Tag"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"track/tagID3s":{description:"track: get id3 tags by track ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.ID3Tags"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"track/search":{description:"track: search tracks",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.TrackSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"track/state":{description:"track: get the user state (fav/rating) by track id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.State"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"track/states":{description:"track: get the user states (fav/rating) by track ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.States"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"track/list":{description:"track: get a track list by track list type",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.TrackList"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"track/similar":{description:"track: get the similar tracks by track id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.SimilarTracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"episode/id":{description:"episode: get a podcast episode by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Episode"},result:{$ref:"#/definitions/Jam.PodcastEpisode"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"episode/ids":{description:"episode: get podcast episodes by ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Episodes"},result:{type:"array",items:{$ref:"#/definitions/Jam.PodcastEpisode"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"episode/search":{description:"episode: search podcast episodes",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.EpisodeSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.PodcastEpisode"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"episode/retrieve":{description:"episode: retrieve a podcast episode media file",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["errors","params","roles"]},"episode/state":{description:"episode: get the user state (fav/rating) by podcast episode id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.State"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"episode/states":{description:"episode: get the user states (fav/rating) by podcast episode ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.States"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"episode/status":{description:"episode: get the episode state (e.g. downloading, new, etc.) by podcast episode id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.PodcastEpisodeStatus"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"episode/list":{description:"episode: get a list of episodes by list type",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PodcastEpisodeList"},result:{type:"array",items:{$ref:"#/definitions/Jam.PodcastEpisode"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"podcast/id":{description:"podcast: get a podcast by id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Podcast"},result:{$ref:"#/definitions/Jam.Podcast"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"podcast/ids":{description:"podcast: get podcasts by ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Podcasts"},result:{type:"array",items:{$ref:"#/definitions/Jam.Podcast"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"podcast/status":{description:"podcast: get the podcast state (e.g. downloading, new, etc.) by podcast id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.PodcastStatus"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"podcast/search":{description:"podcast: search podcasts",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PodcastSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.Podcast"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"podcast/refreshAll":{description:"podcast: check all podcast feeds for new episodes",type:"object",properties:{roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["roles"]},"podcast/refresh":{description:"podcast: check podcast feeds for new episodes by podcast id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["errors","params","roles"]},"podcast/state":{description:"podcast: get the user state (fav/rating) by podcast id",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.State"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"podcast/states":{description:"podcast: get the user states (fav/rating) by podcast ids",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.States"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"podcast/list":{description:"podcast: get a list of podcasts by list type",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PodcastList"},result:{type:"array",items:{$ref:"#/definitions/Jam.Podcast"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"radio/id":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Radio"},result:{$ref:"#/definitions/Jam.Radio"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"radio/ids":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Radios"},result:{type:"array",items:{$ref:"#/definitions/Jam.Radio"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"radio/search":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Radios"},result:{type:"array",items:{$ref:"#/definitions/Jam.Radio"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"radio/state":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.State"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"radio/states":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.States"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"artist/id":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Artist"},result:{$ref:"#/definitions/Jam.Artist"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"artist/ids":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Artists"},result:{type:"array",items:{$ref:"#/definitions/Jam.Artist"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"artist/search":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ArtistSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.Artist"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"artist/state":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.State"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"artist/states":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.States"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"artist/list":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ArtistList"},result:{type:"array",items:{$ref:"#/definitions/Jam.Artist"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"artist/similar/tracks":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.SimilarTracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"artist/similar":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Artist"},result:{type:"array",items:{$ref:"#/definitions/Jam.Artist"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"artist/index":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Index"},result:{$ref:"#/definitions/Jam.ArtistIndex"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"artist/tracks":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Tracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"album/id":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Album"},result:{$ref:"#/definitions/Jam.Album"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"album/ids":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Albums"},result:{type:"array",items:{$ref:"#/definitions/Jam.Album"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"album/list":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.AlbumList"},result:{type:"array",items:{$ref:"#/definitions/Jam.Album"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"album/search":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.AlbumSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.Album"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"album/state":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.State"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"album/states":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.States"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"album/similar/tracks":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.SimilarTracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"album/tracks":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Tracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"playlist/id":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Playlist"},result:{$ref:"#/definitions/Jam.Playlist"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"playlist/ids":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Playlists"},result:{type:"array",items:{$ref:"#/definitions/Jam.Playlist"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"playlist/search":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PlaylistSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.Playlist"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"playlist/state":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.State"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"playlist/states":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{$ref:"#/definitions/Jam.States"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"playlist/tracks":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Tracks"},result:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"user/search":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.UserSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.User"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","result","roles"]},"user/id":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.User"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","result","roles"]},"user/ids":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{type:"array",items:{$ref:"#/definitions/Jam.User"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","result","roles"]},"playqueue/get":{description:"playqueue: get a playqueue for calling user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PlayQueue"},result:{$ref:"#/definitions/Jam.PlayQueue"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"root/search":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.RootSearch"},result:{type:"array",items:{$ref:"#/definitions/Jam.Root"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"root/id":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.Root"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"root/ids":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.IDs"},result:{type:"array",items:{$ref:"#/definitions/Jam.Root"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"root/scan":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"root/scanAll":{type:"object",properties:{errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","roles"]},"root/status":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},result:{$ref:"#/definitions/Jam.RootStatus"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"folder/download":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Download"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"folder/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"track/stream":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Stream"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}],minItems:5,additionalItems:{anyOf:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"track/download":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Download"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"track/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"episode/stream":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Stream"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}],minItems:5,additionalItems:{anyOf:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"episode/download":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Download"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"episode/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"podcast/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"podcast/download":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Download"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"artist/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"artist/download":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Download"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"album/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"album/download":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Download"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"bookmark/list":{description:"bookmark: get a bookmarks list for the calling user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.BookmarkList"},result:{type:"array",items:{$ref:"#/definitions/Jam.Bookmark"}},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params","result"]},"playlist/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"playlist/download":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Download"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","params","roles"]},"user/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"root/image":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","params"]},"image/{id}-{size}.{format}":{type:"object",properties:{operationId:{type:"string",enum:["image.image"]},pathParams:{$ref:"#/definitions/JamParameters.Image"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","errors","operationId","pathParams"]},"image/{id}-{size}":{type:"object",properties:{operationId:{type:"string",enum:["image.image"]},pathParams:{$ref:"#/definitions/JamParameters.PathImageSize"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}},aliasFor:{type:"string",enum:["image/{id}-{size}.{format}"]}},required:["aliasFor","binary","errors","operationId","pathParams"]},"image/{id}.{format}":{type:"object",properties:{operationId:{type:"string",enum:["image.image"]},pathParams:{$ref:"#/definitions/JamParameters.PathImageFormat"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}},aliasFor:{type:"string",enum:["image/{id}-{size}.{format}"]}},required:["aliasFor","binary","errors","operationId","pathParams"]},"image/{id}":{type:"object",properties:{operationId:{type:"string",enum:["image.image"]},pathParams:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}},aliasFor:{type:"string",enum:["image/{id}-{size}.{format}"]}},required:["aliasFor","binary","errors","operationId","pathParams"]},"stream/{id}.{format}":{description:"media: stream a media file in a format",type:"object",properties:{operationId:{type:"string",enum:["stream.stream"]},pathParams:{$ref:"#/definitions/JamParameters.PathStream"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}],minItems:5,additionalItems:{anyOf:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","operationId","pathParams","roles"]},"stream/{id}":{description:"media: stream a media file",type:"object",properties:{operationId:{type:"string",enum:["stream.stream"]},pathParams:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["audio/mpeg"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["audio/mpeg"]}]}},aliasFor:{type:"string",enum:["stream/{id}.{format}"]},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["aliasFor","binary","errors","operationId","pathParams","roles"]},"waveform/{id}.{format}":{description:"media: get peaks waveform data as svg | json | binary",type:"object",properties:{operationId:{type:"string",enum:["waveform.waveform"]},pathParams:{$ref:"#/definitions/JamParameters.Waveform"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["image/svg+xml"]},{type:"string",enum:["application/json"]},{type:"string",enum:["application/binary"]}],minItems:3,additionalItems:{anyOf:[{type:"string",enum:["image/svg+xml"]},{type:"string",enum:["application/json"]},{type:"string",enum:["application/binary"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","operationId","pathParams","roles"]},"download/{id}":{type:"object",properties:{operationId:{type:"string",enum:["download.download"]},pathParams:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]}]}},aliasFor:{type:"string",enum:["download/{id}.{format}"]},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["aliasFor","binary","errors","operationId","pathParams","roles"]},"download/{id}.{format}":{type:"object",properties:{operationId:{type:"string",enum:["download.download"]},pathParams:{$ref:"#/definitions/JamParameters.Download"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},binary:{type:"array",items:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["application/zip"]},{type:"string",enum:["application/tar"]}]}},roles:{type:"array",items:[{type:"string",enum:["stream"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["stream"]}]}}},required:["binary","errors","operationId","pathParams","roles"]}}},POST:{type:"object",properties:{login:{description:"auth: login an user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Login"},result:{$ref:"#/definitions/Jam.Session",description:"returns a Jam.Session on success"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]},public:{type:"boolean",enum:[!0]}},required:["errors","params","public","result"]},logout:{description:"auth: logout an user",type:"object",properties:{errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"}]}},required:["errors"]},"bookmark/delete":{description:"bookmark: delete a bookmark",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"podcast/delete":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["errors","params","roles"]},"chat/delete":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ChatDelete"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"playlist/delete":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"user/delete":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"root/delete":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"radio/delete":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"chat/create":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ChatNew"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params"]},"track/fav/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Fav"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"track/rate/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Rate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"track/tagID3/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.TagID3Update"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"track/tagID3s/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.TagID3sUpdate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"radio/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.RadioUpdate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"folder/imageUpload/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}},upload:{type:"string",enum:["image"]}},required:["errors","params","roles","upload"]},"folder/imageUrl/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.FolderEditImg"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"folder/name/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.FolderEditName"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"folder/fav/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Fav"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"folder/rate/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Rate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"album/fav/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Fav"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"album/rate/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Rate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"artist/fav/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Fav"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"artist/rate/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Rate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"episode/fav/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Fav"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"episode/rate/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Rate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"bookmark/create":{description:"bookmark: create a bookmark",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.BookmarkCreate"},result:{$ref:"#/definitions/Jam.Bookmark"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"radio/create":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.RadioNew"},result:{$ref:"#/definitions/Jam.Radio"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","result","roles"]},"podcast/create":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PodcastNew"},result:{$ref:"#/definitions/Jam.Podcast"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]},roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["errors","params","result","roles"]},"podcast/fav/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Fav"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"podcast/rate/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Rate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"playlist/create":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PlaylistNew"},result:{$ref:"#/definitions/Jam.Playlist"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]}},required:["errors","params","result"]},"playlist/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PlaylistUpdate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"playlist/fav/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Fav"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"playlist/rate/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.Rate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"playqueue/update":{description:"playqueue: create/update the playqueue for calling user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.PlayQueueSet"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"playqueue/delete":{description:"playqueue: delete the playqueue for calling user",type:"object",properties:{errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors"]},"user/create":{description:"user: create a new user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.UserNew"},result:{$ref:"#/definitions/Jam.User"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","result","roles"]},"user/update":{description:"user: update user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.UserUpdate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]},"user/password/update":{description:"user: set a password for the user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.UserPasswordUpdate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"user/email/update":{description:"user: set an email for an user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.UserEmailUpdate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]}},required:["errors","params"]},"user/imageUpload/update":{description:"user: set an avatar image for an user",type:"object",properties:{params:{$ref:"#/definitions/JamParameters.ID"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},upload:{type:"string",enum:["image"]}},required:["errors","params","upload"]},"root/create":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.RootNew"},result:{$ref:"#/definitions/Jam.Root"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","result","roles"]},"root/update":{type:"object",properties:{params:{$ref:"#/definitions/JamParameters.RootUpdate"},errors:{anyOf:[{$ref:"#/definitions/JamApiErrorUnauthorized"},{$ref:"#/definitions/JamApiErrorGeneric"},{$ref:"#/definitions/JamApiErrorParameters"},{$ref:"#/definitions/JamApiErrorNotFound"}]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["errors","params","roles"]}}}},required:["GET","POST"],definitions:{"Jam.Ping":{type:"object",properties:{version:{type:"string"}},required:["version"]},"Jam.Session":{type:"object",properties:{version:{type:"string"},user:{$ref:"#/definitions/Jam.User"},jwt:{type:"string"},allowedCookieDomains:{type:"array",items:{type:"string"}}},required:["allowedCookieDomains","version"]},"Jam.User":{type:"object",properties:{email:{type:"string"},roles:{$ref:"#/definitions/Jam.Roles"},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","email","id","name","roles"]},"Jam.Roles":{type:"object",properties:{stream:{type:"boolean"},upload:{type:"boolean"},podcast:{type:"boolean"},admin:{type:"boolean"}}},"Jam.State":{type:"object",properties:{played:{type:"number"},lastplayed:{type:"number"},faved:{type:"number"},rated:{type:"number"}}},"JamParameters.LastFMLookup":{type:"object",properties:{type:{description:"lookup by lastfm type",type:"string"},id:{description:"the item id",type:"string"}},required:["id","type"]},"LastFM.Result":{type:"object",properties:{similartracks:{$ref:"#/definitions/LastFM.SimilarTracks"},toptracks:{$ref:"#/definitions/LastFM.TopTracks"},artist:{$ref:"#/definitions/LastFM.Artist"},album:{$ref:"#/definitions/LastFM.Album"},track:{$ref:"#/definitions/LastFM.Track"}}},"LastFM.SimilarTracks":{type:"object",properties:{track:{type:"array",items:{$ref:"#/definitions/LastFM.Track"}},artist:{type:"string"}},required:["artist","track"]},"LastFM.Track":{type:"object",properties:{name:{type:"string"},url:{type:"string"},duration:{type:"string"},playcount:{type:"string"},mbid:{type:"string"},match:{type:"string"},rank:{type:"string"},streamable:{$ref:"#/definitions/LastFM.Streamable"},artist:{$ref:"#/definitions/LastFM.ArtistInfo"},image:{type:"array",items:{$ref:"#/definitions/LastFM.Image"}}},required:["artist","duration","image","match","mbid","name","playcount","rank","streamable","url"]},"LastFM.Streamable":{type:"object",properties:{url:{type:"string"},fulltrack:{type:"string"}},required:["fulltrack","url"]},"LastFM.ArtistInfo":{type:"object",properties:{name:{type:"string"},mbid:{type:"string"},url:{type:"string"}},required:["mbid","name","url"]},"LastFM.Image":{type:"object",properties:{url:{type:"string"},size:{type:"string"}},required:["size","url"]},"LastFM.TopTracks":{type:"object",properties:{track:{type:"array",items:{$ref:"#/definitions/LastFM.TopTrack"}},artist:{type:"string"}},required:["artist","track"]},"LastFM.TopTrack":{type:"object",properties:{name:{type:"string"},mbid:{type:"string"},url:{type:"string"},streamable:{type:"string"},playcount:{type:"number"},listeners:{type:"number"},image:{type:"array",items:{$ref:"#/definitions/LastFM.Image"}},artist:{$ref:"#/definitions/LastFM.ArtistInfo"},rank:{type:"string"}},required:["artist","image","listeners","mbid","name","playcount","rank","streamable","url"]},"LastFM.Artist":{type:"object",properties:{name:{type:"string"},mbid:{type:"string"},url:{type:"string"},image:{type:"array",items:{$ref:"#/definitions/LastFM.Image"}},streamable:{type:"string"},ontour:{type:"string"},stats:{$ref:"#/definitions/LastFM.Stats"},tags:{type:"array",items:{$ref:"#/definitions/LastFM.Tag"}},bio:{$ref:"#/definitions/LastFM.Biography"},similar:{$ref:"#/definitions/LastFM.SimilarArtists"}},required:["image","mbid","name","ontour","streamable","tags","url"]},"LastFM.Stats":{type:"object",properties:{listeners:{type:"string"},playcount:{type:"string"}},required:["listeners","playcount"]},"LastFM.Tag":{type:"object",properties:{name:{type:"string"},url:{type:"string"}},required:["name","url"]},"LastFM.Biography":{type:"object",properties:{published:{type:"string"},summary:{type:"string"},content:{type:"string"},links:{type:"array",items:{$ref:"#/definitions/LastFM.Link"}}},required:["content","published","summary"]},"LastFM.Link":{type:"object",properties:{url:{type:"string"},rel:{type:"string"},href:{type:"string"}},required:["href","rel","url"]},"LastFM.SimilarArtists":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/definitions/LastFM.SimilarArtist"}}}},"LastFM.SimilarArtist":{type:"object",properties:{name:{type:"string"},url:{type:"string"},image:{type:"array",items:{$ref:"#/definitions/LastFM.Image"}}},required:["image","name","url"]},"LastFM.Album":{type:"object",properties:{name:{type:"string"},artist:{type:"string"},mbid:{type:"string"},url:{type:"string"},image:{type:"array",items:{$ref:"#/definitions/LastFM.Image"}},listeners:{type:"string"},playcount:{type:"string"},tracks:{type:"array",items:{$ref:"#/definitions/LastFM.Track"}},tags:{type:"array",items:{$ref:"#/definitions/LastFM.Tag"}},wiki:{$ref:"#/definitions/LastFM.Wiki"}},required:["artist","image","listeners","mbid","name","playcount","tracks","url"]},"LastFM.Wiki":{type:"object",properties:{published:{type:"string"},summary:{type:"string"},content:{type:"string"}},required:["content","published","summary"]},JamApiErrorUnauthorized:{type:"object",properties:{error:{type:"number",enum:[401]},text:{type:"string",enum:["unauthorized"]}},required:["error","text"]},JamApiErrorGeneric:{type:"object",properties:{error:{type:"number",enum:[500]},text:{type:"string",enum:["internal server error"]}},required:["error","text"]},JamApiErrorParameters:{type:"object",properties:{error:{type:"number",enum:[400]},text:{type:"string",enum:["parameter is missing or invalid"]}},required:["error","text"]},"JamParameters.AcoustidLookup":{type:"object",properties:{inc:{description:"comma-separated acoustid includes",type:"string"},id:{description:"the item id",type:"string"}},required:["id"]},"Acoustid.Result":{type:"object",properties:{recordings:{type:"array",items:{$ref:"#/definitions/Acoustid.Recording"}},score:{type:"number"},id:{type:"string"}},required:["id","recordings","score"]},"Acoustid.Recording":{type:"object",properties:{id:{type:"string"},sources:{type:"number"},artists:{type:"array",items:{$ref:"#/definitions/Acoustid.Artist"}},duration:{type:"number"},releasegroups:{type:"array",items:{$ref:"#/definitions/Acoustid.Releasegroup"}},title:{type:"string"}},required:["artists","duration","id","releasegroups","sources","title"]},"Acoustid.Artist":{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]},"Acoustid.Releasegroup":{type:"object",properties:{id:{type:"string"},releases:{type:"array",items:{$ref:"#/definitions/Acoustid.Release"}},title:{type:"string"},secondarytypes:{type:"array",items:{type:"string"}},type:{type:"string"},artists:{type:"array",items:{$ref:"#/definitions/Acoustid.Artist"}}},required:["artists","id","releases","secondarytypes","title","type"]},"Acoustid.Release":{type:"object",properties:{mediums:{type:"array",items:{$ref:"#/definitions/Acoustid.Medium"}},id:{type:"string"},track_count:{type:"number"},medium_count:{type:"number"},releaseevents:{type:"array",items:{$ref:"#/definitions/Acoustid.Releaseevent"}},country:{type:"string"},date:{$ref:"#/definitions/Acoustid.AcousticDate"},title:{type:"string"}},required:["country","date","id","medium_count","mediums","releaseevents","title","track_count"]},"Acoustid.Medium":{type:"object",properties:{position:{type:"number"},tracks:{type:"array",items:{$ref:"#/definitions/Acoustid.Track"}},track_count:{type:"number"},format:{type:"string"},title:{type:"string"}},required:["format","position","title","track_count","tracks"]},"Acoustid.Track":{type:"object",properties:{position:{type:"number"},artists:{type:"array",items:{$ref:"#/definitions/Acoustid.Artist"}},id:{type:"string"},title:{type:"string"}},required:["artists","id","position","title"]},"Acoustid.Releaseevent":{type:"object",properties:{date:{$ref:"#/definitions/Acoustid.AcousticDate"},country:{type:"string"}},required:["country","date"]},"Acoustid.AcousticDate":{type:"object",properties:{month:{type:"number"},year:{type:"number"},day:{type:"number"}},required:["month","year"]},"JamParameters.BrainzLookup":{type:"object",properties:{type:{description:"lookup by musicbrainz type",type:"string"},inc:{description:"comma-separated musicbrainz includes",type:"string"},id:{description:"the item id",type:"string"}},required:["id","type"]},"MusicBrainz.Response":{type:"object",properties:{release:{$ref:"#/definitions/MusicBrainz.Release"},releases:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Release"}},releaseGroup:{$ref:"#/definitions/MusicBrainz.ReleaseGroup"},releaseGroups:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ReleaseGroup"}},recording:{$ref:"#/definitions/MusicBrainz.Recording"},recordings:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Recording"}},count:{type:"number"},offset:{type:"number"},created:{type:"string"}}},"MusicBrainz.Release":{type:"object",properties:{media:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ReleaseMedia"}},score:{type:"number"},count:{type:"number"},id:{type:"string"},title:{type:"string"},sortName:{type:"string"},status:{type:"string"},statusId:{type:"string"},date:{type:"string"},country:{type:"string"},packaging:{type:"string"},packagingId:{type:"string"},disambiguation:{type:"string"},annotation:{type:"string"},quality:{type:"string"},barcode:{type:"string"},asin:{type:"string"},textRepresentation:{type:"object",properties:{language:{type:"string"},script:{type:"string"}},required:["language","script"]},trackCount:{type:"number"},artistCredit:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ArtistCredit"}},releaseGroup:{$ref:"#/definitions/MusicBrainz.ReleaseGroupBase"},labelInfo:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Label"}},tags:{type:"array",items:{type:"object",properties:{count:{type:"number"},name:{type:"string"}},required:["count","name"]}},releaseEvents:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ReleaseEvent"}},coverArtArchive:{type:"object",properties:{front:{type:"boolean"},back:{type:"boolean"},darkened:{type:"boolean"},artwork:{type:"boolean"},count:{type:"number"}},required:["artwork","back","count","darkened","front"]}},required:["artistCredit","id","labelInfo","media","releaseEvents","releaseGroup","sortName","status","tags","textRepresentation","title","trackCount"]},"MusicBrainz.ReleaseMedia":{type:"object",properties:{format:{type:"string"},formatId:{type:"string"},title:{type:"string"},discCount:{type:"number"},trackCount:{type:"number"},position:{type:"number"},trackOffset:{type:"number"},tracks:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ReleaseTrack"}},discs:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Disc"}}},required:["discCount","format","position","trackCount","trackOffset"]},"MusicBrainz.ReleaseTrack":{type:"object",properties:{id:{type:"string"},title:{type:"string"},position:{type:"number"},length:{type:"number"},number:{type:"string"},recording:{$ref:"#/definitions/MusicBrainz.RecordingBase"},artistCredit:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ArtistCredit"}}},required:["id","length","number","position","title"]},"MusicBrainz.RecordingBase":{type:"object",properties:{id:{type:"string"},title:{type:"string"},disambiguation:{type:"string"},length:{type:"number"},video:{type:"boolean"},rating:{$ref:"#/definitions/MusicBrainz.Rating"},aliases:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Alias"}},artistCredit:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ArtistCredit"}},isrcs:{type:"array",items:{type:"string"}}},required:["disambiguation","id","length","title","video"]},"MusicBrainz.Rating":{type:"object",properties:{votesCount:{type:"number"},value:{type:"number"}},required:["value","votesCount"]},"MusicBrainz.Alias":{type:"object",properties:{name:{type:"string"},sortName:{type:"string"},locale:{type:"string"},type:{type:"string"},typeId:{type:"string"},primary:{type:"string"},beginDate:{type:"string"},endDate:{type:"string"},ended:{type:"boolean"}},required:["ended","name"]},"MusicBrainz.ArtistCredit":{type:"object",properties:{name:{type:"string"},joinphrase:{type:"string"},artist:{type:"object",properties:{id:{type:"string"},name:{type:"string"},sortName:{type:"string"},disambiguation:{type:"string"},aliases:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Alias"}}},required:["aliases","disambiguation","id","name","sortName"]}},required:["artist","joinphrase","name"]},"MusicBrainz.Disc":{type:"object",properties:{id:{type:"string"},sectors:{type:"number"},offsetCount:{type:"number"},offsets:{type:"array",items:{type:"number"}}},required:["id","offsetCount","offsets","sectors"]},"MusicBrainz.ReleaseGroupBase":{type:"object",properties:{id:{type:"string"},title:{type:"string"},disambiguation:{type:"string"},firstReleaseDate:{type:"string"},primaryType:{type:"string"},primaryTypeId:{type:"string"},secondaryTypes:{type:"array",items:{type:"string"}},secondaryTypeIds:{type:"array",items:{type:"string"}},rating:{$ref:"#/definitions/MusicBrainz.Rating"},artistCredit:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ArtistCredit"}}},required:["id","primaryType","title"]},"MusicBrainz.Label":{type:"object",properties:{catalogNumber:{type:"string"},label:{type:"object",properties:{id:{type:"string"},name:{type:"string"},disambiguation:{type:"string"},labelCode:{type:"string"},sortName:{type:"string"}},required:["id","name"]},aliases:{type:"array",items:{type:"object",properties:{name:{type:"string"},sortName:{type:"string"},ended:{type:"boolean"}},required:["ended","name","sortName"]}}},required:["aliases","catalogNumber","label"]},"MusicBrainz.ReleaseEvent":{type:"object",properties:{date:{type:"string"},area:{type:"object",properties:{id:{type:"string"},name:{type:"string"},sortName:{type:"string"},disambiguation:{type:"string"},iso31661Codes:{type:"array",items:{type:"string"}}},required:["id","iso31661Codes","name","sortName"]}},required:["area","date"]},"MusicBrainz.ReleaseGroup":{type:"object",properties:{releases:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Release"}},score:{type:"number"},count:{type:"number"},id:{type:"string"},title:{type:"string"},disambiguation:{type:"string"},firstReleaseDate:{type:"string"},primaryType:{type:"string"},primaryTypeId:{type:"string"},secondaryTypes:{type:"array",items:{type:"string"}},secondaryTypeIds:{type:"array",items:{type:"string"}},rating:{$ref:"#/definitions/MusicBrainz.Rating"},artistCredit:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ArtistCredit"}}},required:["id","primaryType","title"]},"MusicBrainz.Recording":{type:"object",properties:{releases:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Release"}},score:{type:"number"},count:{type:"number"},id:{type:"string"},title:{type:"string"},disambiguation:{type:"string"},length:{type:"number"},video:{type:"boolean"},rating:{$ref:"#/definitions/MusicBrainz.Rating"},aliases:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Alias"}},artistCredit:{type:"array",items:{$ref:"#/definitions/MusicBrainz.ArtistCredit"}},isrcs:{type:"array",items:{type:"string"}}},required:["disambiguation","id","length","title","video"]},"JamParameters.BrainzSearch":{type:"object",properties:{type:{description:"search by musicbrainz type",type:"string"},recording:{description:"search by recording name",type:"string"},releasegroup:{description:"search by releasegroup name",type:"string"},release:{description:"search by release name",type:"string"},artist:{description:"search by artist name",type:"string"},tracks:{description:"search by number of release tracks",type:"integer"}},required:["type"]},"JamParameters.AutoComplete":{type:"object",properties:{query:{description:"query to complete",type:"string"},track:{description:"amount of track names to complete",default:0,minimum:0,type:"integer"},artist:{description:"amount of artist names to complete",default:0,minimum:0,type:"integer"},album:{description:"amount of album names to complete",default:0,minimum:0,type:"integer"},folder:{description:"amount of folder names to complete",default:0,minimum:0,type:"integer"},playlist:{description:"amount of playlist names to complete",default:0,minimum:0,type:"integer"},podcast:{description:"amount of podcast names to complete",default:0,minimum:0,type:"integer"},episode:{description:"amount of episode names to complete",default:0,minimum:0,type:"integer"}},required:["query"]},"Jam.AutoComplete":{type:"object",properties:{tracks:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},artists:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},albums:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},folders:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},playlists:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},podcasts:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}},episodes:{type:"array",items:{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]}}}},JamApiErrorNotFound:{type:"object",properties:{error:{type:"number",enum:[404]},text:{type:"string",enum:["requested object not found"]}},required:["error","text"]},"JamParameters.Genres":{type:"object",properties:{rootID:{description:"filter by root id",type:"string"}}},"Jam.Genre":{type:"object",properties:{name:{type:"string"},trackCount:{type:"number"},albumCount:{type:"number"},artistCount:{type:"number"}},required:["albumCount","artistCount","name","trackCount"]},"Jam.NowPlaying":{type:"object",properties:{username:{type:"string"},minutesAgo:{type:"number"},track:{$ref:"#/definitions/Jam.Track"}},required:["minutesAgo","username"]},"Jam.Track":{type:"object",properties:{duration:{type:"number"},tag:{$ref:"#/definitions/Jam.TrackTag"},tagID3:{$ref:"#/definitions/Jam.ID3Tag"},media:{$ref:"#/definitions/Jam.TrackMedia"},parentID:{type:"string"},artistID:{type:"string"},albumID:{type:"string"},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","duration","id","name","parentID"]},"Jam.TrackTag":{type:"object",properties:{title:{type:"string"},album:{type:"string"},artist:{type:"string"},genre:{type:"string"},year:{type:"number"},trackNr:{type:"number"},musicbrainz:{$ref:"#/definitions/Jam.TrackMBTag"}}},"Jam.TrackMBTag":{type:"object",properties:{trackID:{type:"string"},recordingID:{type:"string"},releaseTrackID:{type:"string"},artistID:{type:"string"},albumID:{type:"string"}}},"Jam.ID3Tag":{type:"object",properties:{version:{type:"number"},frames:{$ref:"#/definitions/ID3v2FrameValues.Frames"}},required:["frames","version"]},"ID3v2FrameValues.Frames":{type:"object",additionalProperties:{type:"array",items:{}},properties:{AENC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.AudioEncryption"}},APIC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Pic"}},ASPI:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},BUF:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},CDM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},CHAP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Chapter"}},CM1:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},CNT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Number"}},COM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.LangDescText"}},COMM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.LangDescText"}},COMR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},CRA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.AudioEncryption"}},CRM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},CTOC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.ChapterToc"}},ENCR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},EQU:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},EQUA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},ETC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.EventTimingCodes"}},ETCO:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.EventTimingCodes"}},GEO:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.GEOB"}},GEOB:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.GEOB"}},GRID:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},IPL:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.TextList"}},IPLS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.TextList"}},LINK:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Link"}},LNK:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Link"}},MCDI:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},MLL:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},MLLT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},NCO:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},NCON:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},OWNE:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},PCNT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Number"}},PCS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Number"}},PCST:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Number"}},PIC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Pic"}},POP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Popularimeter"}},POPM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Popularimeter"}},POSS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},PRI:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.IdBin"}},PRIV:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.IdBin"}},RBUF:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},REV:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},RGAD:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.ReplayGainAdjustment"}},RVA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.RVA"}},RVA2:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.RVA2"}},RVAD:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.RVA"}},RVRB:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},SEEK:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},SIGN:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},SLT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.SynchronisedLyricsEvent"}},STC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},SYLT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.SynchronisedLyrics"}},SYTC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},TAL:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TALB:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TBP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TBPM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TCM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TCMP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bool"}},TCO:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.TextList"}},TCOM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TCON:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.TextList"}},TCOP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TCP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bool"}},TCR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDAT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDES:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDLY:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDOR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDRC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDRL:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDTG:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TDY:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TEN:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TENC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TEXT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TFLT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TGID:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TID:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TIM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TIME:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TIPL:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.TextList"}},TIT1:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TIT2:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TIT3:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TKE:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TKEY:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TKWD:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},TLA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TLAN:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TLE:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TLEN:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TMCL:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.TextList"}},TMED:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TMOO:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TMT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOAL:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOF:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOFN:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOL:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOLY:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOPE:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TORY:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TOWN:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TP1:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.TextList"}},TP2:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TP3:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TP4:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TPA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TPB:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TPE1:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.TextList"}},TPE2:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TPE3:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TPE4:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TPOS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TPRO:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TPUB:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TRC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TRCK:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TRD:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TRDA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TRK:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TRSN:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TRSO:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TS2:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSI:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSIZ:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSO2:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSOA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSOC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSOP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSOT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSRC:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TSSE:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TST:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TT1:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TT2:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TT3:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TXT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TXX:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.IdText"}},TXXX:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.IdText"}},TYE:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},TYER:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},UFI:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.IdAscii"}},UFID:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.IdAscii"}},ULT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.LangDescText"}},USER:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},USLT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.LangDescText"}},WAF:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WAR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WAS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WCM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WCOM:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WCOP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WCP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WFD:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},WFED:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},WOAF:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WOAR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WOAS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WORS:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WPAY:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WPB:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WPUB:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Ascii"}},WXX:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.IdText"}},WXXX:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.IdText"}},XDOR:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},XHD3:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Bin"}},XSOA:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},XSOP:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}},XSOT:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.Text"}}}},"ID3v2FrameValues.AudioEncryption":{type:"object",properties:{id:{type:"string"},previewStart:{type:"number"},previewLength:{type:"number"},bin:{type:"string"}},required:["bin","id","previewLength","previewStart"]},"ID3v2FrameValues.Pic":{type:"object",properties:{description:{type:"string"},pictureType:{type:"number"},url:{type:"string"},bin:{type:"string"},mimeType:{type:"string"}},required:["description","pictureType"]},"ID3v2FrameValues.Bin":{type:"object",properties:{bin:{type:"string"}},required:["bin"]},"ID3v2FrameValues.Chapter":{type:"object",properties:{id:{type:"string"},start:{type:"number"},end:{type:"number"},offset:{type:"number"},offsetEnd:{type:"number"}},required:["end","id","offset","offsetEnd","start"]},"ID3v2FrameValues.Text":{type:"object",properties:{text:{type:"string"}},required:["text"]},"ID3v2FrameValues.Number":{type:"object",properties:{num:{type:"number"}},required:["num"]},"ID3v2FrameValues.LangDescText":{type:"object",properties:{language:{type:"string"},id:{type:"string"},text:{type:"string"}},required:["id","language","text"]},"ID3v2FrameValues.ChapterToc":{type:"object",properties:{id:{type:"string"},ordered:{type:"boolean"},topLevel:{type:"boolean"},children:{type:"array",items:{type:"string"}}},required:["children","id","ordered","topLevel"]},"ID3v2FrameValues.EventTimingCodes":{type:"object",properties:{format:{type:"number"},events:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.EventTimingCodesEvent"}}},required:["events","format"]},"ID3v2FrameValues.EventTimingCodesEvent":{type:"object",properties:{type:{type:"number"},timestamp:{type:"number"}},required:["timestamp","type"]},"ID3v2FrameValues.GEOB":{type:"object",properties:{filename:{type:"string"},mimeType:{type:"string"},contentDescription:{type:"string"},bin:{type:"string"}},required:["bin","contentDescription","filename","mimeType"]},"ID3v2FrameValues.TextList":{type:"object",properties:{list:{type:"array",items:{type:"string"}}},required:["list"]},"ID3v2FrameValues.Link":{type:"object",properties:{url:{type:"string"},id:{type:"string"},additional:{type:"array",items:{type:"string"}}},required:["additional","id","url"]},"ID3v2FrameValues.Popularimeter":{type:"object",properties:{rating:{type:"number"},count:{type:"number"},email:{type:"string"}},required:["count","email","rating"]},"ID3v2FrameValues.IdBin":{type:"object",properties:{id:{type:"string"},bin:{type:"string"}},required:["bin","id"]},"ID3v2FrameValues.ReplayGainAdjustment":{type:"object",properties:{peak:{type:"number"},radioAdjustment:{type:"number"},audiophileAdjustment:{type:"number"}},required:["audiophileAdjustment","peak","radioAdjustment"]},"ID3v2FrameValues.RVA":{type:"object",properties:{right:{type:"number"},left:{type:"number"},peakRight:{type:"number"},peakLeft:{type:"number"},rightBack:{type:"number"},leftBack:{type:"number"},peakRightBack:{type:"number"},peakLeftBack:{type:"number"},center:{type:"number"},peakCenter:{type:"number"},bass:{type:"number"},peakBass:{type:"number"}},required:["left","right"]},"ID3v2FrameValues.RVA2":{type:"object",properties:{id:{type:"string"},channels:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.RVA2Channel"}}},required:["channels","id"]},"ID3v2FrameValues.RVA2Channel":{type:"object",properties:{type:{type:"number"},adjustment:{type:"number"},peak:{type:"number"}},required:["adjustment","type"]},"ID3v2FrameValues.SynchronisedLyricsEvent":{type:"object",properties:{timestamp:{type:"number"},text:{type:"string"}},required:["text","timestamp"]},"ID3v2FrameValues.SynchronisedLyrics":{type:"object",properties:{id:{type:"string"},language:{type:"string"},timestampFormat:{type:"number"},contentType:{type:"number"},events:{type:"array",items:{$ref:"#/definitions/ID3v2FrameValues.SynchronisedLyricsEvent"}}},required:["contentType","events","id","language","timestampFormat"]},"ID3v2FrameValues.Bool":{type:"object",properties:{bool:{type:"boolean"}},required:["bool"]},"ID3v2FrameValues.IdText":{type:"object",properties:{id:{type:"string"},text:{type:"string"}},required:["id","text"]},"ID3v2FrameValues.IdAscii":{type:"object",properties:{id:{type:"string"},text:{type:"string"}},required:["id","text"]},"ID3v2FrameValues.Ascii":{type:"object",properties:{text:{type:"string"}},required:["text"]},"Jam.TrackMedia":{type:"object",properties:{bitRate:{type:"number"},format:{type:"string"},channels:{type:"number"},sampleRate:{type:"number"}},required:["bitRate","channels","format","sampleRate"]},"JamParameters.Chat":{type:"object",properties:{since:{description:"filter by post time (unix time)",minimum:0,type:"integer"}}},"Jam.ChatMessage":{type:"object",properties:{username:{type:"string"},userID:{type:"string"},time:{type:"number"},message:{type:"string"}},required:["message","time","userID","username"]},"JamParameters.Index":{type:"object",properties:{rootID:{description:"filter by root id",type:"string"}}},"Jam.FolderIndex":{type:"object",properties:{lastModified:{type:"number"},groups:{type:"array",items:{$ref:"#/definitions/Jam.FolderIndexGroup"}}},required:["groups","lastModified"]},"Jam.FolderIndexGroup":{type:"object",properties:{name:{type:"string"},entries:{type:"array",items:{$ref:"#/definitions/Jam.FolderIndexEntry"}}},required:["entries","name"]},"Jam.FolderIndexEntry":{type:"object",properties:{name:{type:"string"},folderID:{type:"string"},trackCount:{type:"number"}},required:["folderID","name","trackCount"]},"JamParameters.Folder":{type:"object",properties:{id:{description:"the item id",type:"string"},folderTag:{description:"include tag on folder(s)",default:!1,type:"boolean"},folderState:{description:"include user states (fav,rate) on folder(s)",default:!1,type:"boolean"},folderHealth:{description:"include information about the meta data quality on folder(s)",default:!1,type:"boolean"},folderParents:{description:"include a list of all parent folder ids on folder(s)",default:!1,type:"boolean"},folderInfo:{description:"include extended meta data on folder(s)",default:!1,type:"boolean"},folderInfoSimilar:{description:"include similar folders list  on folder(s)",default:!1,type:"boolean"},folderChildren:{description:"include tracks and sub folders on folder(s)",default:!1,type:"boolean"},folderSubfolders:{description:"include sub folders on folder(s)",default:!1,type:"boolean"},folderTracks:{description:"include tracks on folder(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["id"]},"Jam.Folder":{type:"object",properties:{parentID:{type:"string"},type:{$ref:"#/definitions/Jam.FolderType"},tag:{$ref:"#/definitions/Jam.FolderTag"},health:{$ref:"#/definitions/Jam.FolderHealth"},artistInfo:{$ref:"#/definitions/Jam.ArtistFolderInfo"},albumInfo:{$ref:"#/definitions/Jam.AlbumInfo"},folders:{type:"array",items:{$ref:"#/definitions/Jam.Folder"}},tracks:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},parents:{type:"array",items:{$ref:"#/definitions/Jam.FolderParent"}},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","id","name","type"]},"Jam.FolderType":{enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"},"Jam.FolderTag":{type:"object",properties:{album:{type:"string"},artist:{type:"string"},genre:{type:"string"},year:{type:"number"},musicbrainz:{type:"object",properties:{artistID:{type:"string"},albumID:{type:"string"}}}}},"Jam.FolderHealth":{type:"object",properties:{problems:{type:"array",items:{$ref:"#/definitions/Jam.FolderProblem"}}}},"Jam.FolderProblem":{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]},"Jam.ArtistFolderInfo":{type:"object",properties:{similar:{type:"array",items:{$ref:"#/definitions/Jam.Folder"}},description:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Jam.AlbumInfo":{type:"object",properties:{releases:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Release"}},description:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Jam.FolderParent":{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id","name"]},"JamParameters.Folders":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}},folderTag:{description:"include tag on folder(s)",default:!1,type:"boolean"},folderState:{description:"include user states (fav,rate) on folder(s)",default:!1,type:"boolean"},folderHealth:{description:"include information about the meta data quality on folder(s)",default:!1,type:"boolean"},folderParents:{description:"include a list of all parent folder ids on folder(s)",default:!1,type:"boolean"},folderInfo:{description:"include extended meta data on folder(s)",default:!1,type:"boolean"},folderInfoSimilar:{description:"include similar folders list  on folder(s)",default:!1,type:"boolean"},folderChildren:{description:"include tracks and sub folders on folder(s)",default:!1,type:"boolean"},folderSubfolders:{description:"include sub folders on folder(s)",default:!1,type:"boolean"},folderTracks:{description:"include tracks on folder(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["ids"]},"JamParameters.FolderChildren":{type:"object",properties:{id:{description:"the item id",type:"string"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"},folderTag:{description:"include tag on folder(s)",default:!1,type:"boolean"},folderState:{description:"include user states (fav,rate) on folder(s)",default:!1,type:"boolean"},folderHealth:{description:"include information about the meta data quality on folder(s)",default:!1,type:"boolean"},folderParents:{description:"include a list of all parent folder ids on folder(s)",default:!1,type:"boolean"},folderInfo:{description:"include extended meta data on folder(s)",default:!1,type:"boolean"},folderInfoSimilar:{description:"include similar folders list  on folder(s)",default:!1,type:"boolean"}},required:["id"]},"Jam.FolderChildren":{type:"object",properties:{folders:{type:"array",items:{$ref:"#/definitions/Jam.Folder"}},tracks:{type:"array",items:{$ref:"#/definitions/Jam.Track"}}}},"JamParameters.FolderTracks":{type:"object",properties:{recursive:{description:"include tracks of a sub folders",default:!1,type:"boolean"},ids:{description:"array of item ids",type:"array",items:{type:"string"}},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["ids"]},"JamParameters.FolderSubFolders":{type:"object",properties:{id:{description:"the item id",type:"string"},folderTag:{description:"include tag on folder(s)",default:!1,type:"boolean"},folderState:{description:"include user states (fav,rate) on folder(s)",default:!1,type:"boolean"},folderHealth:{description:"include information about the meta data quality on folder(s)",default:!1,type:"boolean"},folderParents:{description:"include a list of all parent folder ids on folder(s)",default:!1,type:"boolean"},folderInfo:{description:"include extended meta data on folder(s)",default:!1,type:"boolean"},folderInfoSimilar:{description:"include similar folders list  on folder(s)",default:!1,type:"boolean"}},required:["id"]},"JamParameters.ArtistInfo":{type:"object",properties:{similar:{description:"include similar artists",default:!1,type:"boolean"},id:{description:"the item id",type:"string"}},required:["id","similar"]},"JamParameters.AlbumInfo":{type:"object",properties:{id:{description:"the item id",type:"string"}},required:["id"]},"Jam.AlbumFolderInfo":{type:"object",properties:{releases:{type:"array",items:{$ref:"#/definitions/MusicBrainz.Release"}},description:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"JamParameters.FolderList":{type:"object",properties:{rootID:{description:"filter by root id",type:"string"},parentID:{description:"filter by parent folder id",type:"string"},artist:{description:"filter by artist name",type:"string"},title:{description:"filter by title",type:"string"},album:{description:"filter by album name",type:"string"},genre:{description:"filter by genre",type:"string"},newerThan:{description:"filter by creation date (unix time)",minimum:0,type:"integer"},fromYear:{description:"filter by year",minimum:0,type:"integer"},toYear:{description:"filter by year",minimum:0,type:"integer"},type:{description:"filter by folder type",enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"},types:{description:"filter by folder types",type:"array",items:{enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"}},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},folderTag:{description:"include tag on folder(s)",default:!1,type:"boolean"},folderState:{description:"include user states (fav,rate) on folder(s)",default:!1,type:"boolean"},folderHealth:{description:"include information about the meta data quality on folder(s)",default:!1,type:"boolean"},folderParents:{description:"include a list of all parent folder ids on folder(s)",default:!1,type:"boolean"},folderInfo:{description:"include extended meta data on folder(s)",default:!1,type:"boolean"},folderInfoSimilar:{description:"include similar folders list  on folder(s)",default:!1,type:"boolean"},list:{$ref:"#/definitions/JamParameters.ListType",description:"the type of the item list"},offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"}},required:["list"]},"JamParameters.ListType":{enum:["avghighest","faved","frequent","highest","random","recent"],type:"string"},"JamParameters.FolderSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},rootID:{description:"filter by root id",type:"string"},parentID:{description:"filter by parent folder id",type:"string"},artist:{description:"filter by artist name",type:"string"},title:{description:"filter by title",type:"string"},album:{description:"filter by album name",type:"string"},genre:{description:"filter by genre",type:"string"},newerThan:{description:"filter by creation date (unix time)",minimum:0,type:"integer"},fromYear:{description:"filter by year",minimum:0,type:"integer"},toYear:{description:"filter by year",minimum:0,type:"integer"},type:{description:"filter by folder type",enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"},types:{description:"filter by folder types",type:"array",items:{enum:["album","artist","extras","multialbum","multiartist","unknown"],type:"string"}},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},folderChildren:{description:"include tracks and sub folders on folder(s)",default:!1,type:"boolean"},folderSubfolders:{description:"include sub folders on folder(s)",default:!1,type:"boolean"},folderTracks:{description:"include tracks on folder(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"},folderTag:{description:"include tag on folder(s)",default:!1,type:"boolean"},folderState:{description:"include user states (fav,rate) on folder(s)",default:!1,type:"boolean"},folderHealth:{description:"include information about the meta data quality on folder(s)",default:!1,type:"boolean"},folderParents:{description:"include a list of all parent folder ids on folder(s)",default:!1,type:"boolean"},folderInfo:{description:"include extended meta data on folder(s)",default:!1,type:"boolean"},folderInfoSimilar:{description:"include similar folders list  on folder(s)",default:!1,type:"boolean"}}},"JamParameters.ID":{type:"object",properties:{id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.IDs":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}}},required:["ids"]},"Jam.States":{type:"object",additionalProperties:{$ref:"#/definitions/Jam.State"}},"JamParameters.SimilarTracks":{type:"object",properties:{id:{description:"the item id",type:"string"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"},offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"}},required:["id"]},"JamParameters.Track":{type:"object",properties:{id:{description:"the item id",type:"string"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["id"]},"JamParameters.Tracks":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["ids"]},"Jam.ID3Tags":{type:"object",additionalProperties:{$ref:"#/definitions/Jam.ID3Tag"}},"JamParameters.TrackSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},artist:{description:"filter by artist name",type:"string"},artistID:{description:"filter by artist id",type:"string"},parentID:{description:"filter by parent folder id",type:"string"},rootID:{description:"filter by root id",type:"string"},title:{description:"filter by title",type:"string"},album:{description:"filter by album",type:"string"},genre:{description:"filter by genre",type:"string"},newerThan:{description:"filter by creation date",type:"integer"},fromYear:{description:"filter by year",type:"integer"},toYear:{description:"filter by year",type:"integer"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}}},"JamParameters.TrackList":{type:"object",properties:{artist:{description:"filter by artist name",type:"string"},artistID:{description:"filter by artist id",type:"string"},parentID:{description:"filter by parent folder id",type:"string"},rootID:{description:"filter by root id",type:"string"},title:{description:"filter by title",type:"string"},album:{description:"filter by album",type:"string"},genre:{description:"filter by genre",type:"string"},newerThan:{description:"filter by creation date",type:"integer"},fromYear:{description:"filter by year",type:"integer"},toYear:{description:"filter by year",type:"integer"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"},list:{$ref:"#/definitions/JamParameters.ListType",description:"the type of the item list"},offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"}},required:["list"]},"JamParameters.Episode":{type:"object",properties:{id:{description:"the item id",type:"string"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["id"]},"Jam.PodcastEpisode":{type:"object",properties:{podcastID:{type:"string"},status:{$ref:"#/definitions/Jam.PodcastEpisodeStatusType"},date:{type:"number"},summary:{type:"string"},guid:{type:"string"},author:{type:"string"},link:{type:"string"},errorMessage:{type:"string"},duration:{type:"number"},tag:{$ref:"#/definitions/Jam.TrackTag"},tagID3:{$ref:"#/definitions/Jam.ID3Tag"},media:{$ref:"#/definitions/Jam.TrackMedia"},parentID:{type:"string"},artistID:{type:"string"},albumID:{type:"string"},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","date","duration","id","name","parentID","podcastID","status"]},"Jam.PodcastEpisodeStatusType":{enum:["completed","deleted","downloading","error","new"],type:"string"},"JamParameters.Episodes":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["ids"]},"JamParameters.EpisodeSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},podcastID:{description:"filter by podcast id",type:"string"},name:{description:"filter by title",type:"string"},status:{description:"filter by status",type:"string"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}}},"Jam.PodcastEpisodeStatus":{type:"object",properties:{status:{$ref:"#/definitions/Jam.PodcastEpisodeStatusType"}},required:["status"]},"JamParameters.PodcastEpisodeList":{type:"object",properties:{podcastID:{description:"filter by podcast id",type:"string"},name:{description:"filter by title",type:"string"},status:{description:"filter by status",type:"string"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"},list:{$ref:"#/definitions/JamParameters.ListType",description:"the type of the item list"},offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"}},required:["list"]},"JamParameters.Podcast":{type:"object",properties:{id:{description:"the item id",type:"string"},podcastState:{description:"include user states (fav,rate) on podcast(s)",default:!1,type:"boolean"},podcastEpisodes:{description:"include episodes on podcast(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["id"]},"Jam.Podcast":{type:"object",properties:{url:{type:"string"},status:{$ref:"#/definitions/Jam.PodcastStatusType"},lastCheck:{type:"number"},errorMessage:{type:"string"},description:{type:"string"},episodes:{type:"array",items:{$ref:"#/definitions/Jam.PodcastEpisode"}},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","id","name","status","url"]},"Jam.PodcastStatusType":{enum:["completed","downloading","error","new"],type:"string"},"JamParameters.Podcasts":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}},podcastState:{description:"include user states (fav,rate) on podcast(s)",default:!1,type:"boolean"},podcastEpisodes:{description:"include episodes on podcast(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["ids"]},"Jam.PodcastStatus":{type:"object",properties:{status:{$ref:"#/definitions/Jam.PodcastStatusType"},lastCheck:{type:"number"}},required:["status"]},"JamParameters.PodcastSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},url:{description:"filter by podcast url",type:"string"},title:{description:"filter by podcast title",type:"string"},status:{description:"filter by podcast status",type:"string"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},podcastState:{description:"include user states (fav,rate) on podcast(s)",default:!1,type:"boolean"},podcastEpisodes:{description:"include episodes on podcast(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}}},"JamParameters.PodcastList":{type:"object",properties:{url:{description:"filter by podcast url",type:"string"},title:{description:"filter by podcast title",type:"string"},status:{description:"filter by podcast status",type:"string"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},podcastState:{description:"include user states (fav,rate) on podcast(s)",default:!1,type:"boolean"},podcastEpisodes:{description:"include episodes on podcast(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"},list:{$ref:"#/definitions/JamParameters.ListType",description:"the type of the item list"},offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"}},required:["list"]},"JamParameters.Radio":{type:"object",properties:{id:{description:"the item id",type:"string"},radioState:{description:"include user states (fav,rate) on radio(s)",default:!1,type:"boolean"}},required:["id","radioState"]},"Jam.Radio":{type:"object",properties:{url:{type:"string"},homepage:{type:"string"},created:{type:"number"},changed:{type:"number"},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"}},required:["changed","created","id","name","url"]},"JamParameters.Radios":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}},radioState:{description:"include user states (fav,rate) on radio(s)",default:!1,type:"boolean"}},required:["ids","radioState"]},"JamParameters.Artist":{type:"object",properties:{rootID:{description:"filter by root id",type:"string"},id:{description:"the item id",type:"string"},artistAlbums:{description:"include albums on artist(s)",default:!1,type:"boolean"},artistAlbumIDs:{description:"include album ids on artist(s)",default:!1,type:"boolean"},artistState:{description:"include user states (fav,rate) on artist(s)",default:!1,type:"boolean"},artistTracks:{description:"include tracks on artist(s)",default:!1,type:"boolean"},artistTracksIDs:{description:"include track ids on artist(s)",default:!1,type:"boolean"},artistInfo:{description:"include extended meta data on artist(s)",default:!1,type:"boolean"},artistInfoSimilar:{description:"include similar artists on artist(s)",default:!1,type:"boolean"},albumTracks:{description:"include tracks on album(s)",default:!1,type:"boolean"},albumTrackIDs:{description:"include track ids on album(s)",default:!1,type:"boolean"},albumState:{description:"include user states (fav,rate) on album(s)",default:!1,type:"boolean"},albumInfo:{description:"include extended meta data on album(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["id"]},"Jam.Artist":{type:"object",properties:{albumCount:{type:"number"},trackCount:{type:"number"},musicbrainz:{type:"object",properties:{artistID:{type:"string"}}},albumTypes:{type:"array",items:{enum:["album","audiobook","compilation","unknown"],type:"string"}},tracks:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},trackIDs:{type:"array",items:{type:"string"}},albumIDs:{type:"array",items:{type:"string"}},albums:{type:"array",items:{$ref:"#/definitions/Jam.Album"}},info:{$ref:"#/definitions/Jam.ArtistInfo"},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["albumCount","albumTypes","created","id","name","trackCount"]},"Jam.Album":{type:"object",properties:{artist:{type:"string"},tag:{$ref:"#/definitions/Jam.AlbumTag"},albumType:{$ref:"#/definitions/Jam.AlbumType"},trackCount:{type:"number"},artistID:{type:"string"},trackIDs:{type:"array",items:{type:"string"}},tracks:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},info:{$ref:"#/definitions/Jam.AlbumInfo"},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["albumType","artistID","created","id","name","trackCount"]},"Jam.AlbumTag":{type:"object",properties:{duration:{type:"number"},created:{type:"number"},genre:{type:"string"},year:{type:"number"},musicbrainz:{type:"object",properties:{artistID:{type:"string"},albumID:{type:"string"}}}},required:["created","duration"]},"Jam.AlbumType":{enum:["album","audiobook","compilation","unknown"],type:"string"},"Jam.ArtistInfo":{type:"object",properties:{similar:{type:"array",items:{$ref:"#/definitions/Jam.Artist"}},description:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"JamParameters.Artists":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}},artistAlbums:{description:"include albums on artist(s)",default:!1,type:"boolean"},artistAlbumIDs:{description:"include album ids on artist(s)",default:!1,type:"boolean"},artistState:{description:"include user states (fav,rate) on artist(s)",default:!1,type:"boolean"},artistTracks:{description:"include tracks on artist(s)",default:!1,type:"boolean"},artistTracksIDs:{description:"include track ids on artist(s)",default:!1,type:"boolean"},artistInfo:{description:"include extended meta data on artist(s)",default:!1,type:"boolean"},artistInfoSimilar:{description:"include similar artists on artist(s)",default:!1,type:"boolean"},albumTracks:{description:"include tracks on album(s)",default:!1,type:"boolean"},albumTrackIDs:{description:"include track ids on album(s)",default:!1,type:"boolean"},albumState:{description:"include user states (fav,rate) on album(s)",default:!1,type:"boolean"},albumInfo:{description:"include extended meta data on album(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["ids"]},"JamParameters.ArtistSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},name:{description:"filter by name",type:"string"},rootID:{description:"filter by root id",type:"string"},albumID:{description:"filter by album id",type:"string"},mbArtistID:{description:"filter by musicbrainz album id",type:"string"},newerThan:{description:"filter by creation date (unix time)",minimum:0,type:"integer"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},artistAlbums:{description:"include albums on artist(s)",default:!1,type:"boolean"},artistAlbumIDs:{description:"include album ids on artist(s)",default:!1,type:"boolean"},artistState:{description:"include user states (fav,rate) on artist(s)",default:!1,type:"boolean"},artistTracks:{description:"include tracks on artist(s)",default:!1,type:"boolean"},artistTracksIDs:{description:"include track ids on artist(s)",default:!1,type:"boolean"},artistInfo:{description:"include extended meta data on artist(s)",default:!1,type:"boolean"},artistInfoSimilar:{description:"include similar artists on artist(s)",default:!1,type:"boolean"},albumTracks:{description:"include tracks on album(s)",default:!1,type:"boolean"},albumTrackIDs:{description:"include track ids on album(s)",default:!1,type:"boolean"},albumState:{description:"include user states (fav,rate) on album(s)",default:!1,type:"boolean"},albumInfo:{description:"include extended meta data on album(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}}},"JamParameters.ArtistList":{type:"object",properties:{name:{description:"filter by name",type:"string"},rootID:{description:"filter by root id",type:"string"},albumID:{description:"filter by album id",type:"string"},mbArtistID:{description:"filter by musicbrainz album id",type:"string"},newerThan:{description:"filter by creation date (unix time)",minimum:0,type:"integer"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},artistAlbums:{description:"include albums on artist(s)",default:!1,type:"boolean"},artistAlbumIDs:{description:"include album ids on artist(s)",default:!1,type:"boolean"},artistState:{description:"include user states (fav,rate) on artist(s)",default:!1,type:"boolean"},artistTracks:{description:"include tracks on artist(s)",default:!1,type:"boolean"},artistTracksIDs:{description:"include track ids on artist(s)",default:!1,type:"boolean"},artistInfo:{description:"include extended meta data on artist(s)",default:!1,type:"boolean"},artistInfoSimilar:{description:"include similar artists on artist(s)",default:!1,type:"boolean"},albumTracks:{description:"include tracks on album(s)",default:!1,type:"boolean"},albumTrackIDs:{description:"include track ids on album(s)",default:!1,type:"boolean"},albumState:{description:"include user states (fav,rate) on album(s)",default:!1,type:"boolean"},albumInfo:{description:"include extended meta data on album(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"},list:{$ref:"#/definitions/JamParameters.ListType",description:"the type of the item list"},offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"}},required:["list"]},"Jam.ArtistIndex":{type:"object",properties:{lastModified:{type:"number"},groups:{type:"array",items:{$ref:"#/definitions/Jam.ArtistIndexGroup"}}},required:["groups","lastModified"]},"Jam.ArtistIndexGroup":{type:"object",properties:{name:{type:"string"},entries:{type:"array",items:{$ref:"#/definitions/Jam.ArtistIndexEntry"}}},required:["entries","name"]},"Jam.ArtistIndexEntry":{type:"object",properties:{name:{type:"string"},artistID:{type:"string"},trackCount:{type:"number"}},required:["artistID","name","trackCount"]},"JamParameters.Album":{type:"object",properties:{id:{description:"the item id",type:"string"},albumTracks:{description:"include tracks on album(s)",default:!1,type:"boolean"},albumTrackIDs:{description:"include track ids on album(s)",default:!1,type:"boolean"},albumState:{description:"include user states (fav,rate) on album(s)",default:!1,type:"boolean"},albumInfo:{description:"include extended meta data on album(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["id"]},"JamParameters.Albums":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}},albumTracks:{description:"include tracks on album(s)",default:!1,type:"boolean"},albumTrackIDs:{description:"include track ids on album(s)",default:!1,type:"boolean"},albumState:{description:"include user states (fav,rate) on album(s)",default:!1,type:"boolean"},albumInfo:{description:"include extended meta data on album(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["ids"]},"JamParameters.AlbumList":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},albumTracks:{description:"include tracks on album(s)",default:!1,type:"boolean"},albumTrackIDs:{description:"include track ids on album(s)",default:!1,type:"boolean"},albumState:{description:"include user states (fav,rate) on album(s)",default:!1,type:"boolean"},albumInfo:{description:"include extended meta data on album(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"},name:{description:"filter by name",type:"string"},rootID:{description:"filter by root id",type:"string"},artist:{description:"filter by artist name",type:"string"},artistID:{description:"filter by artist id",type:"string"},trackID:{description:"filter by track id",type:"string"},mbAlbumID:{description:"filter by album id",type:"string"},mbArtistID:{description:"filter by artist id",type:"string"},genre:{description:"filter by genre",type:"string"},newerThan:{description:"filter by creation date (unix time)",minimum:0,type:"integer"},fromYear:{description:"filter by year",minimum:0,type:"integer"},toYear:{description:"filter by year",minimum:0,type:"integer"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},list:{$ref:"#/definitions/JamParameters.ListType",description:"the type of the item list"}},required:["list"]},"JamParameters.AlbumSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},name:{description:"filter by name",type:"string"},rootID:{description:"filter by root id",type:"string"},artist:{description:"filter by artist name",type:"string"},artistID:{description:"filter by artist id",type:"string"},trackID:{description:"filter by track id",type:"string"},mbAlbumID:{description:"filter by album id",type:"string"},mbArtistID:{description:"filter by artist id",type:"string"},genre:{description:"filter by genre",type:"string"},newerThan:{description:"filter by creation date (unix time)",minimum:0,type:"integer"},fromYear:{description:"filter by year",minimum:0,type:"integer"},toYear:{description:"filter by year",minimum:0,type:"integer"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},albumTracks:{description:"include tracks on album(s)",default:!1,type:"boolean"},albumTrackIDs:{description:"include track ids on album(s)",default:!1,type:"boolean"},albumState:{description:"include user states (fav,rate) on album(s)",default:!1,type:"boolean"},albumInfo:{description:"include extended meta data on album(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}}},"JamParameters.Playlist":{type:"object",properties:{id:{description:"the item id",type:"string"},playlistTracks:{description:"include tracks on playlist(s)",default:!1,type:"boolean"},playlistTracksIDs:{description:"include track ids on playlist(s)",default:!1,type:"boolean"},playlistState:{description:"include user states (fav,rate) on playlist(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["id"]},"Jam.Playlist":{type:"object",properties:{userID:{type:"string"},isPublic:{type:"boolean"},comment:{type:"string"},duration:{type:"number"},trackCount:{type:"number"},changed:{type:"number"},tracks:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},trackIDs:{type:"array",items:{type:"string"}},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["changed","created","duration","id","isPublic","name","trackCount","userID"]},"JamParameters.Playlists":{type:"object",properties:{ids:{description:"array of item ids",type:"array",items:{type:"string"}},playlistTracks:{description:"include tracks on playlist(s)",default:!1,type:"boolean"},playlistTracksIDs:{description:"include track ids on playlist(s)",default:!1,type:"boolean"},playlistState:{description:"include user states (fav,rate) on playlist(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}},required:["ids"]},"JamParameters.PlaylistSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},name:{description:"filter by playlist name",type:"string"},isPublic:{description:"filter by public state",type:"boolean"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"},playlistTracks:{description:"include tracks on playlist(s)",default:!1,type:"boolean"},playlistTracksIDs:{description:"include track ids on playlist(s)",default:!1,type:"boolean"},playlistState:{description:"include user states (fav,rate) on playlist(s)",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}}},"JamParameters.UserSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},name:{description:"filter by user name",type:"string"},isAdmin:{description:"filter by user admin role",type:"boolean"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"}}},"JamParameters.PlayQueue":{type:"object",properties:{playQueueTracks:{description:"include tracks on playqueue",default:!1,type:"boolean"},playQueueTrackIDs:{description:"include track ids on playqueue",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}}},"Jam.PlayQueue":{type:"object",properties:{trackIDs:{type:"array",items:{type:"string"}},tracks:{type:"array",items:{$ref:"#/definitions/Jam.Track"}},currentID:{type:"string"},position:{type:"number"},changed:{type:"number"},changedBy:{type:"string"}},required:["changed","changedBy"]},"JamParameters.RootSearch":{type:"object",properties:{offset:{description:"get back items from position",default:0,minimum:0,type:"integer"},amount:{description:"get back number of items",minimum:1,type:"integer"},query:{description:"search query",type:"string"},sortField:{description:"the obj property name to sort on (e.g. 'artist', 'creation')",type:"string"},sortDescending:{description:"the sort direction",default:!1,type:"boolean"}}},"Jam.Root":{type:"object",properties:{path:{type:"string"},status:{$ref:"#/definitions/Jam.RootStatus"},id:{type:"string"},state:{$ref:"#/definitions/Jam.State"},name:{type:"string"},created:{type:"number"}},required:["created","id","name","path","status"]},"Jam.RootStatus":{type:"object",properties:{lastScan:{type:"number"},error:{type:"string"},scanning:{type:"boolean"}},required:["lastScan"]},"JamParameters.Download":{type:"object",properties:{format:{description:"format of download stream",default:"zip",enum:["tar","zip"],type:"string"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.Image":{type:"object",properties:{format:{description:"format of the image",default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},size:{description:"size of the image",minimum:16,maximum:1024,type:"integer"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.Stream":{type:"object",properties:{maxBitRate:{description:"maximal bitrate if transcoding (in Kbps)",minimum:10,type:"integer"},format:{description:"format of audio stream",default:"mp3",enum:["mp3"],type:"string"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.BookmarkList":{type:"object",properties:{bookmarkTrack:{description:"include the track of the bookmark",default:!1,type:"boolean"},trackMedia:{description:"include media informations on track(s)",default:!1,type:"boolean"},trackTag:{description:"include tag on track(s)",default:!1,type:"boolean"},trackID3:{description:"include id3 tag on track(s)",default:!1,type:"boolean"},trackState:{description:"include user states (fav,rate) on track(s)",default:!1,type:"boolean"}}},"Jam.Bookmark":{type:"object",properties:{id:{type:"string"},track:{$ref:"#/definitions/Jam.Track"},trackID:{type:"string"},position:{type:"number"},comment:{type:"string"},created:{type:"number"},changed:{type:"number"}},required:["changed","created","id","position","trackID"]},"JamParameters.PathImageSize":{type:"object",properties:{size:{description:"size of the image",minimum:16,maximum:1024,type:"integer"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.PathImageFormat":{type:"object",properties:{format:{description:"format of the image",default:"png",enum:["bmp","jpeg","jpg","png","tiff"],type:"string"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.PathStream":{type:"object",properties:{format:{description:"format of audio stream",default:"mp3",enum:["mp3"],type:"string"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.Waveform":{type:"object",properties:{format:{description:"format of waveform data",default:"svg",enum:["dat","json","svg"],type:"string"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.Login":{type:"object",properties:{username:{description:"user name",type:"string"},password:{description:"password",type:"string"},client:{description:"client name",type:"string"}},required:["client","password","username"]},"JamParameters.ChatDelete":{type:"object",properties:{time:{description:"time of the post (unix time)",minimum:0,type:"integer"}},required:["time"]},"JamParameters.ChatNew":{type:"object",properties:{message:{description:"the chat message",type:"string"}},required:["message"]},"JamParameters.Fav":{description:"Change the fav user state",type:"object",properties:{remove:{description:"add or remove the item fav",default:!1,type:"boolean"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.Rate":{description:"Change the rating user state",type:"object",properties:{rating:{description:"the rating for the item",minimum:0,maximum:5,type:"integer"},id:{description:"the item id",type:"string"}},required:["id","rating"]},"JamParameters.TagID3Update":{type:"object",properties:{id:{description:"the id of the track",type:"string"},tag:{$ref:"#/definitions/Jam.ID3Tag",description:"the id3 tag to store in the track"}},required:["id","tag"]},"JamParameters.TagID3sUpdate":{type:"object",properties:{tagID3s:{description:"array of id3 tag updates",type:"array",items:{$ref:"#/definitions/JamParameters.TagID3Update"}}},required:["tagID3s"]},"JamParameters.RadioUpdate":{type:"object",properties:{name:{description:"radio name",type:"string"},url:{description:"radio stream url",type:"string"},homepage:{description:"radio homepage url",type:"string"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.FolderEditImg":{description:"Set the image of a folder by url",type:"object",properties:{url:{description:"url of an image",type:"string"},id:{description:"the item id",type:"string"}},required:["id","url"]},"JamParameters.FolderEditName":{description:"Rename the folder",type:"object",properties:{name:{description:"the new folder name",type:"string"},id:{description:"the item id",type:"string"}},required:["id","name"]},"JamParameters.BookmarkCreate":{type:"object",properties:{trackID:{description:"a track id",type:"string"},comment:{description:"a comment",type:"string"},position:{description:"the position of the bookmark (in ms)",minimum:0,type:"integer"}},required:["position"]},"JamParameters.RadioNew":{type:"object",properties:{name:{description:"radio name",type:"string"},url:{description:"radio stream url",type:"string"},homepage:{description:"radio homepage url",type:"string"}},required:["name","url"]},"JamParameters.PodcastNew":{type:"object",properties:{url:{description:"podcast feed url",type:"string"}},required:["url"]},"JamParameters.PlaylistNew":{type:"object",properties:{name:{description:"name of playlist",type:"string"},comment:{description:"a comment",type:"string"},isPublic:{description:"set the playlist visible for other users or not",type:"boolean"},trackIDs:{description:"track ids of the playlist, may include duplicates",type:"array",items:{type:"string"}}},required:["name"]},"JamParameters.PlaylistUpdate":{type:"object",properties:{name:{description:"name of playlist",type:"string"},comment:{description:"a comment",type:"string"},isPublic:{description:"set the playlist visible for other users or not",type:"boolean"},trackIDs:{description:"track ids of the playlist, may include duplicates",type:"array",items:{type:"string"}},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.PlayQueueSet":{type:"object",properties:{trackIDs:{description:"the track ids of the playqueue",type:"array",items:{type:"string"}},currentID:{description:"the track id of the current playing track",type:"string"},position:{description:"the position in the current playing track",minimum:0,type:"integer"}},required:["trackIDs"]},"JamParameters.UserNew":{type:"object",properties:{name:{description:"name of the user",type:"string"},email:{description:"email of the user",type:"string"},roleAdmin:{description:"user has admin rights",default:!1,type:"boolean"},rolePodcast:{description:"user has podcast admin rights",default:!1,type:"boolean"},roleStream:{description:"user has streaming/download rights",default:!0,type:"boolean"},roleUpload:{description:"user has upload rights",default:!1,type:"boolean"}},required:["name"]},"JamParameters.UserUpdate":{type:"object",properties:{name:{description:"name of the user",type:"string"},email:{description:"email of the user",type:"string"},roleAdmin:{description:"user has admin rights",type:"boolean"},rolePodcast:{description:"user has podcast admin rights",type:"boolean"},roleStream:{description:"user has streaming/download rights",type:"boolean"},roleUpload:{description:"user has upload rights",type:"boolean"},id:{description:"the item id",type:"string"}},required:["id"]},"JamParameters.UserPasswordUpdate":{type:"object",properties:{password:{description:"new password of user",type:"string"},id:{description:"the item id",type:"string"}},required:["id","password"]},"JamParameters.UserEmailUpdate":{type:"object",properties:{email:{description:"new email of user",type:"string"},id:{description:"the item id",type:"string"}},required:["email","id"]},"JamParameters.RootNew":{type:"object",properties:{name:{description:"name of the root",type:"string"},path:{description:"absolute path of the root",type:"string"}},required:["name","path"]},"JamParameters.RootUpdate":{type:"object",properties:{name:{description:"name of the root",type:"string"},path:{description:"absolute path of the root",type:"string"},id:{description:"the item id",type:"string"}},required:["id","name","path"]}},$schema:"http://json-schema.org/draft-07/schema#"}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(13));t.getMaxAge=function(e){let t=0;return e.value>0&&(t=s.default.duration(e.value,e.unit).asMilliseconds()),t}},function(e,t){e.exports=require("multer-autoreap")},function(e,t){e.exports=require("express-rate-limit")},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(24)),n=r(156),a=r(159),o=i(r(2)),d=r(15),c=r(160),u=i(r(37)),p=r(161),m=r(19),l=o.default("Subsonic.Api");function y(e,t,r){e.user&&e.user.roles.admin||m.ApiResponder.error(e,t,{fail:d.FORMAT.FAIL.UNAUTH}),r()}function f(e,t,r){e.user&&e.user.roles.podcast||m.ApiResponder.error(e,t,{fail:d.FORMAT.FAIL.UNAUTH}),r()}function h(e,t,r){e.user&&e.user.roles.shareRole||m.ApiResponder.error(e,t,{fail:d.FORMAT.FAIL.UNAUTH}),r()}function g(e,t,r){e.user&&e.user.roles.jukeboxRole||m.ApiResponder.error(e,t,{fail:d.FORMAT.FAIL.UNAUTH}),r()}t.AdminMiddleWare=y,t.PodcastAdminMiddleWare=f,t.ShareMiddleWare=h,t.JukeboxMiddleWare=g,t.initSubsonicRouter=function(e){const t=new c.SubsonicApi(e),r={admin:y,podcast:f,share:h,jukebox:g},i=s.default.Router();return i.options("*",u.default()),i.use((e,t,r)=>{l.info(e.method,e.originalUrl),r()}),i.use(a.SubsonicParameterMiddleWare),i.use(n.SubsonicLoginMiddleWare),i.use(n.CheckAuthMiddleWare),p.registerApi(i,t,r),i.use((e,t,r)=>{t.status(404).send("subsonic api cmd not found")}),i}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(19),n=r(15),a=r(40);t.SubsonicLoginMiddleWare=function(e,t,r){return e.user?r():e.parameters?(e.client=e.parameters.client,void function(e){return i(this,void 0,void 0,function*(){if(e.user)return e.user;if(e.parameters.password){let t=e.parameters.password;return 0===t.indexOf("enc:")&&(t=a.hexDecode(t.slice(4)).trim()),e.engine.userService.auth(e.parameters.username,t)}return e.parameters.token&&e.parameters.salt?e.engine.userService.authToken(e.parameters.username,e.parameters.token,e.parameters.salt):Promise.reject("Invalid Login Type")})}(e).then(t=>{e.user=t,r()}).catch(e=>{r()})):r()},t.CheckAuthMiddleWare=function(e,t,r){return e.user?r():s.ApiResponder.error(e,t,{fail:n.FORMAT.FAIL.UNAUTH})}},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(158));t.toXML=function(e){const t=e=>{let t="";return Object.keys(e).forEach(r=>{if("content"!==r){const i=e[r];s.default.isArray(i)||"object"==typeof i||void 0!==JSON.stringify(i)&&(t+=" "+r+'="'+(e=>e.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&apos;"))(i)+'"')}}),t},r=e=>{let i="";return Object.keys(e).forEach(n=>{const a=e[n];if(s.default.isArray(a))a.forEach(e=>{const s=(e=>{for(const t in e)if("content"===t&&e.hasOwnProperty(t))return e[t];return""})(e)+r(e);i+="<"+n+t(e),i+=s.length>0?">"+s+"</"+n+">":" />"});else if("object"==typeof a){const e=r(a);i+="<"+n+t(a),e.length>0?i+=">"+e+"</"+n+">":i+=" />"}}),i};return(e=>{let i="";return Object.keys(e).forEach(s=>{const n=r(e[s]);i+="<"+s+t(e[s]),n.length>0?i+=">"+n+"</"+s+">":i+=" />"}),'<?xml version="1.0" encoding="UTF-8"?>'+i})(e)}},function(e,t){e.exports=require("util")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SubsonicParameterMiddleWare=function(e,t,r){e.parameters=function(e){const t={username:e.query.u,password:e.query.p,format:e.query.f,version:e.query.v,token:e.query.t,salt:e.query.s,client:e.query.c,callback:e.query.callback};return delete e.query.t,delete e.query.u,delete e.query.p,delete e.query.f,delete e.query.v,delete e.query.c,delete e.query.s,delete e.query.callback,t}(e),r()}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(0),n=r(9),a=r(12),o=r(15),d=r(40);t.SubsonicApi=class{constructor(e){this.engine=e}prepareList(e,t,r,s){return i(this,void 0,void 0,function*(){const i=yield this.engine.stateService.findOrCreateMany(t.map(e=>e.id),s.id,e);return t.map(e=>r(e,i[e.id]))})}prepareObj(e,t,r,s){return i(this,void 0,void 0,function*(){const i=yield this.engine.stateService.findOrCreate(t.id,s.id,e);return r(t,i)})}prepareAlbums(e,t){return i(this,void 0,void 0,function*(){return this.prepareList(s.DBObjectType.album,e,o.FORMAT.packAlbum,t)})}prepareArtists(e,t){return i(this,void 0,void 0,function*(){return this.prepareList(s.DBObjectType.artist,e,o.FORMAT.packArtist,t)})}prepareFolders(e,t){return i(this,void 0,void 0,function*(){return this.prepareList(s.DBObjectType.folder,e,o.FORMAT.packFolder,t)})}prepareFolderArtists(e,t){return i(this,void 0,void 0,function*(){return this.prepareList(s.DBObjectType.folder,e,o.FORMAT.packFolderArtist,t)})}prepareTrack(e,t){return i(this,void 0,void 0,function*(){return this.prepareObj(s.DBObjectType.track,e,o.FORMAT.packTrack,t)})}prepareTracks(e,t){return i(this,void 0,void 0,function*(){return this.prepareList(s.DBObjectType.track,e,o.FORMAT.packTrack,t)})}prepareBookmarks(e,t){return i(this,void 0,void 0,function*(){const r=e=>e.filter(function(t,r){return e.indexOf(t)===r}),i=r(e.map(e=>e.destID)),s=r(e.map(e=>e.userID)),n=yield this.engine.store.trackStore.byIds(i),a=yield this.prepareTracks(n,t),d=yield this.engine.store.userStore.byIds(s),c=[];return e.forEach(e=>{const t=a.find(t=>t.id===e.destID),r=d.find(t=>t.id===e.userID);t&&r&&c.push(o.FORMAT.packBookmark(e,r?r.name:"",t))}),c})}preparePlaylist(e,t){return i(this,void 0,void 0,function*(){const r=yield this.engine.store.trackStore.byIds(e.trackIDs),i=yield this.engine.stateService.findOrCreateMany(e.trackIDs||[],t.id,s.DBObjectType.track);return o.FORMAT.packPlaylistWithSongs(e,r,i)})}prepareEpisodes(e,t){return i(this,void 0,void 0,function*(){const r=yield this.engine.stateService.findOrCreateMany(e.map(e=>e.id),t.id,s.DBObjectType.episode);return e.map(e=>o.FORMAT.packPodcastEpisode(e,r[e.id],this.engine.episodeService.isDownloading(e.id)?s.PodcastStatus.downloading:e.status))})}collectStateChangeObjects(e){return i(this,void 0,void 0,function*(){const t={};if(e.query.id){const r=Array.isArray(e.query.id)?e.query.id:[e.query.id];(yield this.engine.store.findMultiInAll(r)).forEach(e=>{t[e.type]=t[e.type]||[],t[e.type].push(e)})}if(e.query.albumId){const r=Array.isArray(e.query.albumId)?e.query.albumId:[e.query.albumId],i=yield this.engine.store.albumStore.byIds(r);t[s.DBObjectType.album]=(t[s.DBObjectType.album]||[]).concat(i)}if(e.query.artistId){const r=Array.isArray(e.query.artistId)?e.query.artistId:[e.query.artistId],i=yield this.engine.store.artistStore.byIds(r);t[s.DBObjectType.artist]=(t[s.DBObjectType.artist]||[]).concat(i)}return t})}ping(e){return i(this,void 0,void 0,function*(){})}getLicense(e){return i(this,void 0,void 0,function*(){return{license:{valid:!0,email:"dummy",licenseExpires:"",trialExpires:""}}})}getMusicDirectory(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.folderStore),r=yield this.engine.store.trackStore.search({path:t.path});r.sort((e,t)=>{const r=(e.tag?e.tag.track:"")||"",i=(t.tag?t.tag.track:"")||"";return r<i?-1:r>i?1:0});const i=yield this.engine.store.folderStore.search({parentID:t.id});i.sort((e,t)=>{const r=(e.tag?e.tag.album:"")||"",i=(t.tag?t.tag.album:"")||"";return r<i?-1:r>i?1:0});let n=[],a=yield this.prepareFolders(i,e.user);n=n.concat(a),a=yield this.prepareTracks(r,e.user),n=n.concat(a);const d=yield this.engine.stateService.findOrCreate(t.id,e.user.id,s.DBObjectType.folder),c=o.FORMAT.packDirectory(t,d);return c.child=n,{directory:c}})}getIndexes(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.indexService.getFolderIndex(this.engine.ioService.scanning);if(e.query.ifModifiedSince&&e.query.ifModifiedSince>0&&t.lastModified<=e.query.ifModifiedSince)return{};{const r=this.engine.indexService.filterFolderIndex(e.query.musicFolderId?e.query.musicFolderId.toString():void 0,t);let i=[];r.groups.forEach(e=>{i=i.concat(e.entries.map(e=>e.folder.id))});const n=yield this.engine.stateService.findOrCreateMany(i,e.user.id,s.DBObjectType.folder);return{indexes:{lastModified:r.lastModified,ignoredArticles:(this.engine.indexService.indexConfig.ignore||[]).join(" "),index:o.FORMAT.packFolderIndex(r,n)}}}})}getArtists(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.indexService.getArtistIndex(this.engine.ioService.scanning),r=this.engine.indexService.filterArtistIndex(e.query.musicFolderId?e.query.musicFolderId.toString():void 0,t);let i=[];r.groups.forEach(e=>{i=i.concat(e.entries.map(e=>e.artist.id))});const n=yield this.engine.stateService.findOrCreateMany(i,e.user.id,s.DBObjectType.artist);return{artists:{ignoredArticles:(this.engine.indexService.indexConfig.ignore||[]).join(" "),index:o.FORMAT.packArtistIndex(r,n)}}})}getAlbumList(e){return i(this,void 0,void 0,function*(){const t=e.query.size||20,r=e.query.offset||0;let i=[],d=[];switch(e.query.type){case"random":i=yield this.engine.store.folderStore.searchIDs({types:s.FolderTypesAlbum}),d=yield this.engine.store.folderStore.byIds(n.randomItems(i,t));break;case"newest":d=yield this.engine.store.folderStore.search({types:s.FolderTypesAlbum,offset:r,amount:t,sorts:[{field:"created",descending:!0}]});break;case"alphabeticalByArtist":d=yield this.engine.store.folderStore.search({types:s.FolderTypesAlbum,offset:r,amount:t,sorts:[{field:"artist",descending:!1}]});break;case"alphabeticalByName":d=yield this.engine.store.folderStore.search({types:s.FolderTypesAlbum,offset:r,amount:t,sorts:[{field:"album",descending:!1}]});break;case"starred":i=yield this.engine.folderService.getFavedIDs({types:s.FolderTypesAlbum},e.user),d=yield this.engine.store.folderStore.byIds(a.paginate(i,t,r));break;case"frequent":i=yield this.engine.folderService.getFrequentlyPlayedIDs({types:s.FolderTypesAlbum},e.user),d=yield this.engine.store.folderStore.byIds(a.paginate(i,t,r));break;case"recent":i=yield this.engine.folderService.getRecentlyPlayedIDs({types:s.FolderTypesAlbum},e.user),d=yield this.engine.store.folderStore.byIds(a.paginate(i,t,r));break;case"highest":i=yield this.engine.folderService.getHighestRatedIDs({types:s.FolderTypesAlbum},e.user),d=yield this.engine.store.folderStore.byIds(a.paginate(i,t,r));break;case"byGenre":d=yield this.engine.store.folderStore.search({types:s.FolderTypesAlbum,offset:r,amount:t,genre:e.query.genre||""});break;case"byYear":d=yield this.engine.store.folderStore.search({offset:r,amount:t,types:s.FolderTypesAlbum,fromYear:e.query.fromYear,toYear:e.query.toYear});break;default:return Promise.reject({fail:o.FORMAT.FAIL.PARAMETER,text:"Unknown Album List Type"})}return{albumList:{album:yield this.prepareFolders(d,e.user)}}})}getAlbumList2(e){return i(this,void 0,void 0,function*(){const t=Math.min(e.query.size||20,500),r=e.query.offset||0,i=e.query.musicFolderId?e.query.musicFolderId.toString():void 0;let s=[],d=[];switch(e.query.type){case"random":d=yield this.engine.store.albumStore.searchIDs({rootID:i}),s=yield this.engine.store.albumStore.byIds(n.randomItems(d,t));break;case"byGenre":s=yield this.engine.store.albumStore.search({amount:t,offset:r,genre:e.query.genre||"",rootID:i});break;case"byYear":s=yield this.engine.store.albumStore.search({amount:t,offset:r,fromYear:e.query.fromYear,toYear:e.query.toYear,rootID:i});break;case"newest":s=yield this.engine.store.albumStore.search({rootID:i,offset:r,amount:t,sorts:[{field:"created",descending:!0}]});break;case"alphabeticalByArtist":s=yield this.engine.store.albumStore.search({rootID:i,offset:r,amount:t,sorts:[{field:"artist",descending:!1}]});break;case"alphabeticalByName":s=yield this.engine.store.albumStore.search({rootID:i,offset:r,amount:t,sorts:[{field:"name",descending:!1}]});break;case"starred":d=yield this.engine.albumService.getFavedIDs({rootID:i},e.user),s=yield this.engine.store.albumStore.byIds(a.paginate(d,t,r));break;case"frequent":d=yield this.engine.albumService.getFrequentlyPlayedIDs({rootID:i},e.user),s=yield this.engine.store.albumStore.byIds(a.paginate(d,t,r));break;case"recent":d=yield this.engine.albumService.getRecentlyPlayedIDs({rootID:i},e.user),s=yield this.engine.store.albumStore.byIds(a.paginate(d,t,r));break;case"highest":d=yield this.engine.albumService.getHighestRatedIDs({rootID:i},e.user),s=yield this.engine.store.albumStore.byIds(a.paginate(d,t,r));break;default:return Promise.reject({fail:o.FORMAT.FAIL.PARAMETER,text:"Unknown Album List Type"})}return{albumList2:{album:yield this.prepareAlbums(s,e.user)}}})}getCoverArt(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.store.findInAll(e.query.id);return t?yield this.engine.imageService.getObjImage(t,e.query.size):Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND})})}getAvatar(e){return i(this,void 0,void 0,function*(){const t=e.query.username,r=yield this.engine.userService.getByName(t);return r?yield this.engine.imageService.getObjImage(r):Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND})})}getAlbumInfo(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.store.folderStore.byId(e.query.id);if(!t)return{albumInfo:{}};const r=yield this.engine.metaDataService.getFolderInfo(t);return r?{albumInfo:o.FORMAT.packAlbumInfo(r)}:{albumInfo:{}}})}getAlbumInfo2(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.store.albumStore.byId(e.query.id);if(t){const e=yield this.engine.metaDataService.getAlbumInfo(t);return{albumInfo:o.FORMAT.packAlbumInfo(e)}}return{albumInfo:{}}})}getArtistInfo(e){return i(this,void 0,void 0,function*(){let t=!1;void 0!==e.query.includeNotPresent&&(t=e.query.includeNotPresent);const r=e.query.count||20,i=yield this.byID(e.query.id,this.engine.store.folderStore),s=yield this.engine.metaDataService.getFolderArtistInfo(i,t,!0);if(!s)return{artistInfo:{}};let n=s.similar||[];const d=(n=a.paginate(n,r,0)).filter(e=>!!e.folder).map(e=>e.folder),c=yield this.prepareFolders(d,e.user),u=n.map(e=>{let t;if(e.folder){const r=e.folder;t=c.find(e=>e.id===r.id)}return t?{id:t.id,name:e.name,starred:t.starred,userRating:t.userRating,averageRating:t.averageRating}:{id:"-1",name:e.name}});return{artistInfo:o.FORMAT.packArtistInfo(s.info,u)}})}getArtistInfo2(e){return i(this,void 0,void 0,function*(){let t=!1;void 0!==e.query.includeNotPresent&&(t=e.query.includeNotPresent);const r=yield this.engine.store.artistStore.byId(e.query.id);if(!r)return{artistInfo2:{}};const i=yield this.engine.metaDataService.getArtistInfos(r,t,!0),n=(i.similar||[]).filter(e=>!!e.artist).map(e=>e.artist.id),a=yield this.engine.stateService.findOrCreateMany(n,e.user.id,s.DBObjectType.artist),d=[];return(i.similar||[]).forEach(e=>{e.artist?d.push(o.FORMAT.packArtist(e.artist,a[e.artist.id])):t&&d.push({id:"-1",name:e.name,albumCount:0})}),{artistInfo2:o.FORMAT.packArtistInfo2(i.info,d)}})}getTopSongs(e){return i(this,void 0,void 0,function*(){const t=e.query.count||50,r=yield this.engine.metaDataService.getTopTracks(e.query.artist,t);return{topSongs:{song:yield this.prepareTracks(r,e.user)}}})}getSimilarSongs(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.store.findInAll(e.query.id);if(t){let r=[];switch(t.type){case s.DBObjectType.track:r=yield this.engine.metaDataService.getTrackSimilarTracks(t);break;case s.DBObjectType.folder:r=yield this.engine.metaDataService.getFolderSimilarTracks(t);break;case s.DBObjectType.artist:r=yield this.engine.metaDataService.getArtistSimilarTracks(t);break;case s.DBObjectType.album:r=yield this.engine.metaDataService.getAlbumSimilarTracks(t)}const i=a.paginate(r,e.query.count||50,0),n=yield this.prepareTracks(i,e.user);return{similarSongs:o.FORMAT.packSimilarSongs(n)}}return Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND})})}getSimilarSongs2(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.artistStore),r=yield this.engine.metaDataService.getArtistSimilarTracks(t),i=a.paginate(r,e.query.count||50,0),s=yield this.prepareTracks(i,e.user);return{similarSongs2:o.FORMAT.packSimilarSongs2(s)}})}download(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.store.findInAll(e.query.id);return t?this.engine.downloadService.getObjDownload(t,void 0,e.user):Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND})})}stream(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.store.findInAll(e.query.id);if(t){switch(t.type){case s.DBObjectType.track:const r=yield this.engine.streamService.streamTrack(t,e.query.format,e.query.maxBitRate,e.user);return this.engine.nowPlayingService.reportTrack(t,e.user),r;case s.DBObjectType.episode:const i=yield this.engine.streamService.streamEpisode(t,e.query.format,e.query.maxBitRate,e.user);return this.engine.nowPlayingService.reportEpisode(t,e.user),i}return Promise.reject(Error("Invalid Object Type for Streaming"))}return Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND})})}getSong(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.trackStore);return{song:yield this.prepareTrack(t,e.user)}})}getGenres(e){return i(this,void 0,void 0,function*(){const e=(yield this.engine.genreService.getGenres()).map(e=>o.FORMAT.packGenre(e));if(0===e.length){const t={content:"-",songCount:0,artistCount:0,albumCount:0};e.push(t)}return{genres:{genre:e}}})}getMusicFolders(e){return i(this,void 0,void 0,function*(){return{musicFolders:{musicFolder:(yield this.engine.store.rootStore.all()).map(o.FORMAT.packRoot)}}})}getUser(e){return i(this,void 0,void 0,function*(){if(e.query.username&&e.user.name!==e.query.username){if(e.user.roles.admin){const t=yield this.engine.userService.getByName(e.query.username);return t?{user:o.FORMAT.packUser(t)}:Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND})}return Promise.reject({fail:o.FORMAT.FAIL.UNAUTH})}return{user:o.FORMAT.packUser(e.user)}})}star(e){return i(this,void 0,void 0,function*(){const t=yield this.collectStateChangeObjects(e);for(const r of Object.keys(t)){const i=parseInt(r,10);for(const r of t[i])yield this.engine.stateService.fav(r.id,i,e.user.id,!1)}})}unstar(e){return i(this,void 0,void 0,function*(){const t=yield this.collectStateChangeObjects(e);for(const r of Object.keys(t)){const i=parseInt(r,10);for(const r of t[i])yield this.engine.stateService.fav(r.id,i,e.user.id,!0)}})}setRating(e){return i(this,void 0,void 0,function*(){if(e.query.rating<0||e.query.rating>5)return Promise.reject({fail:o.FORMAT.FAIL.PARAMETER});const t=yield this.collectStateChangeObjects(e);for(const r of Object.keys(t)){const i=parseInt(r,10);for(const r of t[i])yield this.engine.stateService.rate(r.id,i,e.user.id,e.query.rating)}})}getNowPlaying(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.nowPlayingService.getNowPlaying(),r=[];for(const i of t){const t=yield this.engine.stateService.findOrCreate(i.obj.id,e.user.id,i.obj.type);r.push(o.FORMAT.packNowPlaying(i,t))}return{nowPlaying:{entry:r}}})}getUsers(e){return i(this,void 0,void 0,function*(){return{users:{user:(yield this.engine.store.userStore.all()).map(o.FORMAT.packUser)}}})}updateUser(e){return i(this,void 0,void 0,function*(){const t=(e,t)=>void 0===e?t:e,r=e.query.username,i=yield this.engine.userService.getByName(r);if(!i)return Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND});e.query.email&&(i.email=e.query.email),e.query.password&&(i.subsonic_pass=e.query.password),e.query.musicFolderId&&(i.allowedfolder=(Array.isArray(e.query.musicFolderId)?e.query.musicFolderId:[e.query.musicFolderId]).map(e=>e.toString())),void 0!==e.query.maxBitRate&&(i.maxBitRate=e.query.maxBitRate||0),e.query.username&&(i.name=e.query.username),i.roles.admin=t(e.query.adminRole,i.roles.admin),i.roles.stream=t(e.query.streamRole,i.roles.stream),i.roles.upload=t(e.query.uploadRole,i.roles.upload),i.roles.podcast=t(e.query.podcastRole,i.roles.podcast),yield this.engine.userService.update(i)})}createUser(e){return i(this,void 0,void 0,function*(){if(!e.query.username||0===e.query.username.length||!e.query.password||0===e.query.password.length||!e.query.email||0===e.query.email.length)return Promise.reject({fail:o.FORMAT.FAIL.PARAMETER});const t=(e,t)=>void 0===e?t:e,r={id:"",name:e.query.username||"",salt:"",hash:"",subsonic_pass:e.query.password||"invalid",email:e.query.email||"invalid",avatarLastChanged:Date.now(),created:Date.now(),type:s.DBObjectType.user,scrobblingEnabled:!1,roles:{admin:t(e.query.adminRole,!1),stream:t(e.query.streamRole,!0),upload:t(e.query.uploadRole,!1),podcast:t(e.query.podcastRole,!1)}};0===r.subsonic_pass.indexOf("enc:")&&(r.subsonic_pass=d.hexDecode(r.subsonic_pass.slice(4)).trim()),yield this.engine.userService.create(r)})}deleteUser(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.userService.getByName(e.query.username);if(!t)return Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND});yield this.engine.userService.remove(t)})}changePassword(e){return i(this,void 0,void 0,function*(){if(!e.query.username||!e.query.password||0===e.query.password.length)return Promise.reject({fail:o.FORMAT.FAIL.PARAMETER});if(e.query.username!==e.user.name&&!e.user.roles.admin)return Promise.reject({fail:o.FORMAT.FAIL.UNAUTH});const t=yield this.engine.userService.getByName(e.query.username);if(!t)return Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND});t.subsonic_pass=e.query.password,0===t.subsonic_pass.indexOf("enc:")&&(t.subsonic_pass=d.hexDecode(t.subsonic_pass.slice(4)).trim()),yield this.engine.userService.update(t)})}getChatMessages(e){return i(this,void 0,void 0,function*(){return{chatMessages:{chatMessage:(yield this.engine.chatService.get(e.query.since)).map(e=>o.FORMAT.packChatMessage(e))}}})}addChatMessage(e){return i(this,void 0,void 0,function*(){yield this.engine.chatService.add(e.query.message,e.user)})}getPlaylists(e){return i(this,void 0,void 0,function*(){let t=e.user.id;if(e.query.username&&e.query.username!==e.user.name){if(!e.user.roles.admin)return Promise.reject({fail:o.FORMAT.FAIL.UNAUTH});const r=yield this.engine.userService.getByName(e.query.username);if(!r)return Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND});t=r.id}const r=yield this.engine.store.playlistStore.search({userID:t,isPublic:e.user.id!==t}),i={},s=[];for(const t of r){const r=yield this.preparePlaylist(t,e.user);s.push(r)}return i.playlist=s,{playlists:i}})}getPlaylist(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.playlistStore);return t.userID!==e.user.id?Promise.reject({fail:o.FORMAT.FAIL.UNAUTH}):{playlist:yield this.preparePlaylist(t,e.user)}})}createPlaylist(e){return i(this,void 0,void 0,function*(){let t;if(!e.query.playlistId&&!e.query.name)return Promise.reject({fail:o.FORMAT.FAIL.PARAMETER});if(e.query.playlistId){const r={playlistId:e.query.playlistId,name:e.query.name,songIdToAdd:e.query.songId};e.query=r,yield this.updatePlaylist(e),t=yield this.byID(e.query.playlistId,this.engine.store.playlistStore)}else e.query.name&&(t=yield this.engine.playlistService.create(e.query.name,void 0,!1,e.user.id,void 0!==e.query.songId?Array.isArray(e.query.songId)?e.query.songId:[e.query.songId]:[]));if(!t)return Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND});const r=yield this.engine.store.trackStore.byIds(t.trackIDs),i=yield this.engine.stateService.findOrCreateMany(t.trackIDs,e.user.id,s.DBObjectType.track);return{playlist:o.FORMAT.packPlaylistWithSongs(t,r,i)}})}updatePlaylist(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.playlistId,this.engine.store.playlistStore);if(e.user.id!==t.userID)return Promise.reject({fail:o.FORMAT.FAIL.UNAUTH});const r=void 0!==e.query.songIndexToRemove?Array.isArray(e.query.songIndexToRemove)?e.query.songIndexToRemove:[e.query.songIndexToRemove]:[];t.trackIDs=t.trackIDs.filter((e,t)=>r.indexOf(t)<0);const i=t.trackIDs;if(e.query.songIdToAdd){const r=void 0!==e.query.songIdToAdd?Array.isArray(e.query.songIdToAdd)?e.query.songIdToAdd:[e.query.songIdToAdd]:[];t.trackIDs=i.concat(r)}t.name=e.query.name||t.name,t.comment=e.query.comment||t.comment,t.isPublic=void 0!==e.query.public?e.query.public:t.isPublic,t.changed=Date.now(),yield this.engine.playlistService.update(t)})}deletePlaylist(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.playlistStore);if(t.userID!==e.user.id)return Promise.reject({fail:o.FORMAT.FAIL.UNAUTH});yield this.engine.playlistService.remove(t)})}getStarred(e){return i(this,void 0,void 0,function*(){const t=void 0!==e.query.musicFolderId?e.query.musicFolderId.toString():void 0,r={},i=yield this.engine.trackService.getFavedIDs({rootID:t},e.user);if(i.length>0){const t=yield this.engine.store.trackStore.byIds(i);r.song=yield this.prepareTracks(t,e.user)}const n=yield this.engine.folderService.getFavedIDs({types:[s.FolderType.artist],rootID:t},e.user);if(n.length>0){const t=yield this.engine.store.folderStore.byIds(n);r.artist=yield this.prepareFolderArtists(t,e.user)}const a=yield this.engine.folderService.getFavedIDs({types:s.FolderTypesAlbum,rootID:t},e.user);if(a.length>0){const t=yield this.engine.store.folderStore.byIds(a);r.album=yield this.prepareFolders(t,e.user)}return{starred:r}})}getStarred2(e){return i(this,void 0,void 0,function*(){const t=void 0!==e.query.musicFolderId?e.query.musicFolderId.toString():void 0,r={},i=yield this.engine.trackService.getFavedIDs({rootID:t},e.user);if(i.length>0){const t=yield this.engine.store.trackStore.byIds(i);r.song=yield this.prepareTracks(t,e.user)}const s=yield this.engine.albumService.getFavedIDs({rootID:t},e.user);if(s.length>0){const t=yield this.engine.store.albumStore.byIds(s);r.album=yield this.prepareAlbums(t,e.user)}const n=yield this.engine.artistService.getFavedIDs({rootID:t},e.user);if(n.length>0){const t=yield this.engine.store.artistStore.byIds(n);r.artist=yield this.prepareArtists(t,e.user)}return{starred2:r}})}refreshPodcasts(e){return i(this,void 0,void 0,function*(){this.engine.podcastService.refreshPodcasts()})}createPodcastChannel(e){return i(this,void 0,void 0,function*(){yield this.engine.podcastService.create(e.query.url)})}getPodcasts(e){return i(this,void 0,void 0,function*(){let t=!1;void 0!==e.query.includeEpisodes&&(t=e.query.includeEpisodes);let r=[];if(e.query.id){const t=yield this.engine.store.podcastStore.byId(e.query.id);if(!t)return Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND});r.push(t)}else r=yield this.engine.store.podcastStore.all();const i=r.map(e=>o.FORMAT.packPodcast(e,this.engine.podcastService.isDownloading(e.id)?s.PodcastStatus.downloading:void 0)),n={channel:i};if(t)for(const t of i){const r=yield this.engine.store.episodeStore.search({podcastID:t.id});t.episode=yield this.prepareEpisodes(r.sort((e,t)=>(t.date||0)-(e.date||0)),e.user)}return{podcasts:n}})}getNewestPodcasts(e){return i(this,void 0,void 0,function*(){let t=yield this.engine.store.episodeStore.all();t=t.sort((e,t)=>(t.date||0)-(e.date||0));const r={};return r.episode=yield this.prepareEpisodes(a.paginate(t,e.query.count||20,0),e.user),{newestPodcasts:r}})}byID(e,t){return i(this,void 0,void 0,function*(){const r=yield t.byId(e);return r||Promise.reject({fail:o.FORMAT.FAIL.NOTFOUND})})}deletePodcastChannel(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.podcastStore);yield this.engine.podcastService.remove(t)})}downloadPodcastEpisode(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.episodeStore);t.path||this.engine.episodeService.downloadEpisode(t)})}deletePodcastEpisode(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.episodeStore);yield this.engine.episodeService.deleteEpisode(t)})}getBookmarks(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.bookmarkService.getAll(e.user.id),r={};return r.bookmark=yield this.prepareBookmarks(t,e.user),{bookmarks:r}})}createBookmark(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.trackStore);yield this.engine.bookmarkService.create(t.id,e.user.id,e.query.position,e.query.comment)})}deleteBookmark(e){return i(this,void 0,void 0,function*(){yield this.engine.bookmarkService.remove(e.query.id,e.user.id)})}getRandomSongs(e){return i(this,void 0,void 0,function*(){const t=Math.min(e.query.size||10,500),r={genre:e.query.genre,fromYear:e.query.fromYear,toYear:e.query.toYear,rootID:e.query.musicFolderId?e.query.musicFolderId.toString():void 0},i={},s=yield this.engine.store.trackStore.searchIDs(r);if(s.length>0){const r=n.randomItems(s,t),a=yield this.engine.store.trackStore.byIds(r);i.song=yield this.prepareTracks(a,e.user)}return{randomSongs:i}})}getSongsByGenre(e){return i(this,void 0,void 0,function*(){const t={},r=yield this.engine.store.trackStore.searchIDs({genre:e.query.genre,rootID:e.query.musicFolderId?e.query.musicFolderId.toString():void 0}),i=a.paginate(r,e.query.count||10,e.query.offset||0),s=yield this.engine.store.trackStore.byIds(i);return t.song=yield this.prepareTracks(s,e.user),{songsByGenre:t}})}search(e){return i(this,void 0,void 0,function*(){e.query.any&&(e.query.artist=e.query.any,e.query.album=e.query.any,e.query.title=e.query.any);let t=yield this.engine.store.trackStore.searchIDs({artist:e.query.artist,album:e.query.album,title:e.query.title,newerThan:e.query.newerThan});const r={offset:e.query.offset||0,totalHits:t.length};t=a.paginate(t,e.query.count||20,e.query.offset||0);const i=yield this.engine.store.trackStore.byIds(t);return r.match=yield this.prepareTracks(i,e.user),{searchResult:r}})}search2(e){return i(this,void 0,void 0,function*(){const t={},r=e.query.musicFolderId?e.query.musicFolderId.toString():void 0,i=yield this.engine.store.trackStore.searchIDs({query:e.query.query,rootID:r});if(i.length>0){const r=a.paginate(i,e.query.songCount||20,e.query.songOffset||0),s=yield this.engine.store.trackStore.byIds(r);t.song=yield this.prepareTracks(s,e.user)}const n=yield this.engine.store.folderStore.search({query:e.query.query,rootID:r});if(n.length>0){const r=yield this.engine.stateService.findOrCreateMany(n.map(e=>e.id),e.user.id,s.DBObjectType.folder),i=[],d=[];n.forEach(e=>{e.tag.type===s.FolderType.artist?i.push(o.FORMAT.packFolderArtist(e,r[e.id])):d.push(o.FORMAT.packFolder(e,r[e.id]))}),t.artist=a.paginate(i,e.query.artistCount||20,e.query.artistOffset||0),t.album=a.paginate(d,e.query.albumCount||20,e.query.albumOffset||0)}return{searchResult2:t}})}search3(e){return i(this,void 0,void 0,function*(){const t={},r=yield this.engine.store.trackStore.searchIDs({query:e.query.query});if(r.length>0){const i=a.paginate(r,e.query.songCount||20,e.query.songOffset||0),s=yield this.engine.store.trackStore.byIds(i);t.song=yield this.prepareTracks(s,e.user)}const i=yield this.engine.store.albumStore.searchIDs({query:e.query.query});if(i.length>0){const r=a.paginate(i,e.query.albumCount||20,e.query.albumOffset||0),s=yield this.engine.store.albumStore.byIds(r);t.album=yield this.prepareAlbums(s,e.user)}const s=yield this.engine.store.artistStore.searchIDs({query:e.query.query});if(s.length>0){const r=a.paginate(s,e.query.artistCount||20,e.query.artistOffset||0),i=yield this.engine.store.artistStore.byIds(r);t.artist=yield this.prepareArtists(i,e.user)}return{searchResult3:t}})}getScanStatus(e){return i(this,void 0,void 0,function*(){return{scanStatus:this.engine.ioService.getScanStatus()}})}startScan(e){return i(this,void 0,void 0,function*(){this.engine.ioService.refresh()})}getArtist(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.artistStore),r=yield this.engine.store.albumStore.search({artistID:t.id});r.sort((e,t)=>(e.year||0)-(t.year||0));const i=yield this.engine.stateService.findOrCreate(t.id,e.user.id,s.DBObjectType.artist),n=yield this.engine.stateService.findOrCreateMany(r.map(e=>e.id),e.user.id,s.DBObjectType.album),a=o.FORMAT.packArtist(t,i);return a.album=r.map(e=>o.FORMAT.packAlbum(e,n[e.id])),{artist:a}})}getAlbum(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,this.engine.store.albumStore),r=yield this.engine.store.trackStore.byIds(t.trackIDs),i=yield this.engine.stateService.findOrCreate(t.id,e.user.id,s.DBObjectType.album);r.sort((e,t)=>(e.tag.track||0)-(t.tag.track||0));const n=yield this.prepareTracks(r,e.user),a=o.FORMAT.packAlbum(t,i);return a.song=n,{album:a}})}getLyrics(e){return i(this,void 0,void 0,function*(){if(!e.query.artist||!e.query.title)return{lyrics:{content:""}};const t=yield this.engine.audioModule.getLyrics(e.query.artist,e.query.title);return t?{lyrics:{artist:t.artist,title:t.song,content:t.lyric.replace(/\r\n/g,"\n")}}:{lyrics:{content:""}}})}getPlayQueue(e){return i(this,void 0,void 0,function*(){const t=yield this.engine.playQueueService.get(e.user.id);if(!t)return{};const r=yield this.engine.store.trackStore.byIds(t.trackIDs),i=yield this.prepareTracks(r,e.user);return{playQueue:o.FORMAT.packPlayQueue(t,e.user,i)}})}savePlayQueue(e){return i(this,void 0,void 0,function*(){const t=e.query.id?Array.isArray(e.query.id)?e.query.id:[e.query.id]:[];yield this.engine.playQueueService.save(e.user.id,t,e.query.current,e.query.position,e.client)})}deleteInternetRadioStation(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,yield this.engine.store.radioStore);yield this.engine.store.radioStore.remove(t.id)})}createInternetRadioStation(e){return i(this,void 0,void 0,function*(){yield this.engine.radioService.create(e.query.name,e.query.streamUrl,e.query.homepageUrl)})}updateInternetRadioStation(e){return i(this,void 0,void 0,function*(){const t=yield this.byID(e.query.id,yield this.engine.store.radioStore);yield this.engine.radioService.update(t,e.query.name,e.query.streamUrl,e.query.homepageUrl)})}getInternetRadioStations(e){return i(this,void 0,void 0,function*(){return{internetRadioStations:{internetRadioStation:(yield this.engine.store.radioStore.all()).filter(e=>!e.disabled).map(e=>o.FORMAT.packRadio(e))}}})}getVideos(e){return i(this,void 0,void 0,function*(){return Promise.reject("not implemented"),{videos:{}}})}getVideoInfo(e){return i(this,void 0,void 0,function*(){return Promise.reject("not implemented"),{videoInfo:{id:""}}})}getCaptions(e){return i(this,void 0,void 0,function*(){return Promise.reject("not implemented"),{}})}scrobble(e){return i(this,void 0,void 0,function*(){Promise.reject("not implemented")})}getShares(e){return i(this,void 0,void 0,function*(){return Promise.reject("not implemented"),{shares:{}}})}createShare(e){return i(this,void 0,void 0,function*(){Promise.reject("not implemented")})}updateShare(e){return i(this,void 0,void 0,function*(){Promise.reject("not implemented")})}deleteShare(e){return i(this,void 0,void 0,function*(){Promise.reject("not implemented")})}hls(e){return i(this,void 0,void 0,function*(){return Promise.reject("not implemented"),{}})}jukeboxControl(e){return i(this,void 0,void 0,function*(){return Promise.reject("not implemented"),{jukeboxStatus:{currentIndex:0,playing:!1,gain:0}}})}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0});const s=r(19),n=r(162);t.registerApi=function(e,t,r){e.all("/addChatMessage.view",n.apiCheck("/addChatMessage.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.addChatMessage(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/changePassword.view",n.apiCheck("/changePassword.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.changePassword(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/createBookmark.view",n.apiCheck("/createBookmark.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.createBookmark(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/createPlaylist.view",n.apiCheck("/createPlaylist.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.createPlaylist(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/createPodcastChannel.view",r.podcast,n.apiCheck("/createPodcastChannel.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.createPodcastChannel(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/createShare.view",r.share,n.apiCheck("/createShare.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.createShare(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/createUser.view",r.admin,n.apiCheck("/createUser.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.createUser(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/deleteBookmark.view",n.apiCheck("/deleteBookmark.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.deleteBookmark(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/deleteInternetRadioStation.view",r.admin,n.apiCheck("/deleteInternetRadioStation.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.deleteInternetRadioStation(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/deletePlaylist.view",n.apiCheck("/deletePlaylist.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.deletePlaylist(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/deletePodcastChannel.view",r.podcast,n.apiCheck("/deletePodcastChannel.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.deletePodcastChannel(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/deletePodcastEpisode.view",r.podcast,n.apiCheck("/deletePodcastEpisode.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.deletePodcastEpisode(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/deleteShare.view",n.apiCheck("/deleteShare.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.deleteShare(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/deleteUser.view",r.admin,n.apiCheck("/deleteUser.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.deleteUser(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/downloadPodcastEpisode.view",r.podcast,n.apiCheck("/downloadPodcastEpisode.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.downloadPodcastEpisode(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getAlbum.view",n.apiCheck("/getAlbum.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getAlbum(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getAlbumInfo.view",n.apiCheck("/getAlbumInfo.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getAlbumInfo(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getAlbumInfo2.view",n.apiCheck("/getAlbumInfo2.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getAlbumInfo2(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getAlbumList.view",n.apiCheck("/getAlbumList.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getAlbumList(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getAlbumList2.view",n.apiCheck("/getAlbumList2.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getAlbumList2(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getArtist.view",n.apiCheck("/getArtist.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getArtist(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getArtistInfo.view",n.apiCheck("/getArtistInfo.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getArtistInfo(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getArtistInfo2.view",n.apiCheck("/getArtistInfo2.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getArtistInfo2(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getArtists.view",n.apiCheck("/getArtists.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getArtists(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getBookmarks.view",n.apiCheck("/getBookmarks.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getBookmarks(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getChatMessages.view",n.apiCheck("/getChatMessages.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getChatMessages(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getGenres.view",n.apiCheck("/getGenres.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getGenres(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getIndexes.view",n.apiCheck("/getIndexes.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getIndexes(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getInternetRadioStations.view",n.apiCheck("/getInternetRadioStations.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getInternetRadioStations(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/createInternetRadioStation.view",r.admin,n.apiCheck("/createInternetRadioStation.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.createInternetRadioStation(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/updateInternetRadioStation.view",r.admin,n.apiCheck("/updateInternetRadioStation.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.updateInternetRadioStation(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getLicense.view",n.apiCheck("/getLicense.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getLicense(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getLyrics.view",n.apiCheck("/getLyrics.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getLyrics(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getMusicDirectory.view",n.apiCheck("/getMusicDirectory.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getMusicDirectory(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getMusicFolders.view",n.apiCheck("/getMusicFolders.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getMusicFolders(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getNewestPodcasts.view",n.apiCheck("/getNewestPodcasts.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getNewestPodcasts(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getNowPlaying.view",n.apiCheck("/getNowPlaying.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getNowPlaying(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getPlaylist.view",n.apiCheck("/getPlaylist.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getPlaylist(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getPlaylists.view",n.apiCheck("/getPlaylists.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getPlaylists(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getPlayQueue.view",n.apiCheck("/getPlayQueue.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getPlayQueue(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getPodcasts.view",n.apiCheck("/getPodcasts.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getPodcasts(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getRandomSongs.view",n.apiCheck("/getRandomSongs.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getRandomSongs(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getScanStatus.view",n.apiCheck("/getScanStatus.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getScanStatus(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/startScan.view",n.apiCheck("/startScan.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.startScan(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getShares.view",n.apiCheck("/getShares.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getShares(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getSimilarSongs.view",n.apiCheck("/getSimilarSongs.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getSimilarSongs(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getSimilarSongs2.view",n.apiCheck("/getSimilarSongs2.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getSimilarSongs2(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getSong.view",n.apiCheck("/getSong.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getSong(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getSongsByGenre.view",n.apiCheck("/getSongsByGenre.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getSongsByGenre(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getStarred.view",n.apiCheck("/getStarred.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getStarred(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getStarred2.view",n.apiCheck("/getStarred2.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getStarred2(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getTopSongs.view",n.apiCheck("/getTopSongs.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getTopSongs(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getUser.view",n.apiCheck("/getUser.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getUser(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getUsers.view",r.admin,n.apiCheck("/getUsers.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getUsers(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getVideoInfo.view",n.apiCheck("/getVideoInfo.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getVideoInfo(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getVideos.view",n.apiCheck("/getVideos.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getVideos(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/jukeboxControl.view",r.jukebox,n.apiCheck("/jukeboxControl.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.jukeboxControl(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/ping.view",n.apiCheck("/ping.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.ping(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/refreshPodcasts.view",r.podcast,n.apiCheck("/refreshPodcasts.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.refreshPodcasts(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/savePlayQueue.view",n.apiCheck("/savePlayQueue.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.savePlayQueue(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/scrobble.view",n.apiCheck("/scrobble.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.scrobble(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/search.view",n.apiCheck("/search.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.search(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/search2.view",n.apiCheck("/search2.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.search2(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/search3.view",n.apiCheck("/search3.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.search3(i);yield s.ApiResponder.data(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/setRating.view",n.apiCheck("/setRating.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.setRating(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/star.view",n.apiCheck("/star.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.star(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/unstar.view",n.apiCheck("/unstar.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.unstar(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/updatePlaylist.view",n.apiCheck("/updatePlaylist.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.updatePlaylist(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/updateShare.view",n.apiCheck("/updateShare.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.updateShare(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/updateUser.view",r.admin,n.apiCheck("/updateUser.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client};yield t.updateUser(i),yield s.ApiResponder.ok(e,r)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getAvatar.view",n.apiCheck("/getAvatar.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getAvatar(i);yield s.ApiResponder.binary(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getCaptions.view",n.apiCheck("/getCaptions.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getCaptions(i);yield s.ApiResponder.binary(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/getCoverArt.view",n.apiCheck("/getCoverArt.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.getCoverArt(i);yield s.ApiResponder.binary(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/hls.view",n.apiCheck("/hls.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.hls(i);yield s.ApiResponder.binary(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/stream.view",n.apiCheck("/stream.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.stream(i);yield s.ApiResponder.binary(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}})),e.all("/download.view",n.apiCheck("/download.view"),(e,r)=>i(this,void 0,void 0,function*(){try{const i={query:e.query,user:e.user,client:e.client},n=yield t.download(i);yield s.ApiResponder.binary(e,r,n)}catch(t){yield s.ApiResponder.error(e,r,t)}}))}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(39),s=r(19),n=r(15),a=r(163),o=r(164);t.apiCheck=function(e){return function(t,r,d){i.checkOpenApiParameters(e,t,o,a,"get").then(()=>{d()}).catch(e=>{s.ApiResponder.error(t,r,{fail:n.FORMAT.FAIL.PARAMETER,text:e.toString()})})}}},function(e){e.exports={type:"object",properties:{GET:{type:"object",properties:{"addChatMessage.view":{description:"Chat: Adds a message to the chat log.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ChatMessage"}},required:["params"]},"changePassword.view":{description:"User: Changes the password of an existing Subsonic user, using the following parameters. You can only change your own password unless you have admin privileges.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ChangePassword"}},required:["params"]},"createBookmark.view":{description:"Bookmarks: Creates or updates a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Bookmark"}},required:["params"]},"createPlaylist.view":{description:"Playlists: Creates (or updates) a playlist.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.PlaylistCreate"},result:{type:"object",properties:{playlist:{$ref:"#/definitions/Subsonic.PlaylistWithSongs"}},required:["playlist"]}},required:["params","result"]},"createPodcastChannel.view":{description:"Podcast: Adds a new Podcast channel.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.PodcastChannel"},roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["params","roles"]},"createShare.view":{description:"Sharing: Creates a public URL that can be used by anyone to stream music or video from the Subsonic server. The URL is short and suitable for posting on Facebook, Twitter etc.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Share"},roles:{type:"array",items:[{type:"string",enum:["share"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["share"]}]}}},required:["params","roles"]},"createUser.view":{description:"User: Creates a new Subsonic user.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.CreateUser"},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["params","roles"]},"deleteBookmark.view":{description:"Bookmarks: Deletes the bookmark for a given file.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"}},required:["params"]},"deleteInternetRadioStation.view":{description:"InternetRadio: Deletes an existing internet radio station.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["params","roles"]},"deletePlaylist.view":{description:"Playlists: Deletes a saved playlist.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"}},required:["params"]},"deletePodcastChannel.view":{description:"Podcast: Deletes a Podcast channel.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["params","roles"]},"deletePodcastEpisode.view":{description:"Podcast: Deletes a Podcast episode.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["params","roles"]},"deleteShare.view":{description:"Sharing: Deletes an existing share.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"}},required:["params"]},"deleteUser.view":{description:"User: Deletes an existing Subsonic user.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Username"},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["params","roles"]},"downloadPodcastEpisode.view":{description:"Podcast: Request the server to start downloading a given Podcast episode.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["params","roles"]},"getAlbum.view":{description:"Browsing: Returns details for an album, including a list of songs. This method organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},result:{type:"object",properties:{album:{$ref:"#/definitions/Subsonic.AlbumWithSongsID3"}},required:["album"]}},required:["params","result"]},"getAlbumInfo.view":{description:"Browsing: Returns album notes, image URLs etc, using data from last.fm.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},result:{type:"object",properties:{albumInfo:{$ref:"#/definitions/Subsonic.AlbumInfo"}},required:["albumInfo"]}},required:["params","result"]},"getAlbumInfo2.view":{description:"Browsing: Similar to getAlbumInfo, but organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},result:{type:"object",properties:{albumInfo:{$ref:"#/definitions/Subsonic.AlbumInfo"}},required:["albumInfo"]}},required:["params","result"]},"getAlbumList.view":{description:"Lists: Returns a list of random, newest, highest rated etc. albums. Similar to the album lists on the home page of the Subsonic web interface.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.AlbumList"},result:{type:"object",properties:{albumList:{$ref:"#/definitions/Subsonic.AlbumList"}},required:["albumList"]}},required:["params","result"]},"getAlbumList2.view":{description:"Lists: Similar to getAlbumList, but organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.AlbumList2"},result:{type:"object",properties:{albumList2:{$ref:"#/definitions/Subsonic.AlbumList2"}},required:["albumList2"]}},required:["params","result"]},"getArtist.view":{description:"Browsing: Returns details for an artist, including a list of albums. This method organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},result:{type:"object",properties:{artist:{$ref:"#/definitions/Subsonic.ArtistWithAlbumsID3"}},required:["artist"]}},required:["params","result"]},"getArtistInfo.view":{description:"Browsing: Returns artist info with biography, image URLs and similar artists, using data from last.fm.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ArtistInfo"},result:{type:"object",properties:{artistInfo:{$ref:"#/definitions/Subsonic.ArtistInfo"}},required:["artistInfo"]}},required:["params","result"]},"getArtistInfo2.view":{description:"Browsing: Similar to getArtistInfo, but organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ArtistInfo"},result:{type:"object",properties:{artistInfo2:{$ref:"#/definitions/Subsonic.ArtistInfo2"}},required:["artistInfo2"]}},required:["params","result"]},"getArtists.view":{description:"Browsing: Similar to getIndexes, but organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.MusicFolderID"},result:{type:"object",properties:{artists:{$ref:"#/definitions/Subsonic.ArtistsID3"}},required:["artists"]}},required:["params","result"]},"getBookmarks.view":{description:"Bookmarks: Returns all bookmarks for this user. A bookmark is a position within a certain media file.",type:"object",properties:{result:{type:"object",properties:{bookmarks:{$ref:"#/definitions/Subsonic.Bookmarks"}},required:["bookmarks"]}},required:["result"]},"getChatMessages.view":{description:"Chat: Returns the current visible (non-expired) chat messages.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ChatMessages"},result:{type:"object",properties:{chatMessages:{$ref:"#/definitions/Subsonic.ChatMessages"}},required:["chatMessages"]}},required:["params","result"]},"getGenres.view":{description:"Browsing: Returns all genres.",type:"object",properties:{result:{type:"object",properties:{genres:{$ref:"#/definitions/Subsonic.Genres"}},required:["genres"]}},required:["result"]},"getIndexes.view":{description:"Browsing: Returns an indexed structure of all artists.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Indexes"},result:{type:"object",properties:{indexes:{$ref:"#/definitions/Subsonic.Indexes"}},required:["indexes"]}},required:["params","result"]},"getInternetRadioStations.view":{description:"InternetRadio: Returns all internet radio stations.",type:"object",properties:{result:{type:"object",properties:{internetRadioStations:{$ref:"#/definitions/Subsonic.InternetRadioStations"}},required:["internetRadioStations"]}},required:["result"]},"createInternetRadioStation.view":{description:"InternetRadio: Adds a new internet radio station.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.InternetRadioCreate"},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["params","roles"]},"updateInternetRadioStation.view":{description:"InternetRadio: Updates an existing internet radio station.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.InternetRadioUpdate"},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["params","roles"]},"getLicense.view":{description:"System: Get details about the software license.",type:"object",properties:{result:{type:"object",properties:{license:{$ref:"#/definitions/Subsonic.License"}},required:["license"]}},required:["result"]},"getLyrics.view":{description:"MediaRetrieval: Searches for and returns lyrics for a given song.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Lyrics"},result:{type:"object",properties:{lyrics:{$ref:"#/definitions/Subsonic.Lyrics"}},required:["lyrics"]}},required:["params","result"]},"getMusicDirectory.view":{description:"Browsing: Returns a listing of all files in a music directory. Typically used to get list of albums for an artist, or list of songs for an album.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},result:{type:"object",properties:{directory:{$ref:"#/definitions/Subsonic.Directory"}},required:["directory"]}},required:["params","result"]},"getMusicFolders.view":{description:"Browsing: Returns all configured top-level music folders.",type:"object",properties:{result:{type:"object",properties:{musicFolders:{$ref:"#/definitions/Subsonic.MusicFolders"}},required:["musicFolders"]}},required:["result"]},"getNewestPodcasts.view":{description:"Podcast: Returns the most recently published Podcast episodes.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.PodcastEpisodesNewest"},result:{type:"object",properties:{newestPodcasts:{$ref:"#/definitions/Subsonic.NewestPodcasts"}},required:["newestPodcasts"]}},required:["params","result"]},"getNowPlaying.view":{description:"Lists: Returns what is currently being played by all users.",type:"object",properties:{result:{type:"object",properties:{nowPlaying:{$ref:"#/definitions/Subsonic.NowPlaying"}},required:["nowPlaying"]}},required:["result"]},"getPlaylist.view":{description:"Playlists: Returns a listing of files in a saved playlist.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},result:{type:"object",properties:{playlist:{$ref:"#/definitions/Subsonic.PlaylistWithSongs"}},required:["playlist"]}},required:["params","result"]},"getPlaylists.view":{description:"Playlists: Returns all playlists a user is allowed to play.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Playlists"},result:{type:"object",properties:{playlists:{$ref:"#/definitions/Subsonic.Playlists"}},required:["playlists"]}},required:["params","result"]},"getPlayQueue.view":{description:"Bookmarks: Returns the state of the play queue for this user (as set by savePlayQueue). This includes the tracks in the play queue, the currently playing track, and the position within this track. Typically used to allow a user to move between different clients/apps while retaining the same play queue (for instance when listening to an audio book).",type:"object",properties:{result:{type:"object",properties:{playQueue:{$ref:"#/definitions/Subsonic.PlayQueue"}},required:["playQueue"]}},required:["result"]},"getPodcasts.view":{description:"Podcast: Returns all Podcast channels the server subscribes to, and (optionally) their episodes. This method can also be used to return details for only one channel - refer to the id parameter. A typical use case for this method would be to first retrieve all channels without episodes, and then retrieve all episodes for the single channel the user selects.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.PodcastChannels"},result:{type:"object",properties:{podcasts:{$ref:"#/definitions/Subsonic.Podcasts"}},required:["podcasts"]}},required:["params","result"]},"getRandomSongs.view":{description:"Lists: Returns random songs matching the given criteria.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.RandomSong"},result:{type:"object",properties:{randomSongs:{$ref:"#/definitions/Subsonic.Songs"}},required:["randomSongs"]}},required:["params","result"]},"getScanStatus.view":{description:"Library: Returns the current status for media library scanning.",type:"object",properties:{result:{type:"object",properties:{scanStatus:{$ref:"#/definitions/Subsonic.ScanStatus"}},required:["scanStatus"]}},required:["result"]},"startScan.view":{description:"Library: Initiates a rescan of the media libraries.",type:"object",properties:{}},"getShares.view":{description:"Sharing: Returns information about shared media this user is allowed to manage.",type:"object",properties:{result:{type:"object",properties:{shares:{$ref:"#/definitions/Subsonic.Shares"}},required:["shares"]}},required:["result"]},"getSimilarSongs.view":{description:"Browsing: Returns a random collection of songs from the given artist and similar artists, using data from last.fm. Typically used for artist radio features.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.SimilarSongs"},result:{type:"object",properties:{similarSongs:{$ref:"#/definitions/Subsonic.SimilarSongs"}},required:["similarSongs"]}},required:["params","result"]},"getSimilarSongs2.view":{description:"Browsing: Similar to getSimilarSongs, but organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.SimilarSongs"},result:{type:"object",properties:{similarSongs2:{$ref:"#/definitions/Subsonic.SimilarSongs2"}},required:["similarSongs2"]}},required:["params","result"]},"getSong.view":{description:"Browsing: Returns details for a song.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},result:{type:"object",properties:{song:{$ref:"#/definitions/Subsonic.Child"}},required:["song"]}},required:["params","result"]},"getSongsByGenre.view":{description:"Lists: Returns songs in a given genre.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.SongsByGenre"},result:{type:"object",properties:{songsByGenre:{$ref:"#/definitions/Subsonic.Songs"}},required:["songsByGenre"]}},required:["params","result"]},"getStarred.view":{description:"Lists: Returns starred songs, albums and artists.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.MusicFolderID"},result:{type:"object",properties:{starred:{$ref:"#/definitions/Subsonic.Starred"}},required:["starred"]}},required:["params","result"]},"getStarred2.view":{description:"Lists: Similar to getStarred, but organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.MusicFolderID"},result:{type:"object",properties:{starred2:{$ref:"#/definitions/Subsonic.Starred2"}},required:["starred2"]}},required:["params","result"]},"getTopSongs.view":{description:"Browsing: Returns top songs for the given artist, using data from last.fm.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.TopSongs"},result:{type:"object",properties:{topSongs:{$ref:"#/definitions/Subsonic.TopSongs"}},required:["topSongs"]}},required:["params","result"]},"getUser.view":{description:"User: Get details about a given user, including which authorization roles and folder access it has. Can be used to enable/disable certain features in the client, such as jukebox control.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Username"},result:{type:"object",properties:{user:{$ref:"#/definitions/Subsonic.User"}},required:["user"]}},required:["params","result"]},"getUsers.view":{description:"User: Get details about all users, including which authorization roles and folder access they have.",type:"object",properties:{result:{type:"object",properties:{users:{$ref:"#/definitions/Subsonic.Users"}},required:["users"]},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["result","roles"]},"getVideoInfo.view":{description:"Browsing: Returns details for a video, including information about available audio tracks, subtitles (captions) and conversions.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.ID"},result:{type:"object",properties:{videoInfo:{$ref:"#/definitions/Subsonic.VideoInfo"}},required:["videoInfo"]}},required:["params","result"]},"getVideos.view":{description:"Browsing: Returns all video files.",type:"object",properties:{result:{type:"object",properties:{videos:{$ref:"#/definitions/Subsonic.Videos"}},required:["videos"]}},required:["result"]},"jukeboxControl.view":{description:"Jukebox: Controls the jukebox, i.e., playback directly on the server's audio hardware. Note: The user must be authorized to control the jukebox.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Jukebox"},result:{type:"object",properties:{jukeboxStatus:{$ref:"#/definitions/Subsonic.JukeboxStatus"}},required:["jukeboxStatus"]},roles:{type:"array",items:[{type:"string",enum:["jukebox"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["jukebox"]}]}}},required:["params","result","roles"]},"ping.view":{description:"System: Used to test connectivity with the server.",type:"object",properties:{}},"refreshPodcasts.view":{description:"Podcast: Requests the server to check for new Podcast episodes.",type:"object",properties:{roles:{type:"array",items:[{type:"string",enum:["podcast"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["podcast"]}]}}},required:["roles"]},"savePlayQueue.view":{description:"Bookmarks: Saves the state of the play queue for this user. This includes the tracks in the play queue, the currently playing track, and the position within this track. Typically used to allow a user to move between different clients/apps while retaining the same play queue (for instance when listening to an audio book).",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.PlayQueue"}},required:["params"]},"scrobble.view":{description:"Annotation: Registers the local playback of one or more media files. Typically used when playing media that is cached on the client.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Scrobble"}},required:["params"]},"search.view":{description:"Searching: Returns a listing of files matching the given search criteria. Supports paging through the result.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Search"},result:{type:"object",properties:{searchResult:{$ref:"#/definitions/Subsonic.SearchResult"}},required:["searchResult"]},deprecated:{type:"boolean",enum:[!0]}},required:["deprecated","params","result"]},"search2.view":{description:"Searching: Returns albums, artists and songs matching the given search criteria. Supports paging through the result.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Search2"},result:{type:"object",properties:{searchResult2:{$ref:"#/definitions/Subsonic.SearchResult2"}},required:["searchResult2"]}},required:["params","result"]},"search3.view":{description:"Searching: Similar to search2, but organizes music according to ID3 tags.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Search2"},result:{type:"object",properties:{searchResult3:{$ref:"#/definitions/Subsonic.SearchResult3"}},required:["searchResult3"]}},required:["params","result"]},"setRating.view":{description:"Annotation: Sets the rating for a music file.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Rate"}},required:["params"]},"star.view":{description:"Annotation: Attaches a star to a song, album or artist.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.State"}},required:["params"]},"unstar.view":{description:"Annotation: Removes the star from a song, album or artist.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.State"}},required:["params"]},"updatePlaylist.view":{description:"Playlists: Updates a playlist. Only the owner of a playlist is allowed to update it.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.PlaylistUpdate"}},required:["params"]},"updateShare.view":{description:"Sharing: Updates the description and/or expiration date for an existing share.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Share"}},required:["params"]},"updateUser.view":{description:"User: Modifies an existing Subsonic user.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.UpdateUser"},roles:{type:"array",items:[{type:"string",enum:["admin"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["admin"]}]}}},required:["params","roles"]},"getAvatar.view":{description:"MediaRetrieval: Returns the avatar (personal image) for a user.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Username"},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","params"]},"getCaptions.view":{description:"MediaRetrieval: Returns captions (subtitles) for a video. Use getVideoInfo to get a list of available captions.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Captions"},binary:{type:"array",items:[{type:"string",enum:["text/plain"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["text/plain"]}]}}},required:["binary","params"]},"getCoverArt.view":{description:"MediaRetrieval: Returns a cover art image.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.CoverArt"},binary:{type:"array",items:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}],minItems:2,additionalItems:{anyOf:[{type:"string",enum:["image/jpeg"]},{type:"string",enum:["image/png"]}]}}},required:["binary","params"]},"hls.view":{description:"MediaRetrieval: Creates an HLS (HTTP Live Streaming) playlist used for streaming video or audio. HLS is a streaming protocol implemented by Apple and works by breaking the overall stream into a sequence of small HTTP-based file downloads. It's supported by iOS and newer versions of Android. This method also supports adaptive bitrate streaming, see the bitRate parameter.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.HLS"},binary:{type:"array",items:[{type:"string",enum:["application/vnd.apple.mpegurl"]}],minItems:1,additionalItems:{anyOf:[{type:"string",enum:["application/vnd.apple.mpegurl"]}]}}},required:["binary","params"]},"stream.view":{description:"MediaRetrieval: Streams a given media file.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Stream"},binary:{type:"array",items:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}],minItems:5,additionalItems:{anyOf:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}]}}},required:["binary","params"]},"download.view":{description:"MediaRetrieval: Downloads a given media file. Similar to stream, but this method returns the original media data without transcoding or downsampling.",type:"object",properties:{params:{$ref:"#/definitions/SubsonicParameters.Download"},binary:{type:"array",items:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}],minItems:5,additionalItems:{anyOf:[{type:"string",enum:["audio/mpeg"]},{type:"string",enum:["audio/flac"]},{type:"string",enum:["audio/mp4"]},{type:"string",enum:["audio/ogg"]},{type:"string",enum:["audio/x-flv"]}]}}},required:["binary","params"]}}}},required:["GET"],definitions:{"SubsonicParameters.ChatMessage":{type:"object",properties:{message:{description:"The chat message.",type:"string"}},required:["message"]},"SubsonicParameters.ChangePassword":{type:"object",properties:{username:{description:"The name of the user which should change its password.",type:"string"},password:{description:"The new password of the new user, either in clear text of hex-encoded.",type:"string"}},required:["password","username"]},"SubsonicParameters.Bookmark":{type:"object",properties:{id:{description:"ID of the media file to bookmark. If a bookmark already exists for this file it will be overwritten.",type:"string"},position:{description:"The position (in milliseconds) within the media file.",type:"integer",minimum:0},comment:{description:"A user-defined comment.",type:"string"}},required:["id","position"]},"SubsonicParameters.PlaylistCreate":{type:"object",properties:{playlistId:{description:"The playlist ID. (if updating)",type:"string"},name:{description:"The human-readable name of the playlist.",type:"string"},songId:{description:"ID of a song in the playlist. Use one songId parameter for each song in the playlist.",anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]}}},"Subsonic.PlaylistWithSongs":{type:"object",properties:{entry:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},allowedUser:{type:"array",items:{type:"string"}},id:{type:"string"},name:{type:"string"},comment:{type:"string"},owner:{type:"string"},public:{type:"boolean"},songCount:{type:"number"},duration:{type:"number"},created:{type:"string"},changed:{type:"string"},coverArt:{type:"string"}},required:["changed","created","duration","id","name","songCount"]},"Subsonic.Child":{type:"object",properties:{id:{type:"string"},parent:{type:"string"},isDir:{type:"boolean"},title:{type:"string"},album:{type:"string"},artist:{type:"string"},track:{type:"number"},year:{type:"number"},genre:{type:"string"},coverArt:{type:"string"},size:{type:"number"},contentType:{type:"string"},suffix:{type:"string"},transcodedContentType:{type:"string"},transcodedSuffix:{type:"string"},duration:{type:"number"},bitRate:{type:"number"},path:{type:"string"},isVideo:{type:"boolean"},userRating:{type:"number"},averageRating:{type:"number"},playCount:{type:"number"},discNumber:{type:"number"},created:{type:"string"},starred:{type:"string"},albumId:{type:"string"},artistId:{type:"string"},type:{enum:["audiobook","music","podcast","video"],type:"string"},bookmarkPosition:{type:"number"},originalWidth:{type:"number"},originalHeight:{type:"number"}},required:["id","isDir","title"]},"SubsonicParameters.PodcastChannel":{type:"object",properties:{url:{description:"The URL of the Podcast to add.",type:"string"}},required:["url"]},"SubsonicParameters.Share":{type:"object",properties:{id:{description:"ID of a song, album or video to share. Use one id parameter for each entry to share.",type:"string"},description:{description:"A user-defined description that will be displayed to people visiting the shared media.",type:"string"},expires:{description:"The time at which the share expires. Given as milliseconds since 1970.",type:"integer",minimum:0}},required:["id"]},"SubsonicParameters.CreateUser":{type:"object",properties:{username:{description:"The name of the new user.",type:"string"},password:{description:"The password of the new user, either in clear text of hex-encoded (see above).",type:"string"},email:{description:"The email address of the new user.",type:"string"},ldapAuthenticated:{description:"Whether the user is authenicated in LDAP.",default:!1,type:"boolean"},adminRole:{description:"Whether the user is administrator.",default:!1,type:"boolean"},settingsRole:{description:"Whether the user is allowed to change personal settings and password.",default:!0,type:"boolean"},streamRole:{description:"Whether the user is allowed to play files.",default:!0,type:"boolean"},jukeboxRole:{description:"Whether the user is allowed to play files in jukebox mode.",default:!1,type:"boolean"},downloadRole:{description:"Whether the user is allowed to download files.",default:!1,type:"boolean"},uploadRole:{description:"Whether the user is allowed to upload files.",default:!1,type:"boolean"},coverArtRole:{description:"Whether the user is allowed to change cover art and tags.",default:!1,type:"boolean"},commentRole:{description:"Whether the user is allowed to create and edit comments and ratings.",default:!1,type:"boolean"},podcastRole:{description:"Whether the user is allowed to administrate Podcasts.",default:!1,type:"boolean"},playlistRole:{description:"Whether the user is allowed to create and delete playlists.",default:!1,type:"boolean"},shareRole:{description:"Whether the user is allowed to share files with anyone.",default:!1,type:"boolean"},videoConversionRole:{description:"Whether the user is allowed to start video conversions.",default:!1,type:"boolean"},musicFolderId:{description:"IDs of the music folders the user is allowed access to. Include the parameter once for each folder.",anyOf:[{type:"array",items:{type:"number"}},{type:"number"}]}},required:["username"]},"SubsonicParameters.ID":{type:"object",properties:{id:{description:"The item ID",type:"string"}},required:["id"]},"SubsonicParameters.Username":{type:"object",properties:{username:{description:"The name of the user to retrieve. You can only retrieve your own user unless you have admin privileges.",type:"string"}},required:["username"]},"Subsonic.AlbumWithSongsID3":{type:"object",properties:{song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},id:{type:"string"},name:{type:"string"},artist:{type:"string"},artistId:{type:"string"},coverArt:{type:"string"},songCount:{type:"number"},duration:{type:"number"},playCount:{type:"number"},created:{type:"string"},starred:{type:"string"},year:{type:"number"},genre:{type:"string"}},required:["created","duration","id","name","songCount"]},"Subsonic.AlbumInfo":{type:"object",properties:{notes:{type:"string"},musicBrainzId:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"SubsonicParameters.AlbumList":{type:"object",properties:{type:{$ref:"#/definitions/SubsonicParameters.AlbumListType",description:"The list type. Must be one of the following: random, newest, frequent, recent, starred, alphabeticalByName or alphabeticalByArtist. Since 1.10.1 you can use byYear and byGenre to list albums in a given year range or genre."},size:{description:"The number of albums to return. Max 500.",type:"integer",maximum:500,default:10},offset:{description:"The list offset. Useful if you for example want to page through the list of newest albums.",type:"integer",default:0},genre:{description:'The name of the genre, e.g., "Rock".',type:"string"},fromYear:{description:"The first year in the range. If fromYear > toYear a reverse chronological list is returned.",type:"number"},toYear:{description:"The last year in the range.",type:"integer",minimum:0}},required:["type"]},"SubsonicParameters.AlbumListType":{enum:["alphabeticalByArtist","alphabeticalByName","byGenre","byYear","frequent","highest","newest","random","recent","starred"],type:"string"},"Subsonic.AlbumList":{type:"object",properties:{album:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"SubsonicParameters.AlbumList2":{type:"object",properties:{type:{$ref:"#/definitions/SubsonicParameters.AlbumListType",description:"The list type. Must be one of the following: random, newest, frequent, recent, starred, alphabeticalByName or alphabeticalByArtist. Since 1.10.1 you can use byYear and byGenre to list albums in a given year range or genre."},size:{description:"The number of albums to return. Max 500.",type:"integer",maximum:500,default:10},offset:{description:"The list offset. Useful if you for example want to page through the list of newest albums.",type:"integer",default:0},genre:{description:'The name of the genre, e.g., "Rock".',type:"string"},fromYear:{description:"The first year in the range. If fromYear > toYear a reverse chronological list is returned.",type:"number"},toYear:{description:"The last year in the range.",type:"integer",minimum:0},musicFolderId:{description:"Only return albums in the music folder with the given ID. See getMusicFolders.",type:"number"}},required:["type"]},"Subsonic.AlbumList2":{type:"object",properties:{album:{type:"array",items:{$ref:"#/definitions/Subsonic.AlbumID3"}}}},"Subsonic.AlbumID3":{type:"object",properties:{id:{type:"string"},name:{type:"string"},artist:{type:"string"},artistId:{type:"string"},coverArt:{type:"string"},songCount:{type:"number"},duration:{type:"number"},playCount:{type:"number"},created:{type:"string"},starred:{type:"string"},year:{type:"number"},genre:{type:"string"}},required:["created","duration","id","name","songCount"]},"Subsonic.ArtistWithAlbumsID3":{type:"object",properties:{album:{type:"array",items:{$ref:"#/definitions/Subsonic.AlbumID3"}},id:{type:"string"},name:{type:"string"},coverArt:{type:"string"},albumCount:{type:"number"},starred:{type:"string"}},required:["albumCount","id","name"]},"SubsonicParameters.ArtistInfo":{type:"object",properties:{id:{description:"The artist, album or song ID.",type:"string"},count:{description:"Max number of similar artists to return.",type:"integer",default:20,minimum:1},includeNotPresent:{description:"Whether to return artists that are not present in the media library.",default:!1,type:"boolean"}},required:["id"]},"Subsonic.ArtistInfo":{type:"object",properties:{similarArtist:{type:"array",items:{$ref:"#/definitions/Subsonic.Artist"}},biography:{type:"string"},musicBrainzId:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Subsonic.Artist":{type:"object",properties:{id:{type:"string"},name:{type:"string"},starred:{type:"string"},userRating:{type:"number"},averageRating:{type:"number"}},required:["id","name"]},"Subsonic.ArtistInfo2":{type:"object",properties:{similarArtist:{type:"array",items:{$ref:"#/definitions/Subsonic.ArtistID3"}},biography:{type:"string"},musicBrainzId:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Subsonic.ArtistID3":{type:"object",properties:{id:{type:"string"},name:{type:"string"},coverArt:{type:"string"},albumCount:{type:"number"},starred:{type:"string"}},required:["albumCount","id","name"]},"SubsonicParameters.MusicFolderID":{type:"object",properties:{musicFolderId:{description:"Only return results from the music folder with the given ID. See getMusicFolders",type:"number"}}},"Subsonic.ArtistsID3":{type:"object",properties:{index:{type:"array",items:{$ref:"#/definitions/Subsonic.IndexID3"}},ignoredArticles:{type:"string"}},required:["ignoredArticles"]},"Subsonic.IndexID3":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/definitions/Subsonic.ArtistID3"}},name:{type:"string"}},required:["name"]},"Subsonic.Bookmarks":{type:"object",properties:{bookmark:{type:"array",items:{$ref:"#/definitions/Subsonic.Bookmark"}}}},"Subsonic.Bookmark":{type:"object",properties:{entry:{$ref:"#/definitions/Subsonic.Child"},position:{type:"number"},username:{type:"string"},comment:{type:"string"},created:{type:"string"},changed:{type:"string"}},required:["changed","created","entry","position","username"]},"SubsonicParameters.ChatMessages":{type:"object",properties:{since:{description:"Only return messages newer than this time (in millis since Jan 1 1970).",type:"number"}}},"Subsonic.ChatMessages":{type:"object",properties:{chatMessage:{type:"array",items:{$ref:"#/definitions/Subsonic.ChatMessage"}}}},"Subsonic.ChatMessage":{type:"object",properties:{username:{type:"string"},time:{type:"number"},message:{type:"string"}},required:["message","time","username"]},"Subsonic.Genres":{type:"object",properties:{genre:{type:"array",items:{$ref:"#/definitions/Subsonic.Genre"}}}},"Subsonic.Genre":{type:"object",properties:{content:{type:"string"},songCount:{type:"number"},albumCount:{type:"number"},artistCount:{type:"number"}},required:["albumCount","artistCount","content","songCount"]},"SubsonicParameters.Indexes":{type:"object",properties:{musicFolderId:{description:"Only return results from the music folder with the given ID. See getMusicFolders",type:"number"},ifModifiedSince:{description:"If specified, only return a result if the artist collection has changed since the given time (in milliseconds since 1 Jan 1970).",type:"integer",minimum:0}}},"Subsonic.Indexes":{type:"object",properties:{shortcut:{type:"array",items:{$ref:"#/definitions/Subsonic.Artist"}},index:{type:"array",items:{$ref:"#/definitions/Subsonic.Index"}},child:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},lastModified:{type:"number"},ignoredArticles:{type:"string"}},required:["ignoredArticles","lastModified"]},"Subsonic.Index":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/definitions/Subsonic.Artist"}},name:{type:"string"}},required:["name"]},"Subsonic.InternetRadioStations":{type:"object",properties:{internetRadioStation:{type:"array",items:{$ref:"#/definitions/Subsonic.InternetRadioStation"}}}},"Subsonic.InternetRadioStation":{type:"object",properties:{id:{type:"string"},name:{type:"string"},streamUrl:{type:"string"},homePageUrl:{type:"string"}},required:["id","name","streamUrl"]},"SubsonicParameters.InternetRadioCreate":{type:"object",properties:{streamUrl:{description:"The stream URL for the station.",type:"string"},name:{description:"The user-defined name for the station.",type:"string"},homepageUrl:{description:"The home page URL for the station.",type:"string"}},required:["name","streamUrl"]},"SubsonicParameters.InternetRadioUpdate":{type:"object",properties:{id:{description:"The ID for the station.",type:"string"},streamUrl:{description:"The stream URL for the station.",type:"string"},name:{description:"The user-defined name for the station.",type:"string"},homepageUrl:{description:"The home page URL for the station.",type:"string"}},required:["id","name","streamUrl"]},"Subsonic.License":{type:"object",properties:{valid:{type:"boolean"},email:{type:"string"},licenseExpires:{type:"string"},trialExpires:{type:"string"}},required:["valid"]},"SubsonicParameters.Lyrics":{type:"object",properties:{artist:{description:"The artist name.",type:"string"},title:{description:"The song title.",type:"string"}}},"Subsonic.Lyrics":{type:"object",properties:{content:{type:"string"},artist:{type:"string"},title:{type:"string"}},required:["content"]},"Subsonic.Directory":{type:"object",properties:{child:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},id:{type:"string"},parent:{type:"string"},name:{type:"string"},starred:{type:"string"},userRating:{type:"number"},averageRating:{type:"number"},playCount:{type:"number"}},required:["id","name"]},"Subsonic.MusicFolders":{type:"object",properties:{musicFolder:{type:"array",items:{$ref:"#/definitions/Subsonic.MusicFolder"}}}},"Subsonic.MusicFolder":{type:"object",properties:{id:{type:"number"},name:{type:"string"}},required:["id"]},"SubsonicParameters.PodcastEpisodesNewest":{type:"object",properties:{count:{description:"The maximum number of episodes to return.",type:"integer",default:20,minimum:0}}},"Subsonic.NewestPodcasts":{type:"object",properties:{episode:{type:"array",items:{$ref:"#/definitions/Subsonic.PodcastEpisode"}}}},"Subsonic.PodcastEpisode":{type:"object",properties:{streamId:{type:"string"},channelId:{type:"string"},description:{type:"string"},status:{$ref:"#/definitions/Subsonic.PodcastStatus"},publishDate:{type:"string"},id:{type:"string"},parent:{type:"string"},isDir:{type:"boolean"},title:{type:"string"},album:{type:"string"},artist:{type:"string"},track:{type:"number"},year:{type:"number"},genre:{type:"string"},coverArt:{type:"string"},size:{type:"number"},contentType:{type:"string"},suffix:{type:"string"},transcodedContentType:{type:"string"},transcodedSuffix:{type:"string"},duration:{type:"number"},bitRate:{type:"number"},path:{type:"string"},isVideo:{type:"boolean"},userRating:{type:"number"},averageRating:{type:"number"},playCount:{type:"number"},discNumber:{type:"number"},created:{type:"string"},starred:{type:"string"},albumId:{type:"string"},artistId:{type:"string"},type:{enum:["audiobook","music","podcast","video"],type:"string"},bookmarkPosition:{type:"number"},originalWidth:{type:"number"},originalHeight:{type:"number"}},required:["channelId","id","isDir","status","title"]},"Subsonic.PodcastStatus":{enum:["completed","deleted","downloading","error","new","skipped"],type:"string"},"Subsonic.NowPlaying":{type:"object",properties:{entry:{type:"array",items:{$ref:"#/definitions/Subsonic.NowPlayingEntry"}}}},"Subsonic.NowPlayingEntry":{type:"object",properties:{username:{type:"string"},minutesAgo:{type:"number"},playerId:{type:"number"},playerName:{type:"string"},id:{type:"string"},parent:{type:"string"},isDir:{type:"boolean"},title:{type:"string"},album:{type:"string"},artist:{type:"string"},track:{type:"number"},year:{type:"number"},genre:{type:"string"},coverArt:{type:"string"},size:{type:"number"},contentType:{type:"string"},suffix:{type:"string"},transcodedContentType:{type:"string"},transcodedSuffix:{type:"string"},duration:{type:"number"},bitRate:{type:"number"},path:{type:"string"},isVideo:{type:"boolean"},userRating:{type:"number"},averageRating:{type:"number"},playCount:{type:"number"},discNumber:{type:"number"},created:{type:"string"},starred:{type:"string"},albumId:{type:"string"},artistId:{type:"string"},type:{enum:["audiobook","music","podcast","video"],type:"string"},bookmarkPosition:{type:"number"},originalWidth:{type:"number"},originalHeight:{type:"number"}},required:["id","isDir","minutesAgo","playerId","title","username"]},"SubsonicParameters.Playlists":{type:"object",properties:{username:{description:"If specified, return playlists for this user rather than for the authenticated user. The authenticated user must have admin role if this parameter is used.",type:"string"}}},"Subsonic.Playlists":{type:"object",properties:{playlist:{type:"array",items:{$ref:"#/definitions/Subsonic.Playlist"}}}},"Subsonic.Playlist":{type:"object",properties:{allowedUser:{type:"array",items:{type:"string"}},id:{type:"string"},name:{type:"string"},comment:{type:"string"},owner:{type:"string"},public:{type:"boolean"},songCount:{type:"number"},duration:{type:"number"},created:{type:"string"},changed:{type:"string"},coverArt:{type:"string"}},required:["changed","created","duration","id","name","songCount"]},"Subsonic.PlayQueue":{type:"object",properties:{entry:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},current:{type:"number"},position:{type:"number"},username:{type:"string"},changed:{type:"string"},changedBy:{type:"string"}},required:["changed","changedBy","username"]},"SubsonicParameters.PodcastChannels":{type:"object",properties:{id:{description:"If specified, only return the Podcast channel with this ID.",type:"string"},includeEpisodes:{description:"Whether to include Podcast episodes in the returned result.",default:!0,type:"boolean"}}},"Subsonic.Podcasts":{type:"object",properties:{channel:{type:"array",items:{$ref:"#/definitions/Subsonic.PodcastChannel"}}}},"Subsonic.PodcastChannel":{type:"object",properties:{episode:{type:"array",items:{$ref:"#/definitions/Subsonic.PodcastEpisode"}},id:{type:"string"},url:{type:"string"},title:{type:"string"},description:{type:"string"},coverArt:{type:"string"},originalImageUrl:{type:"string"},status:{$ref:"#/definitions/Subsonic.PodcastStatus"},errorMessage:{type:"string"}},required:["id","status","url"]},"SubsonicParameters.RandomSong":{type:"object",properties:{size:{description:"The maximum number of songs to return. Max 500.",type:"integer",default:10,minimum:1,maximum:500},musicFolderId:{description:"Only return songs in the music folder with the given ID. See getMusicFolders.",type:"number"},genre:{description:"Only returns songs belonging to this genre.",type:"string"},fromYear:{description:"Only return songs published after or in this year.",type:"integer"},toYear:{description:"Only return songs published before or in this year.",type:"integer"}}},"Subsonic.Songs":{type:"object",properties:{song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"Subsonic.ScanStatus":{type:"object",properties:{scanning:{type:"boolean"},count:{type:"number"}},required:["scanning"]},"Subsonic.Shares":{type:"object",properties:{share:{type:"array",items:{$ref:"#/definitions/Subsonic.Share"}}}},"Subsonic.Share":{type:"object",properties:{entry:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},id:{type:"string"},url:{type:"string"},description:{type:"string"},username:{type:"string"},created:{type:"string"},expires:{type:"string"},lastVisited:{type:"string"},visitCount:{type:"number"}},required:["created","id","url","username","visitCount"]},"SubsonicParameters.SimilarSongs":{type:"object",properties:{id:{description:"The artist, album or song ID.",type:"string"},count:{description:"Max number of songs to return.",type:"integer",default:50,minimum:1}},required:["id"]},"Subsonic.SimilarSongs":{type:"object",properties:{song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"Subsonic.SimilarSongs2":{type:"object",properties:{song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"SubsonicParameters.SongsByGenre":{type:"object",properties:{genre:{description:"The genre, as returned by getGenres.",type:"string"},count:{description:"The maximum number of songs to return. Max 500.",type:"integer",default:10,maximum:500,minimum:1},offset:{description:"The offset. Useful if you want to page through the songs in a genre.",type:"integer",default:0,minimum:0},musicFolderId:{description:"Only return albums in the music folder with the given ID. See getMusicFolders",type:"number"}},required:["genre"]},"Subsonic.Starred":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/definitions/Subsonic.Artist"}},album:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"Subsonic.Starred2":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/definitions/Subsonic.ArtistID3"}},album:{type:"array",items:{$ref:"#/definitions/Subsonic.AlbumID3"}},song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"SubsonicParameters.TopSongs":{type:"object",properties:{artist:{description:"The artist name.",type:"string"},count:{description:"Max number of songs to return.",type:"integer",default:50,minimum:1}},required:["artist"]},"Subsonic.TopSongs":{type:"object",properties:{song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"Subsonic.User":{type:"object",properties:{folder:{type:"array",items:{type:"number"}},username:{type:"string"},email:{type:"string"},scrobblingEnabled:{type:"boolean"},maxBitRate:{type:"number"},adminRole:{type:"boolean"},settingsRole:{type:"boolean"},downloadRole:{type:"boolean"},uploadRole:{type:"boolean"},playlistRole:{type:"boolean"},coverArtRole:{type:"boolean"},commentRole:{type:"boolean"},podcastRole:{type:"boolean"},streamRole:{type:"boolean"},jukeboxRole:{type:"boolean"},shareRole:{type:"boolean"},videoConversionRole:{type:"boolean"},avatarLastChanged:{type:"string"}},required:["adminRole","commentRole","coverArtRole","downloadRole","jukeboxRole","playlistRole","podcastRole","scrobblingEnabled","settingsRole","shareRole","streamRole","uploadRole","username","videoConversionRole"]},"Subsonic.Users":{type:"object",properties:{user:{type:"array",items:{$ref:"#/definitions/Subsonic.User"}}}},"Subsonic.VideoInfo":{type:"object",properties:{captions:{type:"array",items:{$ref:"#/definitions/Subsonic.Captions"}},audioTrack:{type:"array",items:{$ref:"#/definitions/Subsonic.AudioTrack"}},conversion:{type:"array",items:{$ref:"#/definitions/Subsonic.VideoConversion"}},id:{type:"string"}},required:["id"]},"Subsonic.Captions":{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]},"Subsonic.AudioTrack":{type:"object",properties:{id:{type:"string"},name:{type:"string"},languageCode:{type:"string"}},required:["id"]},"Subsonic.VideoConversion":{type:"object",properties:{id:{type:"string"},bitRate:{type:"number"},audioTrackId:{type:"number"}},required:["id"]},"Subsonic.Videos":{type:"object",properties:{video:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"SubsonicParameters.Jukebox":{type:"object",properties:{action:{$ref:"#/definitions/SubsonicParameters.JukeboxAction",description:"The operation to perform."},index:{description:"Used by skip and remove. Zero-based index of the song to skip to or remove.",type:"integer",minimum:0},offset:{description:"Used by skip. Start playing this many seconds into the track.",type:"integer",default:0,minimum:0},id:{description:"Used by add and set. ID of song to add to the jukebox playlist. Use multiple id parameters to add many songs in the same request. (set is similar to a clear followed by a add, but will not change the currently playing track.)",type:"string"},gain:{description:"Used by setGain to control the playback volume. A float value between 0.0 and 1.0.",type:"number",minimum:0,maximum:1}},required:["action"]},"SubsonicParameters.JukeboxAction":{enum:["add","clear","get","remove","set","setGain","shuffle","skip","start","status","stop"],type:"string"},"Subsonic.JukeboxStatus":{type:"object",properties:{currentIndex:{type:"number"},playing:{type:"boolean"},gain:{type:"number"},position:{type:"number"}},required:["currentIndex","gain","playing"]},"SubsonicParameters.PlayQueue":{type:"object",properties:{id:{description:"ID of a song in the play queue. Use one id parameter for each song in the play queue.",anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},current:{description:"The ID of the current playing song.",type:"string"},position:{description:"The position in milliseconds within the currently playing song.",type:"integer",minimum:0}},required:["id"]},"SubsonicParameters.Scrobble":{type:"object",properties:{id:{description:"A string which uniquely identifies the file to scrobble.",type:"string"},time:{description:"The time (in milliseconds since 1 Jan 1970) at which the song was listened to.",type:"integer",minimum:0},submission:{description:'Whether this is a "submission" or a "now playing" notification.',type:"boolean"}},required:["id"]},"SubsonicParameters.Search":{type:"object",properties:{any:{description:"Searches all fields.",type:"string"},artist:{description:"Artist to search for.",type:"string"},album:{description:"Album to search for.",type:"string"},title:{description:"Song title to search for.",type:"string"},count:{description:"Maximum number of results to return.",type:"integer",default:20,minimum:1},offset:{description:"Search result offset. Used for paging.",type:"integer",minimum:0,default:0},newerThan:{description:"Only return matches that are newer than this. Given as milliseconds since 1970.",type:"number"}}},"Subsonic.SearchResult":{type:"object",properties:{match:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},offset:{type:"number"},totalHits:{type:"number"}},required:["offset","totalHits"]},"SubsonicParameters.Search2":{type:"object",properties:{query:{description:"Search query.",type:"string"},artistCount:{description:"Maximum number of artists to return.",type:"integer",minimum:1,default:20},artistOffset:{description:"Search result offset for artists. Used for paging.",type:"integer",minimum:0,default:0},albumCount:{description:"Maximum number of albums to return.",type:"integer",minimum:1,default:20},albumOffset:{description:"Search result offset for albums. Used for paging.",type:"integer",minimum:0,default:0},songCount:{description:"Maximum number of songs to return.",type:"integer",minimum:1,default:20},songOffset:{description:"Search result offset for songs. Used for paging.",type:"integer",minimum:0,default:0},musicFolderId:{description:"Only return results from the music folder with the given ID. See getMusicFolders.",type:"number"}}},"Subsonic.SearchResult2":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/definitions/Subsonic.Artist"}},album:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}},song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"Subsonic.SearchResult3":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/definitions/Subsonic.ArtistID3"}},album:{type:"array",items:{$ref:"#/definitions/Subsonic.AlbumID3"}},song:{type:"array",items:{$ref:"#/definitions/Subsonic.Child"}}}},"SubsonicParameters.Rate":{type:"object",properties:{id:{description:"A string which uniquely identifies the file (song) or folder (album/artist) to rate.",type:"string"},rating:{description:"The rating between 1 and 5 (inclusive), or 0 to remove the rating.",type:"integer",minimum:0,maximum:5}},required:["id","rating"]},"SubsonicParameters.State":{type:"object",properties:{id:{description:"The ID of the file (song) or folder (album/artist) to star. Multiple parameters allowed.",anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},albumId:{description:"The ID of an album to star. Use this rather than id if the client accesses the media collection according to ID3 tags rather than file structure. Multiple parameters allowed.",anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},artistId:{description:"The ID of an artist to star. Use this rather than id if the client accesses the media collection according to ID3 tags rather than file structure. Multiple parameters allowed.",anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]}}},"SubsonicParameters.PlaylistUpdate":{type:"object",properties:{playlistId:{description:"The playlist ID.",type:"string"},name:{description:"The human-readable name of the playlist.",type:"string"},comment:{description:"The playlist comment.",type:"string"},public:{description:"true if the playlist should be visible to all users, false otherwise.",type:"boolean"},songIdToAdd:{description:"Add this song with this ID to the playlist. Multiple parameters allowed.",anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},songIndexToRemove:{description:"Remove the song at this position in the playlist. Multiple parameters allowed.",anyOf:[{type:"array",items:{type:"number"}},{type:"number"}]}},required:["playlistId"]},"SubsonicParameters.UpdateUser":{type:"object",properties:{username:{description:"The name of the user.",type:"string"},password:{description:"The password of the user, either in clear text of hex-encoded.",type:"string"},email:{description:"The email address of the user.",type:"string"},ldapAuthenticated:{description:"Whether the user is authenicated in LDAP.",type:"boolean"},adminRole:{description:"Whether the user is administrator.",type:"boolean"},settingsRole:{description:"Whether the user is allowed to change personal settings and password.",type:"boolean"},streamRole:{description:"Whether the user is allowed to play files.",type:"boolean"},jukeboxRole:{description:"Whether the user is allowed to play files in jukebox mode.",type:"boolean"},downloadRole:{description:"Whether the user is allowed to download files.",type:"boolean"},uploadRole:{description:"Whether the user is allowed to upload files.",type:"boolean"},coverArtRole:{description:"Whether the user is allowed to change cover art and tags.",type:"boolean"},commentRole:{description:"Whether the user is allowed to create and edit comments and ratings.",type:"boolean"},podcastRole:{description:"Whether the user is allowed to administrate Podcasts.",type:"boolean"},playlistRole:{description:"Whether the user is allowed to create and delete playlists.",type:"boolean"},shareRole:{description:"Whether the user is allowed to share files with anyone.",type:"boolean"},videoConversionRole:{description:"Whether the user is allowed to start video conversions.",type:"boolean"},musicFolderId:{description:"IDs of the music folders the user is allowed access to. Include the parameter once for each folder.",anyOf:[{type:"array",items:{type:"number"}},{type:"number"}]},maxBitRate:{description:"The maximum bit rate (in Kbps) for the user. Audio streams of higher bit rates are automatically downsampled to this bit rate. Legal values: 0 (no limit), 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320.",type:"integer"}},required:["username"]},"SubsonicParameters.Captions":{type:"object",properties:{id:{description:"The ID of the video.",type:"string"},format:{description:'Preferred captions format ("srt" or "vtt").',enum:["srt","vtt"],type:"string"}},required:["id"]},"SubsonicParameters.CoverArt":{type:"object",properties:{id:{description:"The ID of a song, album or artist.",type:"string"},size:{description:"If specified, scale image to this size.",type:"number"}},required:["id"]},"SubsonicParameters.HLS":{type:"object",properties:{id:{description:"A string which uniquely identifies the media file to stream.",type:"string"},bitRate:{description:"If specified, the server will attempt to limit the bitrate to this value, in kilobits per second. If this parameter is specified more than once,\nthe server will create a variant playlist, suitable for adaptive bitrate streaming.\nThe playlist will support streaming at all the specified bitrates. The server will automatically choose video dimensions that are suitable for the given bitrates.\nSince 1.9.0 you may explicitly request a certain width (480) and height (360) like so: bitRate=1000@480x360",type:"string"},audioTrack:{description:"The ID of the audio track to use. See getVideoInfo for how to get the list of available audio tracks for a video.",type:"string"}},required:["id"]},"SubsonicParameters.Stream":{type:"object",properties:{id:{description:"A string which uniquely identifies the file to stream. Obtained by calls to getMusicDirectory.",type:"string"},maxBitRate:{description:"If specified, the server will attempt to limit the bitrate to this value, in kilobits per second. If set to zero, no limit is imposed.",type:"integer",minimum:0},timeOffset:{description:"Only applicable to video streaming. If specified, start streaming at the given offset (in seconds) into the video. Typically used to implement video skipping.",type:"integer",minimum:0},size:{description:'Only applicable to video streaming. Requested video size specified as WxH, for instance "640x480".',type:"string"},converted:{description:'Only applicable to video streaming. Subsonic can optimize videos for streaming by converting them to MP4. If a conversion exists for the video in question, then setting this parameter to "true" will cause the converted video to be returned instead of the original.',default:!1,type:"boolean"},estimateContentLength:{description:'if set to "true", the Content-Length HTTP header will be set to an estimated value for transcoded or downsampled media.',default:!1,type:"boolean"},format:{description:'Specifies the preferred target format (e.g., "mp3" or "flv") in case there are multiple applicable transcodings. Starting with 1.9.0 you can use the special value "raw" to disable transcoding.',enum:["flv","mp3","raw"],type:"string"}},required:["id"]},"SubsonicParameters.Download":{type:"object",properties:{id:{description:"A string which uniquely identifies the file to download. Obtained by calls to getMusicDirectory.",type:"string"}},required:["id"]}},$schema:"http://json-schema.org/draft-07/schema#"}},function(e){e.exports={openapi:"3.0.0",info:{description:"Api for Subsonic",version:"1.16.0",title:"SubsonicApi"},servers:[{url:"http://localhost:4040/rest/",description:"A local Subsonic API"}],paths:{"/addChatMessage.view":{get:{operationId:"addChatMessage.view",summary:"Adds a message to the chat log.",tags:["Chat"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"message",schema:{type:"string"},description:"The chat message.",required:!0}]}},"/changePassword.view":{get:{operationId:"changePassword.view",summary:"Changes the password of an existing Subsonic user, using the following parameters. You can only change your own password unless you have admin privileges.",tags:["User"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"username",schema:{type:"string"},description:"The name of the user which should change its password.",required:!0},{in:"query",name:"password",schema:{type:"string"},description:"The new password of the new user, either in clear text of hex-encoded.",required:!0}]}},"/createBookmark.view":{get:{operationId:"createBookmark.view",summary:"Creates or updates a bookmark (a position within a media file). Bookmarks are personal and not visible to other users.",tags:["Bookmarks"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"ID of the media file to bookmark. If a bookmark already exists for this file it will be overwritten.",required:!0},{in:"query",name:"position",schema:{type:"integer",minimum:0},description:"The position (in milliseconds) within the media file.",required:!0},{in:"query",name:"comment",schema:{type:"string"},description:"A user-defined comment.",required:!1}]}},"/createPlaylist.view":{get:{operationId:"createPlaylist.view",summary:"Creates (or updates) a playlist.",tags:["Playlists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{playlist:{$ref:"#/components/schemas/Subsonic.PlaylistWithSongs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["playlist","status","version"]}},"application/xml":{schema:{type:"object",properties:{playlist:{$ref:"#/components/schemas/Subsonic.PlaylistWithSongs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["playlist","status","version"]}}}}},parameters:[{in:"query",name:"playlistId",schema:{type:"string"},description:"The playlist ID. (if updating)",required:!1},{in:"query",name:"name",schema:{type:"string"},description:"The human-readable name of the playlist.",required:!1},{in:"query",name:"songId",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"ID of a song in the playlist. Use one songId parameter for each song in the playlist.",required:!1}]}},"/createPodcastChannel.view":{get:{operationId:"createPodcastChannel.view",summary:"Adds a new Podcast channel.",tags:["Podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"url",schema:{type:"string"},description:"The URL of the Podcast to add.",required:!0}]}},"/createShare.view":{get:{operationId:"createShare.view",summary:"Creates a public URL that can be used by anyone to stream music or video from the Subsonic server. The URL is short and suitable for posting on Facebook, Twitter etc.",tags:["Sharing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"ID of a song, album or video to share. Use one id parameter for each entry to share.",required:!0},{in:"query",name:"description",schema:{type:"string"},description:"A user-defined description that will be displayed to people visiting the shared media.",required:!1},{in:"query",name:"expires",schema:{type:"integer",minimum:0},description:"The time at which the share expires. Given as milliseconds since 1970.",required:!1}]}},"/createUser.view":{get:{operationId:"createUser.view",summary:"Creates a new Subsonic user.",tags:["User"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"username",schema:{type:"string"},description:"The name of the new user.",required:!0},{in:"query",name:"password",schema:{type:"string"},description:"The password of the new user, either in clear text of hex-encoded (see above).",required:!1},{in:"query",name:"email",schema:{type:"string"},description:"The email address of the new user.",required:!1},{in:"query",name:"ldapAuthenticated",schema:{default:!1,type:"boolean"},description:"Whether the user is authenicated in LDAP.",required:!1},{in:"query",name:"adminRole",schema:{default:!1,type:"boolean"},description:"Whether the user is administrator.",required:!1},{in:"query",name:"settingsRole",schema:{default:!0,type:"boolean"},description:"Whether the user is allowed to change personal settings and password.",required:!1},{in:"query",name:"streamRole",schema:{default:!0,type:"boolean"},description:"Whether the user is allowed to play files.",required:!1},{in:"query",name:"jukeboxRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to play files in jukebox mode.",required:!1},{in:"query",name:"downloadRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to download files.",required:!1},{in:"query",name:"uploadRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to upload files.",required:!1},{in:"query",name:"coverArtRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to change cover art and tags.",required:!1},{in:"query",name:"commentRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to create and edit comments and ratings.",required:!1},{in:"query",name:"podcastRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to administrate Podcasts.",required:!1},{in:"query",name:"playlistRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to create and delete playlists.",required:!1},{in:"query",name:"shareRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to share files with anyone.",required:!1},{in:"query",name:"videoConversionRole",schema:{default:!1,type:"boolean"},description:"Whether the user is allowed to start video conversions.",required:!1},{in:"query",name:"musicFolderId",schema:{anyOf:[{type:"array",items:{type:"number"}},{type:"number"}]},description:"IDs of the music folders the user is allowed access to. Include the parameter once for each folder.",required:!1}]}},"/deleteBookmark.view":{get:{operationId:"deleteBookmark.view",summary:"Deletes the bookmark for a given file.",tags:["Bookmarks"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/deleteInternetRadioStation.view":{get:{operationId:"deleteInternetRadioStation.view",summary:"Deletes an existing internet radio station.",tags:["InternetRadio"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/deletePlaylist.view":{get:{operationId:"deletePlaylist.view",summary:"Deletes a saved playlist.",tags:["Playlists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/deletePodcastChannel.view":{get:{operationId:"deletePodcastChannel.view",summary:"Deletes a Podcast channel.",tags:["Podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/deletePodcastEpisode.view":{get:{operationId:"deletePodcastEpisode.view",summary:"Deletes a Podcast episode.",tags:["Podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/deleteShare.view":{get:{operationId:"deleteShare.view",summary:"Deletes an existing share.",tags:["Sharing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/deleteUser.view":{get:{operationId:"deleteUser.view",summary:"Deletes an existing Subsonic user.",tags:["User"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"username",schema:{type:"string"},description:"The name of the user to retrieve. You can only retrieve your own user unless you have admin privileges.",required:!0}]}},"/downloadPodcastEpisode.view":{get:{operationId:"downloadPodcastEpisode.view",summary:"Request the server to start downloading a given Podcast episode.",tags:["Podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getAlbum.view":{get:{operationId:"getAlbum.view",summary:"Returns details for an album, including a list of songs. This method organizes music according to ID3 tags.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{album:{$ref:"#/components/schemas/Subsonic.AlbumWithSongsID3"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["album","status","version"]}},"application/xml":{schema:{type:"object",properties:{album:{$ref:"#/components/schemas/Subsonic.AlbumWithSongsID3"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["album","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getAlbumInfo.view":{get:{operationId:"getAlbumInfo.view",summary:"Returns album notes, image URLs etc, using data from last.fm.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{albumInfo:{$ref:"#/components/schemas/Subsonic.AlbumInfo"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["albumInfo","status","version"]}},"application/xml":{schema:{type:"object",properties:{albumInfo:{$ref:"#/components/schemas/Subsonic.AlbumInfo"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["albumInfo","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getAlbumInfo2.view":{get:{operationId:"getAlbumInfo2.view",summary:"Similar to getAlbumInfo, but organizes music according to ID3 tags.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{albumInfo:{$ref:"#/components/schemas/Subsonic.AlbumInfo"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["albumInfo","status","version"]}},"application/xml":{schema:{type:"object",properties:{albumInfo:{$ref:"#/components/schemas/Subsonic.AlbumInfo"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["albumInfo","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getAlbumList.view":{get:{operationId:"getAlbumList.view",summary:"Returns a list of random, newest, highest rated etc. albums. Similar to the album lists on the home page of the Subsonic web interface.",tags:["Lists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{albumList:{$ref:"#/components/schemas/Subsonic.AlbumList"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["albumList","status","version"]}},"application/xml":{schema:{type:"object",properties:{albumList:{$ref:"#/components/schemas/Subsonic.AlbumList"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["albumList","status","version"]}}}}},parameters:[{in:"query",name:"type",schema:{$ref:"#/components/schemas/SubsonicParameters.AlbumListType"},description:"The list type. Must be one of the following: random, newest, frequent, recent, starred, alphabeticalByName or alphabeticalByArtist. Since 1.10.1 you can use byYear and byGenre to list albums in a given year range or genre.",required:!0},{in:"query",name:"size",schema:{type:"integer",maximum:500,default:10},description:"The number of albums to return. Max 500.",required:!1},{in:"query",name:"offset",schema:{type:"integer",default:0},description:"The list offset. Useful if you for example want to page through the list of newest albums.",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:'The name of the genre, e.g., "Rock".',required:!1},{in:"query",name:"fromYear",schema:{type:"number"},description:"The first year in the range. If fromYear > toYear a reverse chronological list is returned.",required:!1},{in:"query",name:"toYear",schema:{type:"integer",minimum:0},description:"The last year in the range.",required:!1}]}},"/getAlbumList2.view":{get:{operationId:"getAlbumList2.view",summary:"Similar to getAlbumList, but organizes music according to ID3 tags.",tags:["Lists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{albumList2:{$ref:"#/components/schemas/Subsonic.AlbumList2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["albumList2","status","version"]}},"application/xml":{schema:{type:"object",properties:{albumList2:{$ref:"#/components/schemas/Subsonic.AlbumList2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["albumList2","status","version"]}}}}},parameters:[{in:"query",name:"type",schema:{$ref:"#/components/schemas/SubsonicParameters.AlbumListType"},description:"The list type. Must be one of the following: random, newest, frequent, recent, starred, alphabeticalByName or alphabeticalByArtist. Since 1.10.1 you can use byYear and byGenre to list albums in a given year range or genre.",required:!0},{in:"query",name:"size",schema:{type:"integer",maximum:500,default:10},description:"The number of albums to return. Max 500.",required:!1},{in:"query",name:"offset",schema:{type:"integer",default:0},description:"The list offset. Useful if you for example want to page through the list of newest albums.",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:'The name of the genre, e.g., "Rock".',required:!1},{in:"query",name:"fromYear",schema:{type:"number"},description:"The first year in the range. If fromYear > toYear a reverse chronological list is returned.",required:!1},{in:"query",name:"toYear",schema:{type:"integer",minimum:0},description:"The last year in the range.",required:!1},{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return albums in the music folder with the given ID. See getMusicFolders.",required:!1}]}},"/getArtist.view":{get:{operationId:"getArtist.view",summary:"Returns details for an artist, including a list of albums. This method organizes music according to ID3 tags.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{artist:{$ref:"#/components/schemas/Subsonic.ArtistWithAlbumsID3"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["artist","status","version"]}},"application/xml":{schema:{type:"object",properties:{artist:{$ref:"#/components/schemas/Subsonic.ArtistWithAlbumsID3"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["artist","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getArtistInfo.view":{get:{operationId:"getArtistInfo.view",summary:"Returns artist info with biography, image URLs and similar artists, using data from last.fm.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{artistInfo:{$ref:"#/components/schemas/Subsonic.ArtistInfo"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["artistInfo","status","version"]}},"application/xml":{schema:{type:"object",properties:{artistInfo:{$ref:"#/components/schemas/Subsonic.ArtistInfo"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["artistInfo","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The artist, album or song ID.",required:!0},{in:"query",name:"count",schema:{type:"integer",default:20,minimum:1},description:"Max number of similar artists to return.",required:!1},{in:"query",name:"includeNotPresent",schema:{default:!1,type:"boolean"},description:"Whether to return artists that are not present in the media library.",required:!1}]}},"/getArtistInfo2.view":{get:{operationId:"getArtistInfo2.view",summary:"Similar to getArtistInfo, but organizes music according to ID3 tags.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{artistInfo2:{$ref:"#/components/schemas/Subsonic.ArtistInfo2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["artistInfo2","status","version"]}},"application/xml":{schema:{type:"object",properties:{artistInfo2:{$ref:"#/components/schemas/Subsonic.ArtistInfo2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["artistInfo2","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The artist, album or song ID.",required:!0},{in:"query",name:"count",schema:{type:"integer",default:20,minimum:1},description:"Max number of similar artists to return.",required:!1},{in:"query",name:"includeNotPresent",schema:{default:!1,type:"boolean"},description:"Whether to return artists that are not present in the media library.",required:!1}]}},"/getArtists.view":{get:{operationId:"getArtists.view",summary:"Similar to getIndexes, but organizes music according to ID3 tags.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{artists:{$ref:"#/components/schemas/Subsonic.ArtistsID3"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["artists","status","version"]}},"application/xml":{schema:{type:"object",properties:{artists:{$ref:"#/components/schemas/Subsonic.ArtistsID3"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["artists","status","version"]}}}}},parameters:[{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return results from the music folder with the given ID. See getMusicFolders",required:!1}]}},"/getBookmarks.view":{get:{operationId:"getBookmarks.view",summary:"Returns all bookmarks for this user. A bookmark is a position within a certain media file.",tags:["Bookmarks"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{bookmarks:{$ref:"#/components/schemas/Subsonic.Bookmarks"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["bookmarks","status","version"]}},"application/xml":{schema:{type:"object",properties:{bookmarks:{$ref:"#/components/schemas/Subsonic.Bookmarks"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["bookmarks","status","version"]}}}}}}},"/getChatMessages.view":{get:{operationId:"getChatMessages.view",summary:"Returns the current visible (non-expired) chat messages.",tags:["Chat"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{chatMessages:{$ref:"#/components/schemas/Subsonic.ChatMessages"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["chatMessages","status","version"]}},"application/xml":{schema:{type:"object",properties:{chatMessages:{$ref:"#/components/schemas/Subsonic.ChatMessages"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["chatMessages","status","version"]}}}}},parameters:[{in:"query",name:"since",schema:{type:"number"},description:"Only return messages newer than this time (in millis since Jan 1 1970).",required:!1}]}},"/getGenres.view":{get:{operationId:"getGenres.view",summary:"Returns all genres.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{genres:{$ref:"#/components/schemas/Subsonic.Genres"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["genres","status","version"]}},"application/xml":{schema:{type:"object",properties:{genres:{$ref:"#/components/schemas/Subsonic.Genres"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["genres","status","version"]}}}}}}},"/getIndexes.view":{get:{operationId:"getIndexes.view",summary:"Returns an indexed structure of all artists.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{indexes:{$ref:"#/components/schemas/Subsonic.Indexes"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["indexes","status","version"]}},"application/xml":{schema:{type:"object",properties:{indexes:{$ref:"#/components/schemas/Subsonic.Indexes"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["indexes","status","version"]}}}}},parameters:[{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return results from the music folder with the given ID. See getMusicFolders",required:!1},{in:"query",name:"ifModifiedSince",schema:{type:"integer",minimum:0},description:"If specified, only return a result if the artist collection has changed since the given time (in milliseconds since 1 Jan 1970).",required:!1}]}},"/getInternetRadioStations.view":{get:{operationId:"getInternetRadioStations.view",summary:"Returns all internet radio stations.",tags:["InternetRadio"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{internetRadioStations:{$ref:"#/components/schemas/Subsonic.InternetRadioStations"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["internetRadioStations","status","version"]}},"application/xml":{schema:{type:"object",properties:{internetRadioStations:{$ref:"#/components/schemas/Subsonic.InternetRadioStations"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["internetRadioStations","status","version"]}}}}}}},"/createInternetRadioStation.view":{get:{operationId:"createInternetRadioStation.view",summary:"Adds a new internet radio station.",tags:["InternetRadio"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"streamUrl",schema:{type:"string"},description:"The stream URL for the station.",required:!0},{in:"query",name:"name",schema:{type:"string"},description:"The user-defined name for the station.",required:!0},{in:"query",name:"homepageUrl",schema:{type:"string"},description:"The home page URL for the station.",required:!1}]}},"/updateInternetRadioStation.view":{get:{operationId:"updateInternetRadioStation.view",summary:"Updates an existing internet radio station.",tags:["InternetRadio"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The ID for the station.",required:!0},{in:"query",name:"streamUrl",schema:{type:"string"},description:"The stream URL for the station.",required:!0},{in:"query",name:"name",schema:{type:"string"},description:"The user-defined name for the station.",required:!0},{in:"query",name:"homepageUrl",schema:{type:"string"},description:"The home page URL for the station.",required:!1}]}},"/getLicense.view":{get:{operationId:"getLicense.view",summary:"Get details about the software license.",tags:["System"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{license:{$ref:"#/components/schemas/Subsonic.License"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["license","status","version"]}},"application/xml":{schema:{type:"object",properties:{license:{$ref:"#/components/schemas/Subsonic.License"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["license","status","version"]}}}}}}},"/getLyrics.view":{get:{operationId:"getLyrics.view",summary:"Searches for and returns lyrics for a given song.",tags:["MediaRetrieval"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{lyrics:{$ref:"#/components/schemas/Subsonic.Lyrics"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["lyrics","status","version"]}},"application/xml":{schema:{type:"object",properties:{lyrics:{$ref:"#/components/schemas/Subsonic.Lyrics"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["lyrics","status","version"]}}}}},parameters:[{in:"query",name:"artist",schema:{type:"string"},description:"The artist name.",required:!1},{in:"query",name:"title",schema:{type:"string"},description:"The song title.",required:!1}]}},"/getMusicDirectory.view":{get:{operationId:"getMusicDirectory.view",summary:"Returns a listing of all files in a music directory. Typically used to get list of albums for an artist, or list of songs for an album.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{directory:{$ref:"#/components/schemas/Subsonic.Directory"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["directory","status","version"]}},"application/xml":{schema:{type:"object",properties:{directory:{$ref:"#/components/schemas/Subsonic.Directory"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["directory","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getMusicFolders.view":{get:{operationId:"getMusicFolders.view",summary:"Returns all configured top-level music folders.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{musicFolders:{$ref:"#/components/schemas/Subsonic.MusicFolders"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["musicFolders","status","version"]}},"application/xml":{schema:{type:"object",properties:{musicFolders:{$ref:"#/components/schemas/Subsonic.MusicFolders"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["musicFolders","status","version"]}}}}}}},"/getNewestPodcasts.view":{get:{operationId:"getNewestPodcasts.view",summary:"Returns the most recently published Podcast episodes.",tags:["Podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{newestPodcasts:{$ref:"#/components/schemas/Subsonic.NewestPodcasts"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["newestPodcasts","status","version"]}},"application/xml":{schema:{type:"object",properties:{newestPodcasts:{$ref:"#/components/schemas/Subsonic.NewestPodcasts"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["newestPodcasts","status","version"]}}}}},parameters:[{in:"query",name:"count",schema:{type:"integer",default:20,minimum:0},description:"The maximum number of episodes to return.",required:!1}]}},"/getNowPlaying.view":{get:{operationId:"getNowPlaying.view",summary:"Returns what is currently being played by all users.",tags:["Lists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{nowPlaying:{$ref:"#/components/schemas/Subsonic.NowPlaying"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["nowPlaying","status","version"]}},"application/xml":{schema:{type:"object",properties:{nowPlaying:{$ref:"#/components/schemas/Subsonic.NowPlaying"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["nowPlaying","status","version"]}}}}}}},"/getPlaylist.view":{get:{operationId:"getPlaylist.view",summary:"Returns a listing of files in a saved playlist.",tags:["Playlists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{playlist:{$ref:"#/components/schemas/Subsonic.PlaylistWithSongs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["playlist","status","version"]}},"application/xml":{schema:{type:"object",properties:{playlist:{$ref:"#/components/schemas/Subsonic.PlaylistWithSongs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["playlist","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getPlaylists.view":{get:{operationId:"getPlaylists.view",summary:"Returns all playlists a user is allowed to play.",tags:["Playlists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{playlists:{$ref:"#/components/schemas/Subsonic.Playlists"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["playlists","status","version"]}},"application/xml":{schema:{type:"object",properties:{playlists:{$ref:"#/components/schemas/Subsonic.Playlists"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["playlists","status","version"]}}}}},parameters:[{in:"query",name:"username",schema:{type:"string"},description:"If specified, return playlists for this user rather than for the authenticated user. The authenticated user must have admin role if this parameter is used.",required:!1}]}},"/getPlayQueue.view":{get:{operationId:"getPlayQueue.view",summary:"Returns the state of the play queue for this user (as set by savePlayQueue). This includes the tracks in the play queue, the currently playing track, and the position within this track. Typically used to allow a user to move between different clients/apps while retaining the same play queue (for instance when listening to an audio book).",tags:["Bookmarks"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{playQueue:{$ref:"#/components/schemas/Subsonic.PlayQueue"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["playQueue","status","version"]}},"application/xml":{schema:{type:"object",properties:{playQueue:{$ref:"#/components/schemas/Subsonic.PlayQueue"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["playQueue","status","version"]}}}}}}},"/getPodcasts.view":{get:{operationId:"getPodcasts.view",summary:"Returns all Podcast channels the server subscribes to, and (optionally) their episodes. This method can also be used to return details for only one channel - refer to the id parameter. A typical use case for this method would be to first retrieve all channels without episodes, and then retrieve all episodes for the single channel the user selects.",tags:["Podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{podcasts:{$ref:"#/components/schemas/Subsonic.Podcasts"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["podcasts","status","version"]}},"application/xml":{schema:{type:"object",properties:{podcasts:{$ref:"#/components/schemas/Subsonic.Podcasts"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["podcasts","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"If specified, only return the Podcast channel with this ID.",required:!1},{in:"query",name:"includeEpisodes",schema:{default:!0,type:"boolean"},description:"Whether to include Podcast episodes in the returned result.",required:!1}]}},"/getRandomSongs.view":{get:{operationId:"getRandomSongs.view",summary:"Returns random songs matching the given criteria.",tags:["Lists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{randomSongs:{$ref:"#/components/schemas/Subsonic.Songs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["randomSongs","status","version"]}},"application/xml":{schema:{type:"object",properties:{randomSongs:{$ref:"#/components/schemas/Subsonic.Songs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["randomSongs","status","version"]}}}}},parameters:[{in:"query",name:"size",schema:{type:"integer",default:10,minimum:1,maximum:500},description:"The maximum number of songs to return. Max 500.",required:!1},{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return songs in the music folder with the given ID. See getMusicFolders.",required:!1},{in:"query",name:"genre",schema:{type:"string"},description:"Only returns songs belonging to this genre.",required:!1},{in:"query",name:"fromYear",schema:{type:"integer"},description:"Only return songs published after or in this year.",required:!1},{in:"query",name:"toYear",schema:{type:"integer"},description:"Only return songs published before or in this year.",required:!1}]}},"/getScanStatus.view":{get:{operationId:"getScanStatus.view",summary:"Returns the current status for media library scanning.",tags:["Library"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{scanStatus:{$ref:"#/components/schemas/Subsonic.ScanStatus"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["scanStatus","status","version"]}},"application/xml":{schema:{type:"object",properties:{scanStatus:{$ref:"#/components/schemas/Subsonic.ScanStatus"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["scanStatus","status","version"]}}}}}}},"/startScan.view":{get:{operationId:"startScan.view",summary:"Initiates a rescan of the media libraries.",tags:["Library"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}}}},"/getShares.view":{get:{operationId:"getShares.view",summary:"Returns information about shared media this user is allowed to manage.",tags:["Sharing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{shares:{$ref:"#/components/schemas/Subsonic.Shares"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["shares","status","version"]}},"application/xml":{schema:{type:"object",properties:{shares:{$ref:"#/components/schemas/Subsonic.Shares"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["shares","status","version"]}}}}}}},"/getSimilarSongs.view":{get:{operationId:"getSimilarSongs.view",summary:"Returns a random collection of songs from the given artist and similar artists, using data from last.fm. Typically used for artist radio features.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{similarSongs:{$ref:"#/components/schemas/Subsonic.SimilarSongs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["similarSongs","status","version"]}},"application/xml":{schema:{type:"object",properties:{similarSongs:{$ref:"#/components/schemas/Subsonic.SimilarSongs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["similarSongs","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The artist, album or song ID.",required:!0},{in:"query",name:"count",schema:{type:"integer",default:50,minimum:1},description:"Max number of songs to return.",required:!1}]}},"/getSimilarSongs2.view":{get:{operationId:"getSimilarSongs2.view",summary:"Similar to getSimilarSongs, but organizes music according to ID3 tags.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{similarSongs2:{$ref:"#/components/schemas/Subsonic.SimilarSongs2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["similarSongs2","status","version"]}},"application/xml":{schema:{type:"object",properties:{similarSongs2:{$ref:"#/components/schemas/Subsonic.SimilarSongs2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["similarSongs2","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The artist, album or song ID.",required:!0},{in:"query",name:"count",schema:{type:"integer",default:50,minimum:1},description:"Max number of songs to return.",required:!1}]}},"/getSong.view":{get:{operationId:"getSong.view",summary:"Returns details for a song.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{song:{$ref:"#/components/schemas/Subsonic.Child"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["song","status","version"]}},"application/xml":{schema:{type:"object",properties:{song:{$ref:"#/components/schemas/Subsonic.Child"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["song","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getSongsByGenre.view":{get:{operationId:"getSongsByGenre.view",summary:"Returns songs in a given genre.",tags:["Lists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{songsByGenre:{$ref:"#/components/schemas/Subsonic.Songs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["songsByGenre","status","version"]}},"application/xml":{schema:{type:"object",properties:{songsByGenre:{$ref:"#/components/schemas/Subsonic.Songs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["songsByGenre","status","version"]}}}}},parameters:[{in:"query",name:"genre",schema:{type:"string"},description:"The genre, as returned by getGenres.",required:!0},{in:"query",name:"count",schema:{type:"integer",default:10,maximum:500,minimum:1},description:"The maximum number of songs to return. Max 500.",required:!1},{in:"query",name:"offset",schema:{type:"integer",default:0,minimum:0},description:"The offset. Useful if you want to page through the songs in a genre.",required:!1},{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return albums in the music folder with the given ID. See getMusicFolders",required:!1}]}},"/getStarred.view":{get:{operationId:"getStarred.view",summary:"Returns starred songs, albums and artists.",tags:["Lists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{starred:{$ref:"#/components/schemas/Subsonic.Starred"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["starred","status","version"]}},"application/xml":{schema:{type:"object",properties:{starred:{$ref:"#/components/schemas/Subsonic.Starred"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["starred","status","version"]}}}}},parameters:[{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return results from the music folder with the given ID. See getMusicFolders",required:!1}]}},"/getStarred2.view":{get:{operationId:"getStarred2.view",summary:"Similar to getStarred, but organizes music according to ID3 tags.",tags:["Lists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{starred2:{$ref:"#/components/schemas/Subsonic.Starred2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["starred2","status","version"]}},"application/xml":{schema:{type:"object",properties:{starred2:{$ref:"#/components/schemas/Subsonic.Starred2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["starred2","status","version"]}}}}},parameters:[{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return results from the music folder with the given ID. See getMusicFolders",required:!1}]}},"/getTopSongs.view":{get:{operationId:"getTopSongs.view",summary:"Returns top songs for the given artist, using data from last.fm.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{topSongs:{$ref:"#/components/schemas/Subsonic.TopSongs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["topSongs","status","version"]}},"application/xml":{schema:{type:"object",properties:{topSongs:{$ref:"#/components/schemas/Subsonic.TopSongs"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["topSongs","status","version"]}}}}},parameters:[{in:"query",name:"artist",schema:{type:"string"},description:"The artist name.",required:!0},{in:"query",name:"count",schema:{type:"integer",default:50,minimum:1},description:"Max number of songs to return.",required:!1}]}},"/getUser.view":{get:{operationId:"getUser.view",summary:"Get details about a given user, including which authorization roles and folder access it has. Can be used to enable/disable certain features in the client, such as jukebox control.",tags:["User"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{user:{$ref:"#/components/schemas/Subsonic.User"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["user","status","version"]}},"application/xml":{schema:{type:"object",properties:{user:{$ref:"#/components/schemas/Subsonic.User"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["user","status","version"]}}}}},parameters:[{in:"query",name:"username",schema:{type:"string"},description:"The name of the user to retrieve. You can only retrieve your own user unless you have admin privileges.",required:!0}]}},"/getUsers.view":{get:{operationId:"getUsers.view",summary:"Get details about all users, including which authorization roles and folder access they have.",tags:["User"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{users:{$ref:"#/components/schemas/Subsonic.Users"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["users","status","version"]}},"application/xml":{schema:{type:"object",properties:{users:{$ref:"#/components/schemas/Subsonic.Users"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["users","status","version"]}}}}}}},"/getVideoInfo.view":{get:{operationId:"getVideoInfo.view",summary:"Returns details for a video, including information about available audio tracks, subtitles (captions) and conversions.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{videoInfo:{$ref:"#/components/schemas/Subsonic.VideoInfo"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["videoInfo","status","version"]}},"application/xml":{schema:{type:"object",properties:{videoInfo:{$ref:"#/components/schemas/Subsonic.VideoInfo"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["videoInfo","status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The item ID",required:!0}]}},"/getVideos.view":{get:{operationId:"getVideos.view",summary:"Returns all video files.",tags:["Browsing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{videos:{$ref:"#/components/schemas/Subsonic.Videos"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["videos","status","version"]}},"application/xml":{schema:{type:"object",properties:{videos:{$ref:"#/components/schemas/Subsonic.Videos"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["videos","status","version"]}}}}}}},"/jukeboxControl.view":{get:{operationId:"jukeboxControl.view",summary:"Controls the jukebox, i.e., playback directly on the server's audio hardware. Note",tags:["Jukebox"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{jukeboxStatus:{$ref:"#/components/schemas/Subsonic.JukeboxStatus"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["jukeboxStatus","status","version"]}},"application/xml":{schema:{type:"object",properties:{jukeboxStatus:{$ref:"#/components/schemas/Subsonic.JukeboxStatus"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["jukeboxStatus","status","version"]}}}}},parameters:[{in:"query",name:"action",schema:{$ref:"#/components/schemas/SubsonicParameters.JukeboxAction"},description:"The operation to perform.",required:!0},{in:"query",name:"index",schema:{type:"integer",minimum:0},description:"Used by skip and remove. Zero-based index of the song to skip to or remove.",required:!1},{in:"query",name:"offset",schema:{type:"integer",default:0,minimum:0},description:"Used by skip. Start playing this many seconds into the track.",required:!1},{in:"query",name:"id",schema:{type:"string"},description:"Used by add and set. ID of song to add to the jukebox playlist. Use multiple id parameters to add many songs in the same request. (set is similar to a clear followed by a add, but will not change the currently playing track.)",required:!1},{in:"query",name:"gain",schema:{type:"number",minimum:0,maximum:1},description:"Used by setGain to control the playback volume. A float value between 0.0 and 1.0.",required:!1}]}},"/ping.view":{get:{operationId:"ping.view",summary:"Used to test connectivity with the server.",tags:["System"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}}}},"/refreshPodcasts.view":{get:{operationId:"refreshPodcasts.view",summary:"Requests the server to check for new Podcast episodes.",tags:["Podcast"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}}}},"/savePlayQueue.view":{get:{operationId:"savePlayQueue.view",summary:"Saves the state of the play queue for this user. This includes the tracks in the play queue, the currently playing track, and the position within this track. Typically used to allow a user to move between different clients/apps while retaining the same play queue (for instance when listening to an audio book).",tags:["Bookmarks"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"ID of a song in the play queue. Use one id parameter for each song in the play queue.",required:!0},{in:"query",name:"current",schema:{type:"string"},description:"The ID of the current playing song.",required:!1},{in:"query",name:"position",schema:{type:"integer",minimum:0},description:"The position in milliseconds within the currently playing song.",required:!1}]}},"/scrobble.view":{get:{operationId:"scrobble.view",summary:"Registers the local playback of one or more media files. Typically used when playing media that is cached on the client.",tags:["Annotation"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"A string which uniquely identifies the file to scrobble.",required:!0},{in:"query",name:"time",schema:{type:"integer",minimum:0},description:"The time (in milliseconds since 1 Jan 1970) at which the song was listened to.",required:!1},{in:"query",name:"submission",schema:{type:"boolean"},description:'Whether this is a "submission" or a "now playing" notification.',required:!1}]}},"/search.view":{get:{operationId:"search.view",summary:"Returns a listing of files matching the given search criteria. Supports paging through the result.",tags:["Searching"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{searchResult:{$ref:"#/components/schemas/Subsonic.SearchResult"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["searchResult","status","version"]}},"application/xml":{schema:{type:"object",properties:{searchResult:{$ref:"#/components/schemas/Subsonic.SearchResult"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["searchResult","status","version"]}}}}},parameters:[{in:"query",name:"any",schema:{type:"string"},description:"Searches all fields.",required:!1},{in:"query",name:"artist",schema:{type:"string"},description:"Artist to search for.",required:!1},{in:"query",name:"album",schema:{type:"string"},description:"Album to search for.",required:!1},{in:"query",name:"title",schema:{type:"string"},description:"Song title to search for.",required:!1},{in:"query",name:"count",schema:{type:"integer",default:20,minimum:1},description:"Maximum number of results to return.",required:!1},{in:"query",name:"offset",schema:{type:"integer",minimum:0,default:0},description:"Search result offset. Used for paging.",required:!1},{in:"query",name:"newerThan",schema:{type:"number"},description:"Only return matches that are newer than this. Given as milliseconds since 1970.",required:!1}]}},"/search2.view":{get:{operationId:"search2.view",summary:"Returns albums, artists and songs matching the given search criteria. Supports paging through the result.",tags:["Searching"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{searchResult2:{$ref:"#/components/schemas/Subsonic.SearchResult2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["searchResult2","status","version"]}},"application/xml":{schema:{type:"object",properties:{searchResult2:{$ref:"#/components/schemas/Subsonic.SearchResult2"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["searchResult2","status","version"]}}}}},parameters:[{in:"query",name:"query",schema:{type:"string"},description:"Search query.",required:!1},{in:"query",name:"artistCount",schema:{type:"integer",minimum:1,default:20},description:"Maximum number of artists to return.",required:!1},{in:"query",name:"artistOffset",schema:{type:"integer",minimum:0,default:0},description:"Search result offset for artists. Used for paging.",required:!1},{in:"query",name:"albumCount",schema:{type:"integer",minimum:1,default:20},description:"Maximum number of albums to return.",required:!1},{in:"query",name:"albumOffset",schema:{type:"integer",minimum:0,default:0},description:"Search result offset for albums. Used for paging.",required:!1},{in:"query",name:"songCount",schema:{type:"integer",minimum:1,default:20},description:"Maximum number of songs to return.",required:!1},{in:"query",name:"songOffset",schema:{type:"integer",minimum:0,default:0},description:"Search result offset for songs. Used for paging.",required:!1},{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return results from the music folder with the given ID. See getMusicFolders.",required:!1}]}},"/search3.view":{get:{operationId:"search3.view",summary:"Similar to search2, but organizes music according to ID3 tags.",tags:["Searching"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{searchResult3:{$ref:"#/components/schemas/Subsonic.SearchResult3"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["searchResult3","status","version"]}},"application/xml":{schema:{type:"object",properties:{searchResult3:{$ref:"#/components/schemas/Subsonic.SearchResult3"},status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["searchResult3","status","version"]}}}}},parameters:[{in:"query",name:"query",schema:{type:"string"},description:"Search query.",required:!1},{in:"query",name:"artistCount",schema:{type:"integer",minimum:1,default:20},description:"Maximum number of artists to return.",required:!1},{in:"query",name:"artistOffset",schema:{type:"integer",minimum:0,default:0},description:"Search result offset for artists. Used for paging.",required:!1},{in:"query",name:"albumCount",schema:{type:"integer",minimum:1,default:20},description:"Maximum number of albums to return.",required:!1},{in:"query",name:"albumOffset",schema:{type:"integer",minimum:0,default:0},description:"Search result offset for albums. Used for paging.",required:!1},{in:"query",name:"songCount",schema:{type:"integer",minimum:1,default:20},description:"Maximum number of songs to return.",required:!1},{in:"query",name:"songOffset",schema:{type:"integer",minimum:0,default:0},description:"Search result offset for songs. Used for paging.",required:!1},{in:"query",name:"musicFolderId",schema:{type:"number"},description:"Only return results from the music folder with the given ID. See getMusicFolders.",required:!1}]}},"/setRating.view":{get:{operationId:"setRating.view",summary:"Sets the rating for a music file.",tags:["Annotation"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"A string which uniquely identifies the file (song) or folder (album/artist) to rate.",required:!0},{in:"query",name:"rating",schema:{type:"integer",minimum:0,maximum:5},description:"The rating between 1 and 5 (inclusive), or 0 to remove the rating.",required:!0}]}},"/star.view":{get:{operationId:"star.view",summary:"Attaches a star to a song, album or artist.",tags:["Annotation"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"The ID of the file (song) or folder (album/artist) to star. Multiple parameters allowed.",required:!1},{in:"query",name:"albumId",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"The ID of an album to star. Use this rather than id if the client accesses the media collection according to ID3 tags rather than file structure. Multiple parameters allowed.",required:!1},{in:"query",name:"artistId",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"The ID of an artist to star. Use this rather than id if the client accesses the media collection according to ID3 tags rather than file structure. Multiple parameters allowed.",required:!1}]}},"/unstar.view":{get:{operationId:"unstar.view",summary:"Removes the star from a song, album or artist.",tags:["Annotation"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"The ID of the file (song) or folder (album/artist) to star. Multiple parameters allowed.",required:!1},{in:"query",name:"albumId",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"The ID of an album to star. Use this rather than id if the client accesses the media collection according to ID3 tags rather than file structure. Multiple parameters allowed.",required:!1},{in:"query",name:"artistId",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"The ID of an artist to star. Use this rather than id if the client accesses the media collection according to ID3 tags rather than file structure. Multiple parameters allowed.",required:!1}]}},"/updatePlaylist.view":{get:{operationId:"updatePlaylist.view",summary:"Updates a playlist. Only the owner of a playlist is allowed to update it.",tags:["Playlists"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"playlistId",schema:{type:"string"},description:"The playlist ID.",required:!0},{in:"query",name:"name",schema:{type:"string"},description:"The human-readable name of the playlist.",required:!1},{in:"query",name:"comment",schema:{type:"string"},description:"The playlist comment.",required:!1},{in:"query",name:"public",schema:{type:"boolean"},description:"true if the playlist should be visible to all users, false otherwise.",required:!1},{in:"query",name:"songIdToAdd",schema:{anyOf:[{type:"array",items:{type:"string"}},{type:"string"}]},description:"Add this song with this ID to the playlist. Multiple parameters allowed.",required:!1},{in:"query",name:"songIndexToRemove",schema:{anyOf:[{type:"array",items:{type:"number"}},{type:"number"}]},description:"Remove the song at this position in the playlist. Multiple parameters allowed.",required:!1}]}},"/updateShare.view":{get:{operationId:"updateShare.view",summary:"Updates the description and/or expiration date for an existing share.",tags:["Sharing"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"ID of a song, album or video to share. Use one id parameter for each entry to share.",required:!0},{in:"query",name:"description",schema:{type:"string"},description:"A user-defined description that will be displayed to people visiting the shared media.",required:!1},{in:"query",name:"expires",schema:{type:"integer",minimum:0},description:"The time at which the share expires. Given as milliseconds since 1970.",required:!1}]}},"/updateUser.view":{get:{operationId:"updateUser.view",summary:"Modifies an existing Subsonic user.",tags:["User"],responses:{200:{description:"ok",content:{"application/json":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}},"application/xml":{schema:{type:"object",properties:{status:{$ref:"#/components/schemas/Subsonic.ResponseStatus"},error:{$ref:"#/components/schemas/Subsonic.Error"},version:{$ref:"#/components/schemas/Subsonic.Version"}},required:["status","version"]}}}}},parameters:[{in:"query",name:"username",schema:{type:"string"},description:"The name of the user.",required:!0},{in:"query",name:"password",schema:{type:"string"},description:"The password of the user, either in clear text of hex-encoded.",required:!1},{in:"query",name:"email",schema:{type:"string"},description:"The email address of the user.",required:!1},{in:"query",name:"ldapAuthenticated",schema:{type:"boolean"},description:"Whether the user is authenicated in LDAP.",required:!1},{in:"query",name:"adminRole",schema:{type:"boolean"},description:"Whether the user is administrator.",required:!1},{in:"query",name:"settingsRole",schema:{type:"boolean"},description:"Whether the user is allowed to change personal settings and password.",required:!1},{in:"query",name:"streamRole",schema:{type:"boolean"},description:"Whether the user is allowed to play files.",required:!1},{in:"query",name:"jukeboxRole",schema:{type:"boolean"},description:"Whether the user is allowed to play files in jukebox mode.",required:!1},{in:"query",name:"downloadRole",schema:{type:"boolean"},description:"Whether the user is allowed to download files.",required:!1},{in:"query",name:"uploadRole",schema:{type:"boolean"},description:"Whether the user is allowed to upload files.",required:!1},{in:"query",name:"coverArtRole",schema:{type:"boolean"},description:"Whether the user is allowed to change cover art and tags.",required:!1},{in:"query",name:"commentRole",schema:{type:"boolean"},description:"Whether the user is allowed to create and edit comments and ratings.",required:!1},{in:"query",name:"podcastRole",schema:{type:"boolean"},description:"Whether the user is allowed to administrate Podcasts.",required:!1},{in:"query",name:"playlistRole",schema:{type:"boolean"},description:"Whether the user is allowed to create and delete playlists.",required:!1},{in:"query",name:"shareRole",schema:{type:"boolean"},description:"Whether the user is allowed to share files with anyone.",required:!1},{in:"query",name:"videoConversionRole",schema:{type:"boolean"},description:"Whether the user is allowed to start video conversions.",required:!1},{in:"query",name:"musicFolderId",schema:{anyOf:[{type:"array",items:{type:"number"}},{type:"number"}]},description:"IDs of the music folders the user is allowed access to. Include the parameter once for each folder.",required:!1},{in:"query",name:"maxBitRate",schema:{type:"integer"},description:"The maximum bit rate (in Kbps) for the user. Audio streams of higher bit rates are automatically downsampled to this bit rate. Legal values: 0 (no limit), 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320.",required:!1}]}},"/getAvatar.view":{get:{operationId:"getAvatar.view",summary:"Returns the avatar (personal image) for a user.",tags:["MediaRetrieval"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}}},parameters:[{in:"query",name:"username",schema:{type:"string"},description:"The name of the user to retrieve. You can only retrieve your own user unless you have admin privileges.",required:!0}]}},"/getCaptions.view":{get:{operationId:"getCaptions.view",summary:"Returns captions (subtitles) for a video. Use getVideoInfo to get a list of available captions.",tags:["MediaRetrieval"],responses:{200:{description:"binary data",content:{"text/plain":{schema:{type:"string",format:"binary"}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The ID of the video.",required:!0},{in:"query",name:"format",schema:{enum:["srt","vtt"],type:"string"},description:'Preferred captions format ("srt" or "vtt").',required:!1}]}},"/getCoverArt.view":{get:{operationId:"getCoverArt.view",summary:"Returns a cover art image.",tags:["MediaRetrieval"],responses:{200:{description:"binary data",content:{"image/jpeg":{schema:{type:"string",format:"binary"}},"image/png":{schema:{type:"string",format:"binary"}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"The ID of a song, album or artist.",required:!0},{in:"query",name:"size",schema:{type:"number"},description:"If specified, scale image to this size.",required:!1}]}},"/hls.view":{get:{operationId:"hls.view",summary:"Creates an HLS (HTTP Live Streaming) playlist used for streaming video or audio. HLS is a streaming protocol implemented by Apple and works by breaking the overall stream into a sequence of small HTTP-based file downloads. It's supported by iOS and newer versions of Android. This method also supports adaptive bitrate streaming, see the bitRate parameter.",tags:["MediaRetrieval"],responses:{200:{description:"binary data",content:{"application/vnd.apple.mpegurl":{schema:{type:"string",format:"binary"}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"A string which uniquely identifies the media file to stream.",required:!0},{in:"query",name:"bitRate",schema:{type:"string"},description:"If specified, the server will attempt to limit the bitrate to this value, in kilobits per second. If this parameter is specified more than once,\nthe server will create a variant playlist, suitable for adaptive bitrate streaming.\nThe playlist will support streaming at all the specified bitrates. The server will automatically choose video dimensions that are suitable for the given bitrates.\nSince 1.9.0 you may explicitly request a certain width (480) and height (360) like so: bitRate=1000@480x360",required:!1},{in:"query",name:"audioTrack",schema:{type:"string"},description:"The ID of the audio track to use. See getVideoInfo for how to get the list of available audio tracks for a video.",required:!1}]}},"/stream.view":{get:{operationId:"stream.view",summary:"Streams a given media file.",tags:["MediaRetrieval"],responses:{200:{description:"binary data",content:{"audio/mpeg":{schema:{type:"string",format:"binary"}},"audio/flac":{schema:{type:"string",format:"binary"}},"audio/mp4":{schema:{type:"string",format:"binary"}},"audio/ogg":{schema:{type:"string",format:"binary"}},"audio/x-flv":{schema:{type:"string",format:"binary"}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"A string which uniquely identifies the file to stream. Obtained by calls to getMusicDirectory.",required:!0},{in:"query",name:"maxBitRate",schema:{type:"integer",minimum:0},description:"If specified, the server will attempt to limit the bitrate to this value, in kilobits per second. If set to zero, no limit is imposed.",required:!1},{in:"query",name:"timeOffset",schema:{type:"integer",minimum:0},description:"Only applicable to video streaming. If specified, start streaming at the given offset (in seconds) into the video. Typically used to implement video skipping.",required:!1},{in:"query",name:"size",schema:{type:"string"},description:'Only applicable to video streaming. Requested video size specified as WxH, for instance "640x480".',required:!1},{in:"query",name:"converted",schema:{default:!1,type:"boolean"},description:'Only applicable to video streaming. Subsonic can optimize videos for streaming by converting them to MP4. If a conversion exists for the video in question, then setting this parameter to "true" will cause the converted video to be returned instead of the original.',required:!1},{in:"query",name:"estimateContentLength",schema:{default:!1,type:"boolean"},description:'if set to "true", the Content-Length HTTP header will be set to an estimated value for transcoded or downsampled media.',required:!1},{in:"query",name:"format",schema:{enum:["flv","mp3","raw"],type:"string"},description:'Specifies the preferred target format (e.g., "mp3" or "flv") in case there are multiple applicable transcodings. Starting with 1.9.0 you can use the special value "raw" to disable transcoding.',required:!1}]}},"/download.view":{get:{operationId:"download.view",summary:"Downloads a given media file. Similar to stream, but this method returns the original media data without transcoding or downsampling.",tags:["MediaRetrieval"],responses:{200:{description:"binary data",content:{"audio/mpeg":{schema:{type:"string",format:"binary"}},"audio/flac":{schema:{type:"string",format:"binary"}},"audio/mp4":{schema:{type:"string",format:"binary"}},"audio/ogg":{schema:{type:"string",format:"binary"}},"audio/x-flv":{schema:{type:"string",format:"binary"}}}}},parameters:[{in:"query",name:"id",schema:{type:"string"},description:"A string which uniquely identifies the file to download. Obtained by calls to getMusicDirectory.",required:!0}]}}},security:[{userAuth:[],passwdAuth:[],tokenAuth:[],saltAuth:[],versionAuth:[],clientAuth:[],formatAuth:[]}],components:{securitySchemes:{userAuth:{type:"apiKey",in:"query",name:"u",description:"The username."},passwdAuth:{type:"apiKey",in:"query",name:"p",description:'The password, either in clear text or hex-encoded with a "enc:" prefix.'},tokenAuth:{type:"apiKey",in:"query",name:"t",description:"The authentication token computed as md5(password + salt)."},saltAuth:{type:"apiKey",in:"query",name:"s",description:'A random string ("salt") used as input for computing the password hash. See below for details.'},versionAuth:{type:"apiKey",in:"query",name:"v",description:"The protocol version implemented by the client"},clientAuth:{type:"apiKey",in:"query",name:"c",description:"A unique string identifying the client application."},formatAuth:{type:"apiKey",in:"query",name:"f",description:'Request data to be returned in this format. Supported values are "xml", "json" and "jsonp". If using jsonp, specify name of javascript callback function using a callback parameter.'}},schemas:{"Subsonic.ResponseStatus":{enum:["failed","ok"],type:"string"},"Subsonic.Error":{type:"object",properties:{code:{type:"number"},message:{type:"string"}},required:["code"]},"Subsonic.Version":{enum:["1.16.0"],type:"string"},"Subsonic.PlaylistWithSongs":{type:"object",properties:{entry:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},allowedUser:{type:"array",items:{type:"string"}},id:{type:"string"},name:{type:"string"},comment:{type:"string"},owner:{type:"string"},public:{type:"boolean"},songCount:{type:"number"},duration:{type:"number"},created:{type:"string"},changed:{type:"string"},coverArt:{type:"string"}},required:["changed","created","duration","id","name","songCount"]},"Subsonic.Child":{type:"object",properties:{id:{type:"string"},parent:{type:"string"},isDir:{type:"boolean"},title:{type:"string"},album:{type:"string"},artist:{type:"string"},track:{type:"number"},year:{type:"number"},genre:{type:"string"},coverArt:{type:"string"},size:{type:"number"},contentType:{type:"string"},suffix:{type:"string"},transcodedContentType:{type:"string"},transcodedSuffix:{type:"string"},duration:{type:"number"},bitRate:{type:"number"},path:{type:"string"},isVideo:{type:"boolean"},userRating:{type:"number"},averageRating:{type:"number"},playCount:{type:"number"},discNumber:{type:"number"},created:{type:"string"},starred:{type:"string"},albumId:{type:"string"},artistId:{type:"string"},type:{enum:["audiobook","music","podcast","video"],type:"string"},bookmarkPosition:{type:"number"},originalWidth:{type:"number"},originalHeight:{type:"number"}},required:["id","isDir","title"]},"Subsonic.AlbumWithSongsID3":{type:"object",properties:{song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},id:{type:"string"},name:{type:"string"},artist:{type:"string"},artistId:{type:"string"},coverArt:{type:"string"},songCount:{type:"number"},duration:{type:"number"},playCount:{type:"number"},created:{type:"string"},starred:{type:"string"},year:{type:"number"},genre:{type:"string"}},required:["created","duration","id","name","songCount"]},"Subsonic.AlbumInfo":{type:"object",properties:{notes:{type:"string"},musicBrainzId:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Subsonic.AlbumList":{type:"object",properties:{album:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"SubsonicParameters.AlbumListType":{enum:["alphabeticalByArtist","alphabeticalByName","byGenre","byYear","frequent","highest","newest","random","recent","starred"],type:"string"},"Subsonic.AlbumList2":{type:"object",properties:{album:{type:"array",items:{$ref:"#/components/schemas/Subsonic.AlbumID3"}}}},"Subsonic.AlbumID3":{type:"object",properties:{id:{type:"string"},name:{type:"string"},artist:{type:"string"},artistId:{type:"string"},coverArt:{type:"string"},songCount:{type:"number"},duration:{type:"number"},playCount:{type:"number"},created:{type:"string"},starred:{type:"string"},year:{type:"number"},genre:{type:"string"}},required:["created","duration","id","name","songCount"]},"Subsonic.ArtistWithAlbumsID3":{type:"object",properties:{album:{type:"array",items:{$ref:"#/components/schemas/Subsonic.AlbumID3"}},id:{type:"string"},name:{type:"string"},coverArt:{type:"string"},albumCount:{type:"number"},starred:{type:"string"}},required:["albumCount","id","name"]},"Subsonic.ArtistInfo":{type:"object",properties:{similarArtist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Artist"}},biography:{type:"string"},musicBrainzId:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Subsonic.Artist":{type:"object",properties:{id:{type:"string"},name:{type:"string"},starred:{type:"string"},userRating:{type:"number"},averageRating:{type:"number"}},required:["id","name"]},"Subsonic.ArtistInfo2":{type:"object",properties:{similarArtist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.ArtistID3"}},biography:{type:"string"},musicBrainzId:{type:"string"},lastFmUrl:{type:"string"},smallImageUrl:{type:"string"},mediumImageUrl:{type:"string"},largeImageUrl:{type:"string"}}},"Subsonic.ArtistID3":{type:"object",properties:{id:{type:"string"},name:{type:"string"},coverArt:{type:"string"},albumCount:{type:"number"},starred:{type:"string"}},required:["albumCount","id","name"]},"Subsonic.ArtistsID3":{type:"object",properties:{index:{type:"array",items:{$ref:"#/components/schemas/Subsonic.IndexID3"}},ignoredArticles:{type:"string"}},required:["ignoredArticles"]},"Subsonic.IndexID3":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.ArtistID3"}},name:{type:"string"}},required:["name"]},"Subsonic.Bookmarks":{type:"object",properties:{bookmark:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Bookmark"}}}},"Subsonic.Bookmark":{type:"object",properties:{entry:{$ref:"#/components/schemas/Subsonic.Child"},position:{type:"number"},username:{type:"string"},comment:{type:"string"},created:{type:"string"},changed:{type:"string"}},required:["changed","created","entry","position","username"]},"Subsonic.ChatMessages":{type:"object",properties:{chatMessage:{type:"array",items:{$ref:"#/components/schemas/Subsonic.ChatMessage"}}}},"Subsonic.ChatMessage":{type:"object",properties:{username:{type:"string"},time:{type:"number"},message:{type:"string"}},required:["message","time","username"]},"Subsonic.Genres":{type:"object",properties:{genre:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Genre"}}}},"Subsonic.Genre":{type:"object",properties:{content:{type:"string"},songCount:{type:"number"},albumCount:{type:"number"},artistCount:{type:"number"}},required:["albumCount","artistCount","content","songCount"]},"Subsonic.Indexes":{type:"object",properties:{shortcut:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Artist"}},index:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Index"}},child:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},lastModified:{type:"number"},ignoredArticles:{type:"string"}},required:["ignoredArticles","lastModified"]},"Subsonic.Index":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Artist"}},name:{type:"string"}},required:["name"]},"Subsonic.InternetRadioStations":{type:"object",properties:{internetRadioStation:{type:"array",items:{$ref:"#/components/schemas/Subsonic.InternetRadioStation"}}}},"Subsonic.InternetRadioStation":{type:"object",properties:{id:{type:"string"},name:{type:"string"},streamUrl:{type:"string"},homePageUrl:{type:"string"}},required:["id","name","streamUrl"]},"Subsonic.License":{type:"object",properties:{valid:{type:"boolean"},email:{type:"string"},licenseExpires:{type:"string"},trialExpires:{type:"string"}},required:["valid"]},"Subsonic.Lyrics":{type:"object",properties:{content:{type:"string"},artist:{type:"string"},title:{type:"string"}},required:["content"]},"Subsonic.Directory":{type:"object",properties:{child:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},id:{type:"string"},parent:{type:"string"},name:{type:"string"},starred:{type:"string"},userRating:{type:"number"},averageRating:{type:"number"},playCount:{type:"number"}},required:["id","name"]},"Subsonic.MusicFolders":{type:"object",properties:{musicFolder:{type:"array",items:{$ref:"#/components/schemas/Subsonic.MusicFolder"}}}},"Subsonic.MusicFolder":{type:"object",properties:{id:{type:"number"},name:{type:"string"}},required:["id"]},"Subsonic.NewestPodcasts":{type:"object",properties:{episode:{type:"array",items:{$ref:"#/components/schemas/Subsonic.PodcastEpisode"}}}},"Subsonic.PodcastEpisode":{type:"object",properties:{streamId:{type:"string"},channelId:{type:"string"},description:{type:"string"},status:{$ref:"#/components/schemas/Subsonic.PodcastStatus"},publishDate:{type:"string"},id:{type:"string"},parent:{type:"string"},isDir:{type:"boolean"},title:{type:"string"},album:{type:"string"},artist:{type:"string"},track:{type:"number"},year:{type:"number"},genre:{type:"string"},coverArt:{type:"string"},size:{type:"number"},contentType:{type:"string"},suffix:{type:"string"},transcodedContentType:{type:"string"},transcodedSuffix:{type:"string"},duration:{type:"number"},bitRate:{type:"number"},path:{type:"string"},isVideo:{type:"boolean"},userRating:{type:"number"},averageRating:{type:"number"},playCount:{type:"number"},discNumber:{type:"number"},created:{type:"string"},starred:{type:"string"},albumId:{type:"string"},artistId:{type:"string"},type:{enum:["audiobook","music","podcast","video"],type:"string"},bookmarkPosition:{type:"number"},originalWidth:{type:"number"},originalHeight:{type:"number"}},required:["channelId","id","isDir","status","title"]},"Subsonic.PodcastStatus":{enum:["completed","deleted","downloading","error","new","skipped"],type:"string"},"Subsonic.NowPlaying":{type:"object",properties:{entry:{type:"array",items:{$ref:"#/components/schemas/Subsonic.NowPlayingEntry"}}}},"Subsonic.NowPlayingEntry":{type:"object",properties:{username:{type:"string"},minutesAgo:{type:"number"},playerId:{type:"number"},playerName:{type:"string"},id:{type:"string"},parent:{type:"string"},isDir:{type:"boolean"},title:{type:"string"},album:{type:"string"},artist:{type:"string"},track:{type:"number"},year:{type:"number"},genre:{type:"string"},coverArt:{type:"string"},size:{type:"number"},contentType:{type:"string"},suffix:{type:"string"},transcodedContentType:{type:"string"},transcodedSuffix:{type:"string"},duration:{type:"number"},bitRate:{type:"number"},path:{type:"string"},isVideo:{type:"boolean"},userRating:{type:"number"},averageRating:{type:"number"},playCount:{type:"number"},discNumber:{type:"number"},created:{type:"string"},starred:{type:"string"},albumId:{type:"string"},artistId:{type:"string"},type:{enum:["audiobook","music","podcast","video"],type:"string"},bookmarkPosition:{type:"number"},originalWidth:{type:"number"},originalHeight:{type:"number"}},required:["id","isDir","minutesAgo","playerId","title","username"]},"Subsonic.Playlists":{type:"object",properties:{playlist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Playlist"}}}},"Subsonic.Playlist":{type:"object",properties:{allowedUser:{type:"array",items:{type:"string"}},id:{type:"string"},name:{type:"string"},comment:{type:"string"},owner:{type:"string"},public:{type:"boolean"},songCount:{type:"number"},duration:{type:"number"},created:{type:"string"},changed:{type:"string"},coverArt:{type:"string"}},required:["changed","created","duration","id","name","songCount"]},"Subsonic.PlayQueue":{type:"object",properties:{entry:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},current:{type:"number"},position:{type:"number"},username:{type:"string"},changed:{type:"string"},changedBy:{type:"string"}},required:["changed","changedBy","username"]},"Subsonic.Podcasts":{type:"object",properties:{channel:{type:"array",items:{$ref:"#/components/schemas/Subsonic.PodcastChannel"}}}},"Subsonic.PodcastChannel":{type:"object",properties:{episode:{type:"array",items:{$ref:"#/components/schemas/Subsonic.PodcastEpisode"}},id:{type:"string"},url:{type:"string"},title:{type:"string"},description:{type:"string"},coverArt:{type:"string"},originalImageUrl:{type:"string"},status:{$ref:"#/components/schemas/Subsonic.PodcastStatus"},errorMessage:{type:"string"}},required:["id","status","url"]},"Subsonic.Songs":{type:"object",properties:{song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"Subsonic.ScanStatus":{type:"object",properties:{scanning:{type:"boolean"},count:{type:"number"}},required:["scanning"]},"Subsonic.Shares":{type:"object",properties:{share:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Share"}}}},"Subsonic.Share":{type:"object",properties:{entry:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},id:{type:"string"},url:{type:"string"},description:{type:"string"},username:{type:"string"},created:{type:"string"},expires:{type:"string"},lastVisited:{type:"string"},visitCount:{type:"number"}},required:["created","id","url","username","visitCount"]},"Subsonic.SimilarSongs":{type:"object",properties:{song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"Subsonic.SimilarSongs2":{type:"object",properties:{song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"Subsonic.Starred":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Artist"}},album:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"Subsonic.Starred2":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.ArtistID3"}},album:{type:"array",items:{$ref:"#/components/schemas/Subsonic.AlbumID3"}},song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"Subsonic.TopSongs":{type:"object",properties:{song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"Subsonic.User":{type:"object",properties:{folder:{type:"array",items:{type:"number"}},username:{type:"string"},email:{type:"string"},scrobblingEnabled:{type:"boolean"},maxBitRate:{type:"number"},adminRole:{type:"boolean"},settingsRole:{type:"boolean"},downloadRole:{type:"boolean"},uploadRole:{type:"boolean"},playlistRole:{type:"boolean"},coverArtRole:{type:"boolean"},commentRole:{type:"boolean"},podcastRole:{type:"boolean"},streamRole:{type:"boolean"},jukeboxRole:{type:"boolean"},shareRole:{type:"boolean"},videoConversionRole:{type:"boolean"},avatarLastChanged:{type:"string"}},required:["adminRole","commentRole","coverArtRole","downloadRole","jukeboxRole","playlistRole","podcastRole","scrobblingEnabled","settingsRole","shareRole","streamRole","uploadRole","username","videoConversionRole"]},"Subsonic.Users":{type:"object",properties:{user:{type:"array",items:{$ref:"#/components/schemas/Subsonic.User"}}}},"Subsonic.VideoInfo":{type:"object",properties:{captions:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Captions"}},audioTrack:{type:"array",items:{$ref:"#/components/schemas/Subsonic.AudioTrack"}},conversion:{type:"array",items:{$ref:"#/components/schemas/Subsonic.VideoConversion"}},id:{type:"string"}},required:["id"]},"Subsonic.Captions":{type:"object",properties:{id:{type:"string"},name:{type:"string"}},required:["id"]},"Subsonic.AudioTrack":{type:"object",properties:{id:{type:"string"},name:{type:"string"},languageCode:{type:"string"}},required:["id"]},"Subsonic.VideoConversion":{type:"object",properties:{id:{type:"string"},bitRate:{type:"number"},audioTrackId:{type:"number"}},required:["id"]},"Subsonic.Videos":{type:"object",properties:{video:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"Subsonic.JukeboxStatus":{type:"object",properties:{currentIndex:{type:"number"},playing:{type:"boolean"},gain:{type:"number"},position:{type:"number"}},required:["currentIndex","gain","playing"]},"SubsonicParameters.JukeboxAction":{enum:["add","clear","get","remove","set","setGain","shuffle","skip","start","status","stop"],type:"string"},"Subsonic.SearchResult":{type:"object",properties:{match:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},offset:{type:"number"},totalHits:{type:"number"}},required:["offset","totalHits"]},"Subsonic.SearchResult2":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Artist"}},album:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}},song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}},"Subsonic.SearchResult3":{type:"object",properties:{artist:{type:"array",items:{$ref:"#/components/schemas/Subsonic.ArtistID3"}},album:{type:"array",items:{$ref:"#/components/schemas/Subsonic.AlbumID3"}},song:{type:"array",items:{$ref:"#/components/schemas/Subsonic.Child"}}}}}}}},function(e,t){e.exports=require("helmet")},function(e,t,r){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=i(r(1)),n=r(167);function a(e){const t=e;return t.app=n.AppConfig,t.getDataPath=(t=>s.default.resolve(e.paths.data,...t)),t}t.extendConfig=a,t.loadConfig=function(){const e=r(168);return e.firstStart=r(169),a(e)}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AppConfig={chat:{maxMsgs:100,maxAge:{value:1,unit:"day"}},index:{ignore:["The","El","La","Los","Las","Le","Les","Die"]}}},function(e,t){e.exports=require("../config/config.js")},function(e,t){e.exports=require("../config/firststart.config.js")},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(171),a=r(172),o=r(173),d=r(174),c=r(175),u=r(176),p=r(177),m=r(178),l=r(179),y=r(180),f=r(181),h=r(182),g=r(183);s(r(2)).default("Store");t.Store=class{constructor(e){this.db=e,this.trackStore=new a.TrackStore(this.db),this.folderStore=new o.FolderStore(this.db),this.userStore=new n.UserStore(this.db),this.stateStore=new g.StateStore(this.db),this.playlistStore=new h.PlaylistStore(this.db),this.podcastStore=new f.PodcastStore(this.db),this.episodeStore=new d.EpisodeStore(this.db),this.bookmarkStore=new y.BookmarkStore(this.db),this.artistStore=new u.ArtistStore(this.db),this.albumStore=new c.AlbumStore(this.db),this.playQueueStore=new m.PlayQueueStore(this.db),this.radioStore=new p.RadioStore(this.db),this.rootStore=new l.RootStore(this.db)}reset(){return i(this,void 0,void 0,function*(){yield this.db.reset()})}check(){return i(this,void 0,void 0,function*(){yield this.db.check()})}open(){return i(this,void 0,void 0,function*(){yield this.db.open()})}close(){return i(this,void 0,void 0,function*(){yield this.db.close()})}findInAll(e){return i(this,void 0,void 0,function*(){const t=[this.folderStore,this.trackStore,this.albumStore,this.artistStore,this.podcastStore,this.episodeStore,this.playlistStore,this.artistStore,this.albumStore,this.radioStore,this.userStore];for(const r of t){const t=yield r.byId(e);if(t)return t}})}findMultiInAll(e){return i(this,void 0,void 0,function*(){let t=[];const r=[this.folderStore,this.trackStore,this.albumStore,this.artistStore,this.podcastStore,this.episodeStore,this.playlistStore,this.artistStore,this.albumStore,this.radioStore,this.userStore];for(const i of r){const r=yield i.byIds(e);t=t.concat(r)}return t})}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.UserStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.user,e)}transformQuery(e){const t=new s.QueryHelper;return t.term("name",e.name),t.bool("roles.admin",e.isAdmin),t.match("name",e.query),t.get(e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5),n=r(3);t.TrackStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.track,e),this.fieldMap={path:"path",parentID:"parentID",parentIDs:"parentID",rootID:"rootID",artistID:"artistID",artist:"tag.artist",mbTrackID:"tag.mbTrackID",title:"tag.title",album:"tag.album",year:"tag.year",genre:"tag.genre",created:"stat.created"}}transformQuery(e){const t=new s.QueryHelper;return t.terms("parentID",e.parentIDs),t.term("path",e.path),t.startsWiths("path",e.inPaths?e.inPaths.map(e=>n.ensureTrailingPathSeparator(e)):void 0),t.startsWith("path",e.inPath?n.ensureTrailingPathSeparator(e.inPath):void 0),t.term("tag.genre",e.genre),t.term("rootID",e.rootID),t.term("parentID",e.parentID),t.term("tag.mbTrackID",e.mbTrackID),t.terms("tag.mbTrackID",e.mbTrackIDs),t.term("tag.artist",e.artist),t.term("tag.title",e.title),t.match("tag.title",e.query),t.term("tag.album",e.album),t.term("artistID",e.artistID),t.range("tag.year",e.toYear,e.fromYear),t.range("stat.created",void 0,e.newerThan),t.get(e,this.fieldMap)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5),n=r(3);t.FolderStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.folder,e),this.fieldMap={parentID:"parent",rootID:"rootID",artist:"tag.artist",title:"tag.title",type:"tag.type",year:"tag.year",created:"stat.created",album:"tag.album",path:"path",level:"tag.level",genre:"tag.genre"}}transformQuery(e){const t=new s.QueryHelper;return t.term("path",e.path),t.startsWith("path",e.inPath?n.ensureTrailingPathSeparator(e.inPath):void 0),t.term("tag.mbAlbumID",e.mbAlbumID),t.term("tag.mbArtistID",e.mbArtistID),t.term("tag.genre",e.genre),t.term("tag.title",e.title),t.term("tag.album",e.album),t.term("rootID",e.rootID),t.term("parentID",e.parentID),t.term("tag.level",e.level),t.term("tag.artist",e.artist),t.terms("tag.artist",e.artists),t.terms("tag.type",e.types),t.range("tag.year",e.toYear,e.fromYear),t.range("stat.created",void 0,e.newerThan),t.match("tag.title",e.query),t.get(e,this.fieldMap)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.EpisodeStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.episode,e),this.fieldMap={podcastIDs:"podcastID",podcastID:"podcastID",status:"status",date:"date",name:"name",created:"stat.created"}}transformQuery(e){const t=new s.QueryHelper;return t.terms("podcastID",e.podcastIDs),t.term("podcastID",e.podcastID),t.term("status",e.status),t.term("name",e.name),t.range("date",void 0,e.newerThan),t.match("name",e.query),t.get(e,this.fieldMap)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.AlbumStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.album,e)}transformQuery(e){const t=new s.QueryHelper;return t.term("rootIDs",e.rootID),t.term("artistID",e.artistID),t.term("genre",e.genre),t.term("mbAlbumID",e.mbAlbumID),t.term("mbArtistID",e.mbArtistID),t.term("trackIDs",e.trackID),t.term("albumType",e.albumType),t.terms("albumType",e.albumTypes),t.terms("trackIDs",e.trackIDs),t.term("artist",e.artist),t.term("name",e.name),t.term("slug",e.slug),t.range("year",e.toYear,e.fromYear),t.range("created",void 0,e.newerThan),t.match("name",e.query),t.get(e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.ArtistStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.artist,e)}transformQuery(e){const t=new s.QueryHelper;return t.terms("trackIDs",e.trackIDs),t.terms("name",e.names),t.term("rootIDs",e.rootID),t.term("albumIDs",e.albumID),t.term("trackIDs",e.trackID),t.term("name",e.name),t.term("albumTypes",e.albumType),t.terms("albumTypes",e.albumTypes),t.term("slug",e.slug),t.term("mbArtistID",e.mbArtistID),t.range("created",void 0,e.newerThan),t.match("name",e.query),t.get(e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.RadioStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.radio,e)}transformQuery(e){const t=new s.QueryHelper;return t.term("url",e.url),t.term("homepage",e.homepage),t.term("name",e.name),t.match("name",e.query),t.get(e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.PlayQueueStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.playqueue,e)}transformQuery(e){const t=new s.QueryHelper;return t.term("userID",e.userID),t.get(e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.RootStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.root,e)}transformQuery(e){const t=new s.QueryHelper;return t.term("name",e.name),t.term("path",e.path),t.match("name",e.query),t.get(e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.BookmarkStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.bookmark,e)}transformQuery(e){const t=new s.QueryHelper;return t.term("userID",e.userID),t.term("destID",e.destID),t.terms("destID",e.destIDs),t.get(e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.PodcastStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.podcast,e),this.fieldMap={url:"url",title:"tag.title",status:"status",query:"tag.title",created:"created"}}transformQuery(e){const t=new s.QueryHelper;return t.term("url",e.url),t.term("tag.title",e.title),t.term("status",e.status),t.range("created",void 0,e.newerThan),t.match("tag.title",e.query),t.get(e,this.fieldMap)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.PlaylistStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.playlist,e)}transformQuery(e){const t=new s.QueryHelper;return t.term("trackIDs",e.trackID),t.terms("trackIDs",e.trackIDs),t.term("userID",e.userID),t.term("name",e.name),t.bool("isPublic",e.isPublic),t.match("name",e.query),t.range("created",void 0,e.newerThan),t.get(e)}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=r(0),s=r(5);t.StateStore=class extends s.BaseStore{constructor(e){super(i.DBObjectType.state,e)}transformQuery(e){const t=new s.QueryHelper;return t.term("userID",e.userID),t.term("destID",e.destID),t.terms("destID",e.destIDs),t.term("destType",e.type),t.notNull("faved",e.isFaved),t.range("rated",e.maxRating,e.minRating),t.range("played",void 0,e.isPlayed?1:void 0),t.get(e)}}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=s(r(185)),a=r(0),o=r(186),d=s(r(2)),c=r(187),u=r(188),p=d.default("DB.elastic");class m{constructor(e,t){this.type=e,void 0===e?(this._index=t.indexName("*"),this._type=""):(this._type=a.DBObjectType[e],this._index=t.indexName(a.DBObjectType[e])),this._map=c.mapping[this._type],this.db=t}hit2Obj(e){return e._source.id=e._source.id.toString(),e._source.type=a.DBObjectType[e._type],e._source}filterProperties(e){const t=Object.assign({},e);return t.type=void 0,t}getPropertyMapping(e){const t=e.split(".");let r=this._map;for(const e of t)r=r.properties[e];return r}translateElasticQuery(e){if(e.all)return{match_all:{}};let t=[];if(e.term){const r=e.term;t=t.concat(Object.keys(r).map(e=>{const t={},i=this.getPropertyMapping(e);return i||console.log("Unknown prop",this._type,e),i&&"text"===i.type?t[e+".keyword"]=r[e]:t[e]=r[e],{term:t}}))}if(e.terms){const r=e.terms;t=t.concat(Object.keys(r).map(e=>{const t={},i=this.getPropertyMapping(e);return i||console.log("Unknown prop",this._type,e),i&&"text"===i.type?t[e+".keyword"]=r[e]:t[e]=r[e],{terms:t}}))}if(e.match){const r=e.match;t=t.concat(Object.keys(r).map(e=>{const t={};return t[e]=r[e],{match_phrase_prefix:t}}))}if(e.startsWith){const r=e.startsWith;t=t.concat(Object.keys(r).map(e=>{const t={};return t[e]=r[e],{prefix:t}}))}if(e.startsWiths){const r=e.startsWiths;Object.keys(r).forEach(e=>{r[e].forEach(r=>{const i={};i[e]=r,t.push({prefix:i})})})}if(e.range){const r=e.range;t=t.concat(Object.keys(r).map(e=>{const t=r[e],i={};return i[e]={gte:t.gte,lte:t.lte},{range:i}}))}if(e.notNull){const r=e.notNull;t=t.concat(r.map(e=>({exists:{field:e}})))}return{bool:{must:t}}}scroll(e,t){return i(this,void 0,void 0,function*(){let r=0;const s=this.db.client;yield function e(n){return i(this,void 0,void 0,function*(){if(r+=n.hits.hits.length,yield t(n.hits.hits),n.hits.total!==r&&n._scroll_id){const t=yield s.scroll({scrollId:n._scroll_id,scroll:"30s"});yield e(t)}})}(e)})}getNewId(){return i(this,void 0,void 0,function*(){return yield this.db.getNewId()})}add(e){return i(this,void 0,void 0,function*(){return e.id&&0!==e.id.length||(e.id=yield this.getNewId()),yield this.db.client.index({index:this._index,type:this._type,body:this.filterProperties(e),id:e.id,refresh:this.db.indexRefresh}),e.id})}bulk(e){return i(this,void 0,void 0,function*(){for(const t of e)yield yield this.add(t)})}replace(e,t){return i(this,void 0,void 0,function*(){yield this.db.client.index({index:this._index,type:this._type,body:this.filterProperties(t),id:e,refresh:this.db.indexRefresh})})}upsert(e,t){return i(this,void 0,void 0,function*(){e&&0!==e.length?yield this.db.client.index({index:this._index,type:this._type,body:this.filterProperties(t),id:e,refresh:this.db.indexRefresh}):yield this.add(t)})}removeByQuery(e){return i(this,void 0,void 0,function*(){return(yield this.db.client.deleteByQuery({index:this._index,type:this._type,body:{query:this.translateElasticQuery(e)},refresh:this.db.indexRefresh})).deleted})}remove(e){return i(this,void 0,void 0,function*(){if(0===e.length)return Promise.resolve();Array.isArray(e)?yield this.db.client.deleteByQuery({index:this._index,type:this._type,body:{query:{terms:{_id:e}}},refresh:this.db.indexRefresh}):yield this.db.client.delete({index:this._index,type:this._type,id:e,refresh:this.db.indexRefresh})})}byId(e){return i(this,void 0,void 0,function*(){if(void 0===this.type)return yield this.queryOne({term:{id:e}});try{const t=yield this.db.client.get({index:this._index,type:this._type,id:e});return t.found?this.hit2Obj(t):void 0}catch(e){404!==e.statusCode&&Promise.reject(e)}})}byIds(e){return i(this,void 0,void 0,function*(){if(0===e.length)return[];const t=yield this.db.client.mget({index:this._index,type:this._type,body:{ids:e}});return t.docs?t.docs.filter(e=>e.found).map(e=>this.hit2Obj(e)):[]})}query(e){return i(this,void 0,void 0,function*(){let t=[];const r=yield this.db.client.search({index:this._index,type:this._type,scroll:"30s",size:100,body:{query:this.translateElasticQuery(e)}});return yield this.scroll(r,e=>i(this,void 0,void 0,function*(){t=t.concat(e.map(this.hit2Obj))})),t})}queryOne(e){return i(this,void 0,void 0,function*(){const t=yield this.db.client.search({index:this._index,type:this._type,size:1,body:{query:this.translateElasticQuery(e)}});if(t.hits.total>0)return this.hit2Obj(t.hits.hits[0])})}iterate(e,t){return i(this,void 0,void 0,function*(){const r=yield this.db.client.search({index:this._index,type:this._type,scroll:"30s",size:100,body:{query:this.translateElasticQuery(e)}});yield this.scroll(r,e=>i(this,void 0,void 0,function*(){yield t(e.map(this.hit2Obj))}))})}queryIds(e){return i(this,void 0,void 0,function*(){let t=[];const r=yield this.db.client.search({index:this._index,type:this._type,scroll:"30s",body:{query:this.translateElasticQuery(e),stored_fields:[]}});return yield this.scroll(r,e=>i(this,void 0,void 0,function*(){t=t.concat(e.map(e=>e._id.toString()))})),t})}aggregate(e,t){return i(this,void 0,void 0,function*(){return(yield this.db.client.search({index:this._index,type:this._type,body:{query:this.translateElasticQuery(e),aggs:{_count:{cardinality:{field:t}}}}})).aggregations._count.value})}count(e){return i(this,void 0,void 0,function*(){return(yield this.db.client.search({index:this._index,type:this._type,size:0,body:{query:this.translateElasticQuery(e)}})).hits.total})}distinct(e){return i(this,void 0,void 0,function*(){return(yield this.db.client.search({index:this._index,type:this._type,body:{aggs:{distinct:{terms:{field:e}}}}})).aggregations.distinct.buckets.map(e=>e.key)})}}t.DBIndexElastic=m;t.DBElastic=class{constructor(e){this.client=new n.default.Client({host:e.host,log:e.log}),this.sequence=new o.ESSequence(this.client),this.indexPrefix=e.indexPrefix,this.indexRefresh=e.indexRefresh}drop(){return i(this,void 0,void 0,function*(){for(const e of this.getTypes())yield this.resetIndex(e)})}close(){return i(this,void 0,void 0,function*(){this.client.close()})}ping(){return i(this,void 0,void 0,function*(){try{yield this.client.ping({requestTimeout:1e4})}catch(e){return p.error("elasticsearch could not be contacted",e),Promise.reject(e)}})}open(){return i(this,void 0,void 0,function*(){p.debug("Open connection to elasticsearch"),yield this.sequence.init(this.client),yield this.ping(),yield this.check()})}getNewId(){return i(this,void 0,void 0,function*(){return(yield this.sequence.get(this.indexName("id"))).toString()})}indexName(e){return this.indexPrefix+"_"+e}getTypes(){return Object.keys(a.DBObjectType).filter(e=>!isNaN(Number(e))).map(e=>parseInt(e,10))}resetIndex(e){return i(this,void 0,void 0,function*(){const t=this.indexName(a.DBObjectType[e]);(yield this.client.indices.exists({index:t}))&&(yield this.client.indices.delete({index:t}))})}reset(){return i(this,void 0,void 0,function*(){for(const e of this.getTypes())yield this.resetIndex(e)})}createIndex(e){return i(this,void 0,void 0,function*(){const t=a.DBObjectType[e];if(!c.mapping[t])return Promise.reject(Error("Missing Elasticsearch Mapping for type "+t));const r=this.indexName(t),i={_default_:{_default_:{date_detection:!1}}};i[t]=c.mapping[t],yield this.client.indices.create({index:r,body:{mappings:i}})})}checkIndex(e){return i(this,void 0,void 0,function*(){const t=a.DBObjectType[e],r=this.indexName(t);return!(yield this.client.indices.exists({index:r}))&&(yield this.createIndex(e),!0)})}check(){return i(this,void 0,void 0,function*(){let e=!1;for(const t of this.getTypes())e=(yield this.checkIndex(t))||e;e&&(yield u.wait(1e3))})}getDBIndex(e){return new m(e,this)}}},function(e,t){e.exports=require("elasticsearch")},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i={_source:{enabled:!1},_all:{enabled:!1},enabled:!1};function s(e){return"object"==typeof e}function n(e){return"function"==typeof e}function a(e){return!!((s(e)||n(e))&&(s(e.indices)||n(e.indices))&&n(e.indices.create)&&n(e.indices.exists)&&n(e.indices.putMapping)&&n(e.bulk))}t.ESSequence=class{constructor(e){if(this.initPromise=null,this.initError=null,this.cacheFillPromise=null,this.cache={},this.cacheSize=100,this.options={esIndex:"sequences",esType:"sequence"},this.client=e,!a(e))throw new Error("Init was called with an invalid client parameter value.")}init(e,t){return a(this.client)?null!==this.initPromise?Promise.reject(new Error("Init was called while a previous init is pending.")):null!==this.cacheFillPromise?Promise.reject(new Error("Init was called while get requests are pending.")):function(e){return void 0===e||"number"==typeof e&&isFinite(e)&&Math.floor(e)===e}(t)?(this.initPromise=new Promise(r=>{this.cache={},this.cacheSize=100,this.initError=null,void 0!==t&&(this.cacheSize=t),s(e)&&(this.options=Object.assign(this.options,e)),r(this.initEsIndexIfNeeded())}).catch(e=>{throw this.initError=e,e}).then(()=>{this.initPromise=null}),this.initPromise):Promise.reject(new Error("Init was called with an invalid cacheSize parameter value.")):Promise.reject(new Error("Init was called with an invalid client parameter value."))}addMappingToEsIndexIfMissing(){const e={};return e[this.options.esType]=i,this.client.indices.putMapping({index:this.options.esIndex,type:this.options.esType,body:e})}initEsIndexIfNeeded(){return this.client.indices.exists({index:this.options.esIndex}).then(e=>{if(e)return this.addMappingToEsIndexIfMissing();const t={settings:{number_of_shards:1,auto_expand_replicas:"0-all"},mappings:{}};return t.mappings[this.options.esType]=i,this.client.indices.create({index:this.options.esIndex,body:t})})}fillCache(e){return this.cacheFillPromise=new Promise(t=>{this.cache[e]||(this.cache[e]=[]);const r={body:[]};for(let t=0;t<this.cacheSize;t+=1)r.body.push({index:{_index:this.options.esIndex,_type:this.options.esType,_id:e}}),r.body.push({});t(this.client.bulk(r).then(t=>{for(let r=0;r<t.items.length;r+=1)this.cache[e].push(t.items[r].index._version)}))}).then(()=>{this.cacheFillPromise=null}),this.cacheFillPromise}interal_get(e){if(null!==this.initError)return Promise.reject(this.initError);if(this.cache[e]&&this.cache[e].length>0)return Promise.resolve(this.cache[e].shift());const t=()=>this.interal_get(e);return null!==this.cacheFillPromise?this.cacheFillPromise.then(t):this.fillCache(e).then(t)}get(e){if(!this.client)throw new Error("Please run init(...) first to provide an elasticsearch client.");if("string"!=typeof e||0===e.length)throw new Error("The parameter value for sequenceName is invalid.");return null!==this.initPromise?this.initPromise.then(()=>this.interal_get(e)):this.interal_get(e)}getCacheSize(e){return this.cache[e]?this.cache[e].length:0}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i={type:"boolean"},s={type:"long"},n={type:"text",fields:{keyword:{type:"keyword"}}},a={type:"keyword"},o={properties:{name:n,path:a,created:s,id:a,type:s}},d={properties:{name:n,salt:a,hash:a,subsonic_pass:a,email:a,created:s,scrobblingEnabled:i,avatarLastChanged:s,avatar:a,maxBitRate:s,allowedfolder:a,roles:{properties:{stream:i,upload:i,admin:i,podcast:i}},id:a,type:s}},c={properties:{votesCount:s,value:s}},u={properties:{name:n,sortName:a,locale:a,type:a,typeId:a,primary:a,beginDate:a,endDate:a,ended:i}},p={properties:{name:n,joinphrase:a,artist:{properties:{id:a,name:n,sortName:a,disambiguation:a,aliases:u}}}},m={properties:{small:a,medium:a,large:a}},l={properties:{album:{properties:{name:n,artist:a,mbid:a,url:a,image:{properties:{small:a,medium:a,large:a}},tags:{properties:{name:n,url:a}},description:a,releases:{properties:{media:{properties:{format:a,formatId:a,title:n,discCount:s,trackCount:s,position:s,trackOffset:s,tracks:{properties:{id:a,title:n,position:s,length:s,number:a,recording:{properties:{id:a,title:n,disambiguation:a,length:s,video:i,rating:c,aliases:u,artistCredit:p,isrcs:a}},artistCredit:p}},discs:{properties:{id:a,sectors:s,offsetCount:s,offsets:s}}}},score:s,count:s,id:a,title:n,sortName:a,status:a,statusId:a,date:a,country:a,packaging:a,packagingId:a,disambiguation:a,annotation:a,quality:a,barcode:a,asin:a,textRepresentation:{properties:{language:a,script:a}},trackCount:s,artistCredit:p,releaseGroup:{properties:{id:a,title:n,disambiguation:a,firstReleaseDate:a,primaryType:a,primaryTypeId:a,secondaryTypes:a,secondaryTypeIds:a,rating:c,artistCredit:p}},labelInfo:{properties:{catalogNumber:a,label:{properties:{id:a,name:n,disambiguation:a,labelCode:a,sortName:a}},aliases:{properties:{name:n,sortName:a,ended:i}}}},tags:{properties:{count:s,name:n}},releaseEvents:{properties:{date:a,area:{properties:{id:a,name:n,sortName:a,disambiguation:a,iso31661Codes:a}}}},coverArtArchive:{properties:{front:i,back:i,darkened:i,artwork:i,count:s}}}}}},artist:{properties:{name:n,mbid:a,url:a,image:m,tags:{properties:{name:n,url:a}},description:a,similar:{properties:{name:n,url:a,mbid:a,image:m}}}},topSongs:{properties:{name:n,artist:{properties:{name:n,mbid:a,url:a}},mbid:a,url:a,rank:a,image:m}}}},y={properties:{rootID:a,path:a,parentID:a,stat:{properties:{created:s,modified:s}},tag:{properties:{tracks:s,level:s,type:a,genre:a,album:a,artist:a,artistSort:a,albumType:a,title:n,image:a,year:s,mbAlbumID:a,mbArtistID:a}},info:l,id:a,type:s}},f={properties:{userID:a,trackIDs:a,currentID:a,position:s,changed:s,changedBy:a,id:a,type:s}},h={properties:{album:a,albumSort:a,albumArtist:a,albumArtistSort:a,artist:a,artistSort:a,genre:a,disc:s,title:n,titleSort:a,track:s,year:s,mbTrackID:a,mbAlbumType:a,mbAlbumArtistID:a,mbArtistID:a,mbAlbumID:a,mbReleaseTrackID:a,mbReleaseGroupID:a,mbRecordingID:a,mbAlbumStatus:a,mbReleaseCountry:a}},g={properties:{duration:s,bitRate:s,format:a,sampleRate:s,channels:s,encoded:a,mode:a,version:a}},b={properties:{rootID:a,parentID:a,name:n,path:a,stat:{properties:{created:s,modified:s,size:s}},albumID:a,artistID:a,tag:h,media:g,info:{properties:{similar:{properties:{name:n,mbid:a,url:a,duration:s,artist:{properties:{name:n,mbid:a,url:a}},image:m}}}},id:a,type:s}},v={properties:{slug:a,name:n,rootIDs:a,trackIDs:a,albumType:a,artistID:a,artist:a,genre:a,year:s,duration:s,created:s,mbArtistID:a,mbAlbumID:a,info:l,id:a,type:s}},q={properties:{slug:a,name:n,nameSort:a,rootIDs:a,trackIDs:a,albumIDs:a,albumTypes:a,mbArtistID:a,info:l,created:s,id:a,type:s}},S={properties:{name:n,url:a,homepage:a,disabled:i,created:s,changed:s,id:a,type:s}},I={properties:{userID:a,destID:a,destType:s,played:s,lastplayed:s,faved:s,rated:s,id:a,type:s}},k={properties:{name:n,userID:a,comment:a,coverArt:a,changed:s,created:s,allowedUser:a,isPublic:i,duration:s,trackIDs:a,id:a,type:s}},A={properties:{url:a,created:s,lastCheck:s,status:a,errorMessage:a,tag:{properties:{title:n,link:a,author:a,description:a,generator:a,image:a,categories:a}},id:a,type:s}},D={properties:{podcastID:a,status:a,error:a,path:a,link:a,summary:a,date:s,name:n,guid:a,author:a,chapters:{properties:{start:s,title:n}},enclosures:{properties:{url:a,type:a,length:s}},stat:{properties:{created:s,modified:s,size:s}},tag:h,media:g,id:a,type:s}},$={properties:{destID:a,userID:a,comment:a,created:s,changed:s,position:s,id:a,type:s}};t.mapping={root:o,user:d,folder:y,playqueue:f,track:b,album:v,artist:q,radio:S,state:I,playlist:k,podcast:A,episode:D,bookmark:$}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0}),t.wait=function(e){return i(this,void 0,void 0,function*(){return new Promise(t=>setTimeout(t,e))})}},function(e,t,r){"use strict";var i=this&&this.__awaiter||function(e,t,r,i){return new(r||(r=Promise))(function(s,n){function a(e){try{d(i.next(e))}catch(e){n(e)}}function o(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){e.done?s(e.value):new r(function(t){t(e.value)}).then(a,o)}d((i=i.apply(e,t||[])).next())})},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const n=r(0),a=s(r(1)),o=s(r(190)),d=r(3);let c=Date.now();function u(e){return e.replace(/[-[\]{}()*+!<=:?.\/\\^$|#\s,]/g,"\\$&")}class p{constructor(e,t){this.type=e,this._type=n.DBObjectType[e],this._index="jam_"+n.DBObjectType[e],this.client=t}hit2Obj(e){return delete e._id,e}hits2Objs(e){return e.map(e=>this.hit2Obj(e))}getNewId(){return i(this,void 0,void 0,function*(){return(++c).toString()})}translateSortQuery(e){if(e.sort){const t={},r=e.sort;return Object.keys(r).forEach(e=>{t[e]=r[e]===n.DatabaseQuerySortType.ascending?1:-1}),t}}translateQuery(e){if(e.all)return{};let t=[];if(e.term){const r=e.term;t=t.concat(Object.keys(r).map(e=>{const t={};return t[e]=r[e],t}))}if(e.match){const r=e.match;t=t.concat(Object.keys(r).map(e=>{const t={};return t[e]={$regex:new RegExp(u(r[e].toString()),"i")},t}))}if(e.terms){const r=e.terms;t=t.concat(Object.keys(r).map(e=>{const t={};return t[e]={$in:r[e]},t}))}if(e.startsWith){const r=e.startsWith;t=t.concat(Object.keys(r).map(e=>({$where:function(){return 0===this[e].indexOf(r[e])}})))}if(e.startsWiths){const r=e.startsWiths;t=t.concat(Object.keys(r).map(e=>({$where:function(){return!!r[e].find(t=>0===this[e].indexOf(t))}})))}if(e.range){const r=e.range;Object.keys(r).forEach(e=>{const i=r[e];if(i.hasOwnProperty("gte")&&void 0!==i.gte){const r={};r[e]={$gte:i.gte},t.push(r)}if(i.hasOwnProperty("lte")&&void 0!==i.lte){const r={};r[e]={$lte:i.lte},t.push(r)}})}if(e.notNull){const r=e.notNull;t=t.concat(r.map(e=>{const t={};return t[e]={$exists:!0},t}))}return{$and:t}}add(e){return i(this,void 0,void 0,function*(){return e.id&&0!==e.id.length||(e.id=yield this.getNewId()),new Promise((t,r)=>{this.client.insert(e,i=>{i?r(i):t(e.id)})})})}bulk(e){return i(this,void 0,void 0,function*(){for(const t of e)yield yield this.add(t)})}replace(e,t){return i(this,void 0,void 0,function*(){return new Promise((r,i)=>{this.client.update({id:e},t,{},(t,s)=>{if(t)i(t);else{if(1!==s)return i("Could not find "+this._type+" doc with id "+e);r()}})})})}upsert(e,t){return i(this,void 0,void 0,function*(){e&&0!==e.length?yield this.replace(e,t):yield this.add(t)})}remove(e){return i(this,void 0,void 0,function*(){const t=Array.isArray(e)?e:[e];if(0!==t.length)return new Promise((e,r)=>{this.client.remove({id:{$in:t}},{multi:!0},(i,s)=>{i?r(i):s!==t.length?r(Error("Found nr of items "+s+" does not match nr. of ids "+t.length)):e()})})})}removeByQuery(e){return i(this,void 0,void 0,function*(){return new Promise((t,r)=>{this.client.remove(this.translateQuery(e),{multi:!0},(e,i)=>{e?r(e):t(i)})})})}byId(e){return i(this,void 0,void 0,function*(){return void 0===this.type?yield this.queryOne({term:{id:e}}):new Promise((t,r)=>{this.client.find({id:e},(e,i)=>{e?r(e):0===i.length?t():t(this.hit2Obj(i[0]))})})})}byIds(e){return i(this,void 0,void 0,function*(){return new Promise((t,r)=>{this.client.find({id:{$in:e}},(e,i)=>{e?r(e):t(this.hits2Objs(i))})})})}query(e){return i(this,void 0,void 0,function*(){let t=this.client.find(this.translateQuery(e));const r=this.translateSortQuery(e);return r&&(t=t.sort(r)),e.offset&&(t=t.skip(e.offset)),e.amount&&(t=t.limit(e.amount)),new Promise((e,r)=>{t.exec((t,i)=>{t?r(t):e(this.hits2Objs(i))})})})}queryOne(e){return i(this,void 0,void 0,function*(){return new Promise((t,r)=>{this.client.find(this.translateQuery(e)).limit(1).exec((e,i)=>{e?r(e):0===i.length?t():t(this.hit2Obj(i[0]))})})})}iterate(e,t){return i(this,void 0,void 0,function*(){let r=this.client.find(this.translateQuery(e));const i=this.translateSortQuery(e);return i&&(r=r.sort(i)),e.offset&&(r=r.skip(e.offset)),e.amount&&(r=r.limit(e.amount)),new Promise((e,i)=>{r.exec((r,s)=>{r?i(r):t(this.hits2Objs(s)).then(e).catch(i)})})})}queryIds(e){return i(this,void 0,void 0,function*(){let t=this.client.find(this.translateQuery(e));const r=this.translateSortQuery(e);return r&&(t=t.sort(r)),e.offset&&(t=t.skip(e.offset)),e.amount&&(t=t.limit(e.amount)),new Promise((e,r)=>{t.exec((t,i)=>{t?r(t):e(i.map(e=>e.id))})})})}getDotFieldValues(e,t){const r=[],i=(e,t)=>{const s=t[e[0]];if(void 0!==s)if(Array.isArray(s)){if(1===e.length)return;s.forEach(t=>{i(e.slice(1),t)})}else 1===e.length?r.push(s.toString()):"object"==typeof s&&i(e.slice(1),s)};return i(e.split("."),t),r}aggregate(e,t){return i(this,void 0,void 0,function*(){let r=this.client.find(this.translateQuery(e));const i=this.translateSortQuery(e);return i&&(r=r.sort(i)),e.offset&&(r=r.skip(e.offset)),e.amount&&(r=r.limit(e.amount)),new Promise((e,i)=>{r.exec((r,s)=>{if(r)i(r);else{const r=[];s.forEach(e=>{this.getDotFieldValues(t,e).forEach(e=>{r.indexOf(e)<0&&r.push(e)})}),e(r.length)}})})})}count(e){return i(this,void 0,void 0,function*(){return new Promise((t,r)=>{this.client.count(this.translateQuery(e),(e,i)=>{e?r(e):t(i)})})})}distinct(e){return i(this,void 0,void 0,function*(){return new Promise((t,r)=>{this.client.find({},(i,s)=>{if(i)r(i);else{const r=[];s.forEach(t=>{this.getDotFieldValues(e,t).forEach(e=>{r.indexOf(e)<0&&r.push(e)})}),t(r)}})})})}}t.DBIndexNedb=p;t.DBNedb=class{constructor(e){this.clients={},this.getTypes().forEach(t=>{const r=a.default.resolve(e,n.DBObjectType[t]+".db");this.clients[n.DBObjectType[t]]={client:new o.default({filename:r}),filename:r}})}drop(){return i(this,void 0,void 0,function*(){for(const e of this.getTypes()){const t=this.clients[n.DBObjectType[e]];yield d.fileDeleteIfExists(t.filename)}})}loadDatabase(e){return i(this,void 0,void 0,function*(){return new Promise((t,r)=>{e.loadDatabase(e=>{if(e)return r(e);t()})})})}open(){return i(this,void 0,void 0,function*(){for(const e of this.getTypes()){const t=this.clients[n.DBObjectType[e]];yield this.loadDatabase(t.client)}yield this.check()})}close(){return i(this,void 0,void 0,function*(){})}getTypes(){return Object.keys(n.DBObjectType).filter(e=>!isNaN(Number(e))).map(e=>parseInt(e,10))}resetIndex(e){return i(this,void 0,void 0,function*(){return new Promise((t,r)=>{e.remove({},{multi:!0},i=>{if(i)return r(i);e.loadDatabase(e=>{e&&r(e),t()})})})})}reset(){return i(this,void 0,void 0,function*(){for(const e of this.getTypes()){const t=this.clients[n.DBObjectType[e]];yield this.resetIndex(t.client)}})}checkIndex(e){return i(this,void 0,void 0,function*(){})}check(){return i(this,void 0,void 0,function*(){for(const e of this.getTypes()){const t=this.clients[n.DBObjectType[e]];yield this.checkIndex(t.client)}})}getDBIndex(e){return new p(e,this.clients[n.DBObjectType[e]].client)}}},function(e,t){e.exports=require("nedb")}]);
//# sourceMappingURL=bundle.js.map