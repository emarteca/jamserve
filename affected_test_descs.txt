AlbumController with nedb engine .download should (prepare) download an object
AlbumController with nedb engine .download should not (prepare) download an object with unsupported format
AlbumController with nedb engine .favUpdate should fav an object
AlbumController with nedb engine .favUpdate should unfav an object
AlbumController with nedb engine .id should handle metadata not available for album info in sub-object
AlbumController with nedb engine .id should ignore invalid ids
AlbumController with nedb engine .id should return 404 for invalid id
AlbumController with nedb engine .id should return album info in sub-object
AlbumController with nedb engine .id should return error on invalid id parameter
AlbumController with nedb engine .id should return objects
AlbumController with nedb engine .id should return sub items
AlbumController with nedb engine .image should get an image for an object
AlbumController with nedb engine .index should return an empty index
AlbumController with nedb engine .index should return an index with all albums
AlbumController with nedb engine .info should return album info
AlbumController with nedb engine .list should return invalid list error
AlbumController with nedb engine .list should return lists
AlbumController with nedb engine .rateUpdate should not rate with invalid parameters
AlbumController with nedb engine .rateUpdate should rate an object
AlbumController with nedb engine .rateUpdate should unrate an object
AlbumController with nedb engine .search should search for an object
AlbumController with nedb engine .similarTracks should handle empty metadata data
AlbumController with nedb engine .similarTracks should handle error if lastfm is not available
AlbumController with nedb engine .similarTracks should handle invalid parameters
AlbumController with nedb engine .similarTracks should return similar tracks
AlbumController with nedb engine .state should return object state
AlbumController with nedb engine .state should return object states
AlbumController with nedb engine .tracks should handle invalid parameters
AlbumController with nedb engine .tracks should return tracks
AlbumService with nedb getAlbumFolder should return nothing on invalid albums
AlbumService with nedb getAlbumFolder should return the album folder
AlbumService with nedb getImage should return an album image
ArtistController with nedb engine .albums should handle invalid parameters
ArtistController with nedb engine .albums should return albums
ArtistController with nedb engine .download should (prepare) download an object
ArtistController with nedb engine .download should not (prepare) download an object with unsupported format
ArtistController with nedb engine .favUpdate should fav an object
ArtistController with nedb engine .favUpdate should unfav an object
ArtistController with nedb engine .id should handle metadata not available for artist artist info in sub-object
ArtistController with nedb engine .id should handle metadata not available for artist similar in sub-object
ArtistController with nedb engine .id should ignore invalid ids
ArtistController with nedb engine .id should return 404 for invalid id
ArtistController with nedb engine .id should return artist info in sub-object
ArtistController with nedb engine .id should return artist similar in sub-object
ArtistController with nedb engine .id should return error on invalid id parameter
ArtistController with nedb engine .id should return objects
ArtistController with nedb engine .id should return sub items
ArtistController with nedb engine .image should get an image for an object
ArtistController with nedb engine .index should return an empty index
ArtistController with nedb engine .index should return an index with all artists
ArtistController with nedb engine .info should return artist info
ArtistController with nedb engine .list should return invalid list error
ArtistController with nedb engine .list should return lists
ArtistController with nedb engine .rateUpdate should not rate with invalid parameters
ArtistController with nedb engine .rateUpdate should rate an object
ArtistController with nedb engine .rateUpdate should unrate an object
ArtistController with nedb engine .search should search for an object
ArtistController with nedb engine .series should handle invalid parameters
ArtistController with nedb engine .series should return series
ArtistController with nedb engine .similar should handle empty metadata data
ArtistController with nedb engine .similar should handle error if metadata is not available
ArtistController with nedb engine .similar should handle invalid parameters
ArtistController with nedb engine .similar should return similar artists
ArtistController with nedb engine .similarTracks should handle empty metadata data
ArtistController with nedb engine .similarTracks should handle error if metadata is not available
ArtistController with nedb engine .similarTracks should handle invalid parameters
ArtistController with nedb engine .similarTracks should return similar tracks
ArtistController with nedb engine .state should return object state
ArtistController with nedb engine .state should return object states
ArtistController with nedb engine .tracks should handle invalid parameters
ArtistController with nedb engine .tracks should return tracks
ArtistService with nedb .getArtistFolder should return nothing on invalid albums
ArtistService with nedb .getArtistFolder should return the artist folder
ArtistService with nedb .getArtistImage should return an artist image
BookmarkController with nedb engine .byTrackDelete should delete all bookmark
BookmarkController with nedb engine .byTrackDelete should delete an invalid bookmark
BookmarkController with nedb engine .byTrackList should list bookmarks
BookmarkController with nedb engine .create should create a bookmark
BookmarkController with nedb engine .create should fail create for non existing track
BookmarkController with nedb engine .delete should delete a bookmark
BookmarkController with nedb engine .delete should delete an invalid bookmark
BookmarkController with nedb engine .id should ignore invalid ids
BookmarkController with nedb engine .id should return 404 for invalid id
BookmarkController with nedb engine .id should return an bookmark
BookmarkController with nedb engine .id should return error on invalid id parameter
BookmarkController with nedb engine .list should list bookmarks
DownloadService with nedb should download a folder
DownloadService with nedb should download a playlist
DownloadService with nedb should download a track
DownloadService with nedb should download an album
DownloadService with nedb should download an artist
DownloadService with nedb should download an episode
DownloadService with nedb should download as tar
DownloadService with nedb should not allow an unknown download format
DownloadService with nedb should not download a car
DownloadService with nedb should not download a non public playlist
DownloadService with nedb should not download an unavailable episode
Engine with nedb engine should refresh
EpisodeController with nedb engine .download should (prepare) download an object
EpisodeController with nedb engine .download should not (prepare) download an object with unsupported format
EpisodeController with nedb engine .favUpdate should fav an object
EpisodeController with nedb engine .favUpdate should unfav an object
EpisodeController with nedb engine .id should ignore invalid ids
EpisodeController with nedb engine .id should return 404 for invalid id
EpisodeController with nedb engine .id should return error on invalid id parameter
EpisodeController with nedb engine .id should return objects
EpisodeController with nedb engine .image should get an image for an object
EpisodeController with nedb engine .list should return invalid list error
EpisodeController with nedb engine .list should return lists
EpisodeController with nedb engine .rateUpdate should not rate with invalid parameters
EpisodeController with nedb engine .rateUpdate should rate an object
EpisodeController with nedb engine .rateUpdate should unrate an object
EpisodeController with nedb engine .search should search for an object
EpisodeController with nedb engine .state should return object state
EpisodeController with nedb engine .state should return object states
EpisodeController with nedb engine should work
EpisodeService with nedb should block downloading a podcast while download already running
EpisodeService with nedb should download an episode file
EpisodeService with nedb should fail to download an episode file
EpisodeService with nedb should report downloading while downloading
EpisodeService with nedb should throw a storage error
FolderController with nedb engine .children should not return children for invalid parameter
FolderController with nedb engine .children should return children
FolderController with nedb engine .download should (prepare) download an object
FolderController with nedb engine .download should not (prepare) download an object with unsupported format
FolderController with nedb engine .favUpdate should fav an object
FolderController with nedb engine .favUpdate should unfav an object
FolderController with nedb engine .id should ignore invalid ids
FolderController with nedb engine .id should return 404 for invalid id
FolderController with nedb engine .id should return error on invalid id parameter
FolderController with nedb engine .id should return objects
FolderController with nedb engine .image should get an image for an object
FolderController with nedb engine .index should return an empty index
FolderController with nedb engine .index should return an index with all folders
FolderController with nedb engine .list should return invalid list error
FolderController with nedb engine .list should return lists
FolderController with nedb engine .rateUpdate should not rate with invalid parameters
FolderController with nedb engine .rateUpdate should rate an object
FolderController with nedb engine .rateUpdate should unrate an object
FolderController with nedb engine .search should search for an object
FolderController with nedb engine .state should return object state
FolderController with nedb engine .state should return object states
FolderController with nedb engine .subfolders should not return subfolders for invalid parameter
FolderController with nedb engine .subfolders should return subfolders
FolderController with nedb engine .tracks should not return tracks for invalid parameter
FolderController with nedb engine .tracks should return tracks
FolderService with nedb .collectFolderPath should handle invalid parameters
FolderService with nedb .collectFolderPath should report the right parents
FolderService with nedb .getFolderImage should return an empty response for not available images
FolderWorker with nedb renameFolder should handle invalid parameters
FolderWorker with nedb renameFolder should rename and update all folder & track paths
FolderWorker with nedb should move folders
FolderWorker with nedb should not move folders with invalid parameters
FolderWorker with nedb should remove folders
GenreService with nedb should not return genres on invalid root id
GenreService with nedb should return genres
IOService with nedb should
JamApi with nedb engine should exist
PlaylistController with nedb engine .download should (prepare) download an object
PlaylistController with nedb engine .download should not (prepare) download an object with unsupported format
PlaylistController with nedb engine .favUpdate should fav an object
PlaylistController with nedb engine .favUpdate should unfav an object
PlaylistController with nedb engine .id should ignore invalid ids
PlaylistController with nedb engine .id should return 404 for invalid id
PlaylistController with nedb engine .id should return error on invalid id parameter
PlaylistController with nedb engine .id should return objects
PlaylistController with nedb engine .image should get an image for an object
PlaylistController with nedb engine .list should return invalid list error
PlaylistController with nedb engine .list should return lists
PlaylistController with nedb engine .rateUpdate should not rate with invalid parameters
PlaylistController with nedb engine .rateUpdate should rate an object
PlaylistController with nedb engine .rateUpdate should unrate an object
PlaylistController with nedb engine .search should search for an object
PlaylistController with nedb engine .state should return object state
PlaylistController with nedb engine .state should return object states
PlaylistController with nedb engine should work
PodcastController with nedb engine .download should (prepare) download an object
PodcastController with nedb engine .download should not (prepare) download an object with unsupported format
PodcastController with nedb engine .favUpdate should fav an object
PodcastController with nedb engine .favUpdate should unfav an object
PodcastController with nedb engine .id should ignore invalid ids
PodcastController with nedb engine .id should return 404 for invalid id
PodcastController with nedb engine .id should return error on invalid id parameter
PodcastController with nedb engine .id should return objects
PodcastController with nedb engine .image should get an image for an object
PodcastController with nedb engine .list should return invalid list error
PodcastController with nedb engine .list should return lists
PodcastController with nedb engine .rateUpdate should not rate with invalid parameters
PodcastController with nedb engine .rateUpdate should rate an object
PodcastController with nedb engine .rateUpdate should unrate an object
PodcastController with nedb engine .search should search for an object
PodcastController with nedb engine .state should return object state
PodcastController with nedb engine .state should return object states
PodcastController with nedb engine should work
RootService with nedb should find roots
SeriesController with nedb engine .albums should handle invalid parameters
SeriesController with nedb engine .albums should return albums
SeriesController with nedb engine .download should (prepare) download an object
SeriesController with nedb engine .download should not (prepare) download an object with unsupported format
SeriesController with nedb engine .favUpdate should fav an object
SeriesController with nedb engine .favUpdate should unfav an object
SeriesController with nedb engine .id should handle metadata not available for series series info in sub-object
SeriesController with nedb engine .id should ignore invalid ids
SeriesController with nedb engine .id should return 404 for invalid id
SeriesController with nedb engine .id should return error on invalid id parameter
SeriesController with nedb engine .id should return objects
SeriesController with nedb engine .id should return series info in sub-object
SeriesController with nedb engine .id should return sub items
SeriesController with nedb engine .image should get an image for an object
SeriesController with nedb engine .index should return an empty index
SeriesController with nedb engine .index should return an index with all series
SeriesController with nedb engine .info should return series info
SeriesController with nedb engine .list should return invalid list error
SeriesController with nedb engine .list should return lists
SeriesController with nedb engine .rateUpdate should not rate with invalid parameters
SeriesController with nedb engine .rateUpdate should rate an object
SeriesController with nedb engine .rateUpdate should unrate an object
SeriesController with nedb engine .search should search for an object
SeriesController with nedb engine .state should return object state
SeriesController with nedb engine .state should return object states
SeriesController with nedb engine .tracks should handle invalid parameters
SeriesController with nedb engine .tracks should return tracks
SeriesService with nedb getImage should return an album image
SessionController with nedb engine should return ping
SessionController with nedb engine should return session info
StreamService with nedb should fail streaming a episode if file does not exists
StreamService with nedb should fail streaming a track if file does not exists
StreamService with nedb should not stream invalid settings
StreamService with nedb should stream a episode
StreamService with nedb should stream a track
TrackController with nedb engine .download should (prepare) download an object
TrackController with nedb engine .download should not (prepare) download an object with unsupported format
TrackController with nedb engine .favUpdate should fav an object
TrackController with nedb engine .favUpdate should unfav an object
TrackController with nedb engine .id should ignore invalid ids
TrackController with nedb engine .id should return 404 for invalid id
TrackController with nedb engine .id should return error on invalid id parameter
TrackController with nedb engine .id should return objects
TrackController with nedb engine .image should get an image for an object
TrackController with nedb engine .list should return invalid list error
TrackController with nedb engine .list should return lists
TrackController with nedb engine .rateUpdate should not rate with invalid parameters
TrackController with nedb engine .rateUpdate should rate an object
TrackController with nedb engine .rateUpdate should unrate an object
TrackController with nedb engine .search should search for an object
TrackController with nedb engine .state should return object state
TrackController with nedb engine .state should return object states
TrackController with nedb engine should work
TrackService with nedb should return a track image
TrackService with nedb should return the track folder
TrackWorker with nedb should move tracks
UserController with nedb engine .favUpdate should fav an object
UserController with nedb engine .favUpdate should unfav an object
UserController with nedb engine .id should ignore invalid ids
UserController with nedb engine .id should return 404 for invalid id
UserController with nedb engine .id should return error on invalid id parameter
UserController with nedb engine .id should return objects
UserController with nedb engine .image should get an image for an object
UserController with nedb engine .rateUpdate should not rate with invalid parameters
UserController with nedb engine .rateUpdate should rate an object
UserController with nedb engine .rateUpdate should unrate an object
UserController with nedb engine .search should search for an object
UserController with nedb engine .state should return object state
UserController with nedb engine .state should return object states
UserService with nedb should set the avatar image
WaveformService with nedb should block creating a waveform while creating a waveform
WaveformService with nedb should return binary
WaveformService with nedb should return json
WaveformService with nedb should return svg for a track
WaveformService with nedb should return svg for an episode
WaveformService with nedb should throw errors
WorkerService with nedb RootScanStrategy.audiobook should rescan
WorkerService with nedb RootScanStrategy.auto should combine close enough artist names
WorkerService with nedb RootScanStrategy.auto should combine/remove artists and albums from different roots
WorkerService with nedb RootScanStrategy.auto should remove missing in the root
WorkerService with nedb RootScanStrategy.auto should remove tracks on scan
WorkerService with nedb RootScanStrategy.auto should rescan
WorkerService with nedb RootScanStrategy.auto should scan added in the root
WorkerService with nedb RootScanStrategy.auto should update/remove artist/albums on changes