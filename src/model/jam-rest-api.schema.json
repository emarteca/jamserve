{
	"type": "object",
	"properties": {
		"GET": {
			"type": "object",
			"properties": {
				"ping": {
					"description": "various: is the api online?",
					"type": "object",
					"properties": {
						"result": {
							"$ref": "#/definitions/Jam.Ping"
						},
						"public": {
							"type": "boolean",
							"enum": [
								true
							]
						}
					},
					"required": [
						"public",
						"result"
					]
				},
				"session": {
					"description": "auth: check the login state",
					"type": "object",
					"properties": {
						"result": {
							"$ref": "#/definitions/Jam.Session"
						},
						"public": {
							"type": "boolean",
							"enum": [
								true
							]
						}
					},
					"required": [
						"public",
						"result"
					]
				},
				"lastfm/lookup": {
					"description": "metadata: lookup lastfm data",
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"metadata.lastfmLookup"
							]
						},
						"params": {
							"$ref": "#/definitions/JamParameters.LastFMLookup"
						},
						"result": {
							"$ref": "#/definitions/LastFM.Result"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"operationId",
						"params",
						"result"
					]
				},
				"acoustid/lookup": {
					"description": "metadata: lookup acoustid data",
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"metadata.acoustidLookup"
							]
						},
						"params": {
							"$ref": "#/definitions/JamParameters.AcoustidLookup"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Acoustid.Result"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"operationId",
						"params",
						"result"
					]
				},
				"brainz/lookup": {
					"description": "metadata: lookup musicbrainz data",
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"metadata.brainzLookup"
							]
						},
						"params": {
							"$ref": "#/definitions/JamParameters.BrainzLookup"
						},
						"result": {
							"$ref": "#/definitions/MusicBrainz.Response"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"operationId",
						"params",
						"result"
					]
				},
				"brainz/search": {
					"description": "metadata: search musicbrainz data",
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"metadata.brainzSearch"
							]
						},
						"params": {
							"$ref": "#/definitions/JamParameters.BrainzSearch"
						},
						"result": {
							"$ref": "#/definitions/MusicBrainz.Response"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"operationId",
						"params",
						"result"
					]
				},
				"autocomplete": {
					"description": "various: autocomplete",
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"autocomplete.autocomplete"
							]
						},
						"params": {
							"$ref": "#/definitions/JamParameters.AutoComplete"
						},
						"result": {
							"$ref": "#/definitions/Jam.AutoComplete"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"operationId",
						"params",
						"result"
					]
				},
				"genre/list": {
					"description": "various: get list of genres found in the library",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Genres"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Genre"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"nowPlaying/list": {
					"description": "various: get list of tracks played by all users",
					"type": "object",
					"properties": {
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.NowPlaying"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								}
							]
						}
					},
					"required": [
						"errors",
						"result"
					]
				},
				"chat/list": {
					"description": "chat: get chat messages",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Chat"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.ChatMessage"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/index": {
					"description": "folder: get the navigation index for folders",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Index"
						},
						"result": {
							"$ref": "#/definitions/Jam.FolderIndex"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/id": {
					"description": "folder: get a folder by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Folder"
						},
						"result": {
							"$ref": "#/definitions/Jam.Folder"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/ids": {
					"description": "folder: get folders by ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Folders"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Folder"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/children": {
					"description": "folder: get tracks and subfolders of a folder by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.FolderChildren"
						},
						"result": {
							"$ref": "#/definitions/Jam.FolderChildren"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/tracks": {
					"description": "folder: get tracks of a folder by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.FolderTracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/subfolders": {
					"description": "folder: get sub folders of a folder by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.FolderSubFolders"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Folder"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/artist/similar": {
					"description": "folder: get similar artist folders of a folder by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Folder"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Folder"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/artist/info": {
					"description": "folder: get extended artist meta data of a folder by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ArtistInfo"
						},
						"result": {
							"$ref": "#/definitions/Jam.ArtistFolderInfo"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/album/info": {
					"description": "folder: get extended album meta data of a folder by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.AlbumInfo"
						},
						"result": {
							"$ref": "#/definitions/Jam.AlbumFolderInfo"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/list": {
					"description": "folder: get a list of folders by list type",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.FolderList"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Folder"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/search": {
					"description": "folder: search folders",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.FolderSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Folder"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/state": {
					"description": "folder: get the user state (fav/rating) by folder id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.State"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/states": {
					"description": "folder: get the user states (fav/rating) by folders ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.States"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/artist/similar/tracks": {
					"description": "folder: get similar tracks of a by artist folder id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.SimilarTracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/id": {
					"description": "track: get a track by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Track"
						},
						"result": {
							"$ref": "#/definitions/Jam.Track"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/ids": {
					"description": "track: get tracks by ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Tracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/tagID3": {
					"description": "track: get an id3 tag by track id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.ID3Tag"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/tagID3s": {
					"description": "track: get id3 tags by track ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.ID3Tags"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/search": {
					"description": "track: search tracks",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.TrackSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/state": {
					"description": "track: get the user state (fav/rating) by track id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.State"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/states": {
					"description": "track: get the user states (fav/rating) by track ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.States"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/list": {
					"description": "track: get a track list by track list type",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.TrackList"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"track/similar": {
					"description": "track: get the similar tracks by track id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.SimilarTracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"episode/id": {
					"description": "episode: get a podcast episode by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Episode"
						},
						"result": {
							"$ref": "#/definitions/Jam.PodcastEpisode"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"episode/ids": {
					"description": "episode: get podcast episodes by ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Episodes"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.PodcastEpisode"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"episode/search": {
					"description": "episode: search podcast episodes",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.EpisodeSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.PodcastEpisode"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"episode/retrieve": {
					"description": "episode: retrieve a podcast episode media file",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"episode/state": {
					"description": "episode: get the user state (fav/rating) by podcast episode id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.State"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"episode/states": {
					"description": "episode: get the user states (fav/rating) by podcast episode ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.States"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"episode/status": {
					"description": "episode: get the episode state (e.g. downloading, new, etc.) by podcast episode id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.PodcastEpisodeStatus"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"episode/list": {
					"description": "episode: get a list of episodes by list type",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PodcastEpisodeList"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.PodcastEpisode"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"podcast/id": {
					"description": "podcast: get a podcast by id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Podcast"
						},
						"result": {
							"$ref": "#/definitions/Jam.Podcast"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"podcast/ids": {
					"description": "podcast: get podcasts by ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Podcasts"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Podcast"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"podcast/status": {
					"description": "podcast: get the podcast state (e.g. downloading, new, etc.) by podcast id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.PodcastStatus"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"podcast/search": {
					"description": "podcast: search podcasts",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PodcastSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Podcast"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"podcast/refreshAll": {
					"description": "podcast: check all podcast feeds for new episodes",
					"type": "object",
					"properties": {
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"roles"
					]
				},
				"podcast/refresh": {
					"description": "podcast: check podcast feeds for new episodes by podcast id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"podcast/state": {
					"description": "podcast: get the user state (fav/rating) by podcast id",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.State"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"podcast/states": {
					"description": "podcast: get the user states (fav/rating) by podcast ids",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.States"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"podcast/list": {
					"description": "podcast: get a list of podcasts by list type",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PodcastList"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Podcast"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"radio/id": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Radio"
						},
						"result": {
							"$ref": "#/definitions/Jam.Radio"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"radio/ids": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Radios"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Radio"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"radio/search": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Radios"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Radio"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"radio/state": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.State"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"radio/states": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.States"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/id": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Artist"
						},
						"result": {
							"$ref": "#/definitions/Jam.Artist"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/ids": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Artists"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Artist"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/search": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ArtistSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Artist"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/state": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.State"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/states": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.States"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/list": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ArtistList"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Artist"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/similar/tracks": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.SimilarTracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/similar": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Artist"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Artist"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/index": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Index"
						},
						"result": {
							"$ref": "#/definitions/Jam.ArtistIndex"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"artist/tracks": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Tracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"album/id": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Album"
						},
						"result": {
							"$ref": "#/definitions/Jam.Album"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"album/ids": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Albums"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Album"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"album/list": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.AlbumList"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Album"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"album/search": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.AlbumSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Album"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"album/state": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.State"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"album/states": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.States"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"album/similar/tracks": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.SimilarTracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"album/tracks": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Tracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"playlist/id": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Playlist"
						},
						"result": {
							"$ref": "#/definitions/Jam.Playlist"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"playlist/ids": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Playlists"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Playlist"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"playlist/search": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PlaylistSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Playlist"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"playlist/state": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.State"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"playlist/states": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"$ref": "#/definitions/Jam.States"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"playlist/tracks": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Tracks"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Track"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"user/search": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.UserSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.User"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"result",
						"roles"
					]
				},
				"user/id": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.User"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"result",
						"roles"
					]
				},
				"user/ids": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.User"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"result",
						"roles"
					]
				},
				"playqueue/get": {
					"description": "playqueue: get a playqueue for calling user",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PlayQueue"
						},
						"result": {
							"$ref": "#/definitions/Jam.PlayQueue"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"root/search": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.RootSearch"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Root"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"root/id": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.Root"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"root/ids": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.IDs"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Root"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"root/scan": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"root/scanAll": {
					"type": "object",
					"properties": {
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"roles"
					]
				},
				"root/status": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"result": {
							"$ref": "#/definitions/Jam.RootStatus"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"folder/download": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Download"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/tar"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/tar"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"folder/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"track/stream": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Stream"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"audio/mpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/flac"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/mp4"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/ogg"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/x-flv"
									]
								}
							],
							"minItems": 5,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"audio/mpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/flac"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/mp4"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/ogg"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/x-flv"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"track/download": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Download"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/tar"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/tar"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"track/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"episode/stream": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Stream"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"audio/mpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/flac"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/mp4"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/ogg"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/x-flv"
									]
								}
							],
							"minItems": 5,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"audio/mpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/flac"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/mp4"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/ogg"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/x-flv"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"episode/download": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Download"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/tar"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/tar"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"episode/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"podcast/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"podcast/download": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Download"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/tar"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/tar"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"artist/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"artist/download": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Download"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/tar"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/tar"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"album/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"album/download": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Download"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/tar"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/tar"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"bookmark/list": {
					"description": "bookmark: get a bookmarks list for the calling user",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.BookmarkList"
						},
						"result": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Jam.Bookmark"
							}
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"playlist/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"playlist/download": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Download"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/tar"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/tar"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"user/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"root/image": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"params"
					]
				},
				"image/{id}-{size}.{format}": {
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"image.image"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.Image"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				},
				"image/{id}-{size}": {
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"image.image"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.PathImageSize"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						},
						"aliasFor": {
							"type": "string",
							"enum": [
								"image/{id}-{size}.{format}"
							]
						}
					},
					"required": [
						"aliasFor",
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				},
				"image/{id}.{format}": {
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"image.image"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.PathImageFormat"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						},
						"aliasFor": {
							"type": "string",
							"enum": [
								"image/{id}-{size}.{format}"
							]
						}
					},
					"required": [
						"aliasFor",
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				},
				"image/{id}": {
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"image.image"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/jpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"image/png"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/jpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"image/png"
										]
									}
								]
							}
						},
						"aliasFor": {
							"type": "string",
							"enum": [
								"image/{id}-{size}.{format}"
							]
						}
					},
					"required": [
						"aliasFor",
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				},
				"stream/{id}.{format}": {
					"description": "media: stream a media file in a format",
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"stream.stream"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.PathStream"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"audio/mpeg"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/flac"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/mp4"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/ogg"
									]
								},
								{
									"type": "string",
									"enum": [
										"audio/x-flv"
									]
								}
							],
							"minItems": 5,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"audio/mpeg"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/flac"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/mp4"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/ogg"
										]
									},
									{
										"type": "string",
										"enum": [
											"audio/x-flv"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				},
				"stream/{id}": {
					"description": "media: stream a media file",
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"stream.stream"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"audio/mpeg"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"audio/mpeg"
										]
									}
								]
							}
						},
						"aliasFor": {
							"type": "string",
							"enum": [
								"stream/{id}.{format}"
							]
						}
					},
					"required": [
						"aliasFor",
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				},
				"waveform/{id}.{format}": {
					"description": "media: get peaks waveform data as svg | json | binary",
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"waveform.waveform"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.Waveform"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"image/svg+xml"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/json"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/binary"
									]
								}
							],
							"minItems": 3,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"image/svg+xml"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/json"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/binary"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				},
				"download/{id}": {
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"download.download"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									}
								]
							}
						},
						"aliasFor": {
							"type": "string",
							"enum": [
								"download/{id}.{format}"
							]
						}
					},
					"required": [
						"aliasFor",
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				},
				"download/{id}.{format}": {
					"type": "object",
					"properties": {
						"operationId": {
							"type": "string",
							"enum": [
								"download.download"
							]
						},
						"pathParams": {
							"$ref": "#/definitions/JamParameters.Download"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"binary": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"application/zip"
									]
								},
								{
									"type": "string",
									"enum": [
										"application/tar"
									]
								}
							],
							"minItems": 2,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"application/zip"
										]
									},
									{
										"type": "string",
										"enum": [
											"application/tar"
										]
									}
								]
							}
						}
					},
					"required": [
						"binary",
						"errors",
						"operationId",
						"pathParams"
					]
				}
			}
		},
		"POST": {
			"type": "object",
			"properties": {
				"login": {
					"description": "auth: login an user",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Login"
						},
						"result": {
							"$ref": "#/definitions/Jam.Session",
							"description": "returns a Jam.Session on success"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						},
						"public": {
							"type": "boolean",
							"enum": [
								true
							]
						}
					},
					"required": [
						"errors",
						"params",
						"public",
						"result"
					]
				},
				"logout": {
					"description": "auth: logout an user",
					"type": "object",
					"properties": {
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								}
							]
						}
					},
					"required": [
						"errors"
					]
				},
				"bookmark/delete": {
					"description": "bookmark: delete a bookmark",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"podcast/delete": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"chat/delete": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ChatDelete"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"playlist/delete": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"user/delete": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"root/delete": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"radio/delete": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"chat/create": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ChatNew"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"track/fav/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Fav"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"track/rate/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Rate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"track/tagID3/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.TagID3Update"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"track/tagID3s/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.TagID3sUpdate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"radio/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.RadioUpdate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"folder/imageUpload/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						},
						"upload": {
							"type": "string",
							"enum": [
								"image"
							]
						}
					},
					"required": [
						"errors",
						"params",
						"roles",
						"upload"
					]
				},
				"folder/imageUrl/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.FolderEditImg"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"folder/name/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.FolderEditName"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"folder/fav/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Fav"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"folder/rate/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Rate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"album/fav/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Fav"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"album/rate/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Rate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"artist/fav/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Fav"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"artist/rate/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Rate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"episode/fav/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Fav"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"episode/rate/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Rate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"bookmark/create": {
					"description": "bookmark: create a bookmark",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.BookmarkCreate"
						},
						"result": {
							"$ref": "#/definitions/Jam.Bookmark"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"radio/create": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.RadioNew"
						},
						"result": {
							"$ref": "#/definitions/Jam.Radio"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"result",
						"roles"
					]
				},
				"podcast/create": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PodcastNew"
						},
						"result": {
							"$ref": "#/definitions/Jam.Podcast"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"result",
						"roles"
					]
				},
				"podcast/fav/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Fav"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"podcast/rate/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Rate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"playlist/create": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PlaylistNew"
						},
						"result": {
							"$ref": "#/definitions/Jam.Playlist"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						}
					},
					"required": [
						"errors",
						"params",
						"result"
					]
				},
				"playlist/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PlaylistUpdate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"playlist/fav/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Fav"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"playlist/rate/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.Rate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"playqueue/update": {
					"description": "playqueue: create/update the playqueue for calling user",
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.PlayQueueSet"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors",
						"params"
					]
				},
				"playqueue/delete": {
					"description": "playqueue: delete the playqueue for calling user",
					"type": "object",
					"properties": {
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						}
					},
					"required": [
						"errors"
					]
				},
				"user/create": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.UserNew"
						},
						"result": {
							"$ref": "#/definitions/Jam.User"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"result",
						"roles"
					]
				},
				"user/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.UserUpdate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				},
				"user/imageUpload/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.ID"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"upload": {
							"type": "string",
							"enum": [
								"image"
							]
						}
					},
					"required": [
						"errors",
						"params",
						"upload"
					]
				},
				"root/create": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.RootNew"
						},
						"result": {
							"$ref": "#/definitions/Jam.Root"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"result",
						"roles"
					]
				},
				"root/update": {
					"type": "object",
					"properties": {
						"params": {
							"$ref": "#/definitions/JamParameters.RootUpdate"
						},
						"errors": {
							"anyOf": [
								{
									"$ref": "#/definitions/JamApiErrorUnauthorized"
								},
								{
									"$ref": "#/definitions/JamApiErrorGeneric"
								},
								{
									"$ref": "#/definitions/JamApiErrorParameters"
								},
								{
									"$ref": "#/definitions/JamApiErrorNotFound"
								}
							]
						},
						"roles": {
							"type": "array",
							"items": [
								{
									"type": "string",
									"enum": [
										"admin"
									]
								}
							],
							"minItems": 1,
							"additionalItems": {
								"anyOf": [
									{
										"type": "string",
										"enum": [
											"admin"
										]
									}
								]
							}
						}
					},
					"required": [
						"errors",
						"params",
						"roles"
					]
				}
			}
		}
	},
	"required": [
		"GET",
		"POST"
	],
	"definitions": {
		"Jam.Ping": {
			"type": "object",
			"properties": {
				"version": {
					"type": "string"
				}
			},
			"required": [
				"version"
			]
		},
		"Jam.Session": {
			"type": "object",
			"properties": {
				"version": {
					"type": "string"
				},
				"user": {
					"$ref": "#/definitions/Jam.User"
				},
				"jwt": {
					"type": "string"
				},
				"allowedCookieDomains": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"allowedCookieDomains",
				"version"
			]
		},
		"Jam.User": {
			"type": "object",
			"properties": {
				"email": {
					"type": "string"
				},
				"roles": {
					"$ref": "#/definitions/Jam.Roles"
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"created",
				"email",
				"id",
				"name",
				"roles"
			]
		},
		"Jam.Roles": {
			"type": "object",
			"properties": {
				"stream": {
					"type": "boolean"
				},
				"upload": {
					"type": "boolean"
				},
				"podcast": {
					"type": "boolean"
				},
				"admin": {
					"type": "boolean"
				}
			}
		},
		"Jam.State": {
			"type": "object",
			"properties": {
				"played": {
					"type": "number"
				},
				"lastplayed": {
					"type": "number"
				},
				"faved": {
					"type": "number"
				},
				"rated": {
					"type": "number"
				}
			}
		},
		"JamParameters.LastFMLookup": {
			"type": "object",
			"properties": {
				"type": {
					"description": "lookup by lastfm type",
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id",
				"type"
			]
		},
		"LastFM.Result": {
			"type": "object",
			"properties": {
				"similartracks": {
					"$ref": "#/definitions/LastFM.SimilarTracks"
				},
				"toptracks": {
					"$ref": "#/definitions/LastFM.TopTracks"
				},
				"artist": {
					"$ref": "#/definitions/LastFM.Artist"
				},
				"album": {
					"$ref": "#/definitions/LastFM.Album"
				},
				"track": {
					"$ref": "#/definitions/LastFM.Track"
				}
			}
		},
		"LastFM.SimilarTracks": {
			"type": "object",
			"properties": {
				"track": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Track"
					}
				},
				"artist": {
					"type": "string"
				}
			},
			"required": [
				"artist",
				"track"
			]
		},
		"LastFM.Track": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"url": {
					"type": "string"
				},
				"duration": {
					"type": "string"
				},
				"playcount": {
					"type": "string"
				},
				"mbid": {
					"type": "string"
				},
				"match": {
					"type": "string"
				},
				"rank": {
					"type": "string"
				},
				"streamable": {
					"$ref": "#/definitions/LastFM.Streamable"
				},
				"artist": {
					"$ref": "#/definitions/LastFM.ArtistInfo"
				},
				"image": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Image"
					}
				}
			},
			"required": [
				"artist",
				"duration",
				"image",
				"match",
				"mbid",
				"name",
				"playcount",
				"rank",
				"streamable",
				"url"
			]
		},
		"LastFM.Streamable": {
			"type": "object",
			"properties": {
				"url": {
					"type": "string"
				},
				"fulltrack": {
					"type": "string"
				}
			},
			"required": [
				"fulltrack",
				"url"
			]
		},
		"LastFM.ArtistInfo": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"mbid": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			},
			"required": [
				"mbid",
				"name",
				"url"
			]
		},
		"LastFM.Image": {
			"type": "object",
			"properties": {
				"url": {
					"type": "string"
				},
				"size": {
					"type": "string"
				}
			},
			"required": [
				"size",
				"url"
			]
		},
		"LastFM.TopTracks": {
			"type": "object",
			"properties": {
				"track": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.TopTrack"
					}
				},
				"artist": {
					"type": "string"
				}
			},
			"required": [
				"artist",
				"track"
			]
		},
		"LastFM.TopTrack": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"mbid": {
					"type": "string"
				},
				"url": {
					"type": "string"
				},
				"streamable": {
					"type": "string"
				},
				"playcount": {
					"type": "number"
				},
				"listeners": {
					"type": "number"
				},
				"image": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Image"
					}
				},
				"artist": {
					"$ref": "#/definitions/LastFM.ArtistInfo"
				},
				"rank": {
					"type": "string"
				}
			},
			"required": [
				"artist",
				"image",
				"listeners",
				"mbid",
				"name",
				"playcount",
				"rank",
				"streamable",
				"url"
			]
		},
		"LastFM.Artist": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"mbid": {
					"type": "string"
				},
				"url": {
					"type": "string"
				},
				"image": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Image"
					}
				},
				"streamable": {
					"type": "string"
				},
				"ontour": {
					"type": "string"
				},
				"stats": {
					"$ref": "#/definitions/LastFM.Stats"
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Tag"
					}
				},
				"bio": {
					"$ref": "#/definitions/LastFM.Biography"
				},
				"similar": {
					"$ref": "#/definitions/LastFM.SimilarArtists"
				}
			},
			"required": [
				"image",
				"mbid",
				"name",
				"ontour",
				"streamable",
				"tags",
				"url"
			]
		},
		"LastFM.Stats": {
			"type": "object",
			"properties": {
				"listeners": {
					"type": "string"
				},
				"playcount": {
					"type": "string"
				}
			},
			"required": [
				"listeners",
				"playcount"
			]
		},
		"LastFM.Tag": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"url": {
					"type": "string"
				}
			},
			"required": [
				"name",
				"url"
			]
		},
		"LastFM.Biography": {
			"type": "object",
			"properties": {
				"published": {
					"type": "string"
				},
				"summary": {
					"type": "string"
				},
				"content": {
					"type": "string"
				},
				"links": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Link"
					}
				}
			},
			"required": [
				"content",
				"published",
				"summary"
			]
		},
		"LastFM.Link": {
			"type": "object",
			"properties": {
				"url": {
					"type": "string"
				},
				"rel": {
					"type": "string"
				},
				"href": {
					"type": "string"
				}
			},
			"required": [
				"href",
				"rel",
				"url"
			]
		},
		"LastFM.SimilarArtists": {
			"type": "object",
			"properties": {
				"artist": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.SimilarArtist"
					}
				}
			}
		},
		"LastFM.SimilarArtist": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"url": {
					"type": "string"
				},
				"image": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Image"
					}
				}
			},
			"required": [
				"image",
				"name",
				"url"
			]
		},
		"LastFM.Album": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"artist": {
					"type": "string"
				},
				"mbid": {
					"type": "string"
				},
				"url": {
					"type": "string"
				},
				"image": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Image"
					}
				},
				"listeners": {
					"type": "string"
				},
				"playcount": {
					"type": "string"
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Track"
					}
				},
				"tags": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/LastFM.Tag"
					}
				},
				"wiki": {
					"$ref": "#/definitions/LastFM.Wiki"
				}
			},
			"required": [
				"artist",
				"image",
				"listeners",
				"mbid",
				"name",
				"playcount",
				"tracks",
				"url"
			]
		},
		"LastFM.Wiki": {
			"type": "object",
			"properties": {
				"published": {
					"type": "string"
				},
				"summary": {
					"type": "string"
				},
				"content": {
					"type": "string"
				}
			},
			"required": [
				"content",
				"published",
				"summary"
			]
		},
		"JamApiErrorUnauthorized": {
			"type": "object",
			"properties": {
				"error": {
					"type": "number",
					"enum": [
						401
					]
				},
				"text": {
					"type": "string",
					"enum": [
						"unauthorized"
					]
				}
			},
			"required": [
				"error",
				"text"
			]
		},
		"JamApiErrorGeneric": {
			"type": "object",
			"properties": {
				"error": {
					"type": "number",
					"enum": [
						500
					]
				},
				"text": {
					"type": "string",
					"enum": [
						"internal server error"
					]
				}
			},
			"required": [
				"error",
				"text"
			]
		},
		"JamApiErrorParameters": {
			"type": "object",
			"properties": {
				"error": {
					"type": "number",
					"enum": [
						400
					]
				},
				"text": {
					"type": "string",
					"enum": [
						"parameter is missing or invalid"
					]
				}
			},
			"required": [
				"error",
				"text"
			]
		},
		"JamParameters.AcoustidLookup": {
			"type": "object",
			"properties": {
				"inc": {
					"description": "comma-separated acoustid includes",
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"Acoustid.Result": {
			"type": "object",
			"properties": {
				"recordings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Recording"
					}
				},
				"score": {
					"type": "number"
				},
				"id": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"recordings",
				"score"
			]
		},
		"Acoustid.Recording": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"sources": {
					"type": "number"
				},
				"artists": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Artist"
					}
				},
				"duration": {
					"type": "number"
				},
				"releasegroups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Releasegroup"
					}
				},
				"title": {
					"type": "string"
				}
			},
			"required": [
				"artists",
				"duration",
				"id",
				"releasegroups",
				"sources",
				"title"
			]
		},
		"Acoustid.Artist": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"name"
			]
		},
		"Acoustid.Releasegroup": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"releases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Release"
					}
				},
				"title": {
					"type": "string"
				},
				"secondarytypes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"type": {
					"type": "string"
				},
				"artists": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Artist"
					}
				}
			},
			"required": [
				"artists",
				"id",
				"releases",
				"secondarytypes",
				"title",
				"type"
			]
		},
		"Acoustid.Release": {
			"type": "object",
			"properties": {
				"mediums": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Medium"
					}
				},
				"id": {
					"type": "string"
				},
				"track_count": {
					"type": "number"
				},
				"medium_count": {
					"type": "number"
				},
				"releaseevents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Releaseevent"
					}
				},
				"country": {
					"type": "string"
				},
				"date": {
					"$ref": "#/definitions/Acoustid.AcousticDate"
				},
				"title": {
					"type": "string"
				}
			},
			"required": [
				"country",
				"date",
				"id",
				"medium_count",
				"mediums",
				"releaseevents",
				"title",
				"track_count"
			]
		},
		"Acoustid.Medium": {
			"type": "object",
			"properties": {
				"position": {
					"type": "number"
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Track"
					}
				},
				"track_count": {
					"type": "number"
				},
				"format": {
					"type": "string"
				},
				"title": {
					"type": "string"
				}
			},
			"required": [
				"format",
				"position",
				"title",
				"track_count",
				"tracks"
			]
		},
		"Acoustid.Track": {
			"type": "object",
			"properties": {
				"position": {
					"type": "number"
				},
				"artists": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Acoustid.Artist"
					}
				},
				"id": {
					"type": "string"
				},
				"title": {
					"type": "string"
				}
			},
			"required": [
				"artists",
				"id",
				"position",
				"title"
			]
		},
		"Acoustid.Releaseevent": {
			"type": "object",
			"properties": {
				"date": {
					"$ref": "#/definitions/Acoustid.AcousticDate"
				},
				"country": {
					"type": "string"
				}
			},
			"required": [
				"country",
				"date"
			]
		},
		"Acoustid.AcousticDate": {
			"type": "object",
			"properties": {
				"month": {
					"type": "number"
				},
				"year": {
					"type": "number"
				},
				"day": {
					"type": "number"
				}
			},
			"required": [
				"month",
				"year"
			]
		},
		"JamParameters.BrainzLookup": {
			"type": "object",
			"properties": {
				"type": {
					"description": "lookup by musicbrainz type",
					"type": "string"
				},
				"inc": {
					"description": "comma-separated musicbrainz includes",
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id",
				"type"
			]
		},
		"MusicBrainz.Response": {
			"type": "object",
			"properties": {
				"release": {
					"$ref": "#/definitions/MusicBrainz.Release"
				},
				"releases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Release"
					}
				},
				"releaseGroup": {
					"$ref": "#/definitions/MusicBrainz.ReleaseGroup"
				},
				"releaseGroups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ReleaseGroup"
					}
				},
				"recording": {
					"$ref": "#/definitions/MusicBrainz.Recording"
				},
				"recordings": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Recording"
					}
				},
				"count": {
					"type": "number"
				},
				"offset": {
					"type": "number"
				},
				"created": {
					"type": "string"
				}
			}
		},
		"MusicBrainz.Release": {
			"type": "object",
			"properties": {
				"media": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ReleaseMedia"
					}
				},
				"score": {
					"type": "number"
				},
				"count": {
					"type": "number"
				},
				"id": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"sortName": {
					"type": "string"
				},
				"status": {
					"type": "string"
				},
				"statusId": {
					"type": "string"
				},
				"date": {
					"type": "string"
				},
				"country": {
					"type": "string"
				},
				"packaging": {
					"type": "string"
				},
				"packagingId": {
					"type": "string"
				},
				"disambiguation": {
					"type": "string"
				},
				"annotation": {
					"type": "string"
				},
				"quality": {
					"type": "string"
				},
				"barcode": {
					"type": "string"
				},
				"asin": {
					"type": "string"
				},
				"textRepresentation": {
					"type": "object",
					"properties": {
						"language": {
							"type": "string"
						},
						"script": {
							"type": "string"
						}
					},
					"required": [
						"language",
						"script"
					]
				},
				"trackCount": {
					"type": "number"
				},
				"artistCredit": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ArtistCredit"
					}
				},
				"releaseGroup": {
					"$ref": "#/definitions/MusicBrainz.ReleaseGroupBase"
				},
				"labelInfo": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Label"
					}
				},
				"tags": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"count": {
								"type": "number"
							},
							"name": {
								"type": "string"
							}
						},
						"required": [
							"count",
							"name"
						]
					}
				},
				"releaseEvents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ReleaseEvent"
					}
				},
				"coverArtArchive": {
					"type": "object",
					"properties": {
						"front": {
							"type": "boolean"
						},
						"back": {
							"type": "boolean"
						},
						"darkened": {
							"type": "boolean"
						},
						"artwork": {
							"type": "boolean"
						},
						"count": {
							"type": "number"
						}
					},
					"required": [
						"artwork",
						"back",
						"count",
						"darkened",
						"front"
					]
				}
			},
			"required": [
				"artistCredit",
				"id",
				"labelInfo",
				"media",
				"releaseEvents",
				"releaseGroup",
				"sortName",
				"status",
				"tags",
				"textRepresentation",
				"title",
				"trackCount"
			]
		},
		"MusicBrainz.ReleaseMedia": {
			"type": "object",
			"properties": {
				"format": {
					"type": "string"
				},
				"formatId": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"discCount": {
					"type": "number"
				},
				"trackCount": {
					"type": "number"
				},
				"position": {
					"type": "number"
				},
				"trackOffset": {
					"type": "number"
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ReleaseTrack"
					}
				},
				"discs": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Disc"
					}
				}
			},
			"required": [
				"discCount",
				"format",
				"position",
				"trackCount",
				"trackOffset"
			]
		},
		"MusicBrainz.ReleaseTrack": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"position": {
					"type": "number"
				},
				"length": {
					"type": "number"
				},
				"number": {
					"type": "string"
				},
				"recording": {
					"$ref": "#/definitions/MusicBrainz.RecordingBase"
				},
				"artistCredit": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ArtistCredit"
					}
				}
			},
			"required": [
				"id",
				"length",
				"number",
				"position",
				"title"
			]
		},
		"MusicBrainz.RecordingBase": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"disambiguation": {
					"type": "string"
				},
				"length": {
					"type": "number"
				},
				"video": {
					"type": "boolean"
				},
				"rating": {
					"$ref": "#/definitions/MusicBrainz.Rating"
				},
				"aliases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Alias"
					}
				},
				"artistCredit": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ArtistCredit"
					}
				},
				"isrcs": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"disambiguation",
				"id",
				"length",
				"title",
				"video"
			]
		},
		"MusicBrainz.Rating": {
			"type": "object",
			"properties": {
				"votesCount": {
					"type": "number"
				},
				"value": {
					"type": "number"
				}
			},
			"required": [
				"value",
				"votesCount"
			]
		},
		"MusicBrainz.Alias": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"sortName": {
					"type": "string"
				},
				"locale": {
					"type": "string"
				},
				"type": {
					"type": "string"
				},
				"typeId": {
					"type": "string"
				},
				"primary": {
					"type": "string"
				},
				"beginDate": {
					"type": "string"
				},
				"endDate": {
					"type": "string"
				},
				"ended": {
					"type": "boolean"
				}
			},
			"required": [
				"ended",
				"name"
			]
		},
		"MusicBrainz.ArtistCredit": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"joinphrase": {
					"type": "string"
				},
				"artist": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"sortName": {
							"type": "string"
						},
						"disambiguation": {
							"type": "string"
						},
						"aliases": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/MusicBrainz.Alias"
							}
						}
					},
					"required": [
						"aliases",
						"disambiguation",
						"id",
						"name",
						"sortName"
					]
				}
			},
			"required": [
				"artist",
				"joinphrase",
				"name"
			]
		},
		"MusicBrainz.Disc": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"sectors": {
					"type": "number"
				},
				"offsetCount": {
					"type": "number"
				},
				"offsets": {
					"type": "array",
					"items": {
						"type": "number"
					}
				}
			},
			"required": [
				"id",
				"offsetCount",
				"offsets",
				"sectors"
			]
		},
		"MusicBrainz.ReleaseGroupBase": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"disambiguation": {
					"type": "string"
				},
				"firstReleaseDate": {
					"type": "string"
				},
				"primaryType": {
					"type": "string"
				},
				"primaryTypeId": {
					"type": "string"
				},
				"secondaryTypes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"secondaryTypeIds": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"rating": {
					"$ref": "#/definitions/MusicBrainz.Rating"
				},
				"artistCredit": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ArtistCredit"
					}
				}
			},
			"required": [
				"id",
				"primaryType",
				"title"
			]
		},
		"MusicBrainz.Label": {
			"type": "object",
			"properties": {
				"catalogNumber": {
					"type": "string"
				},
				"label": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"disambiguation": {
							"type": "string"
						},
						"labelCode": {
							"type": "string"
						},
						"sortName": {
							"type": "string"
						}
					},
					"required": [
						"id",
						"name"
					]
				},
				"aliases": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string"
							},
							"sortName": {
								"type": "string"
							},
							"ended": {
								"type": "boolean"
							}
						},
						"required": [
							"ended",
							"name",
							"sortName"
						]
					}
				}
			},
			"required": [
				"aliases",
				"catalogNumber",
				"label"
			]
		},
		"MusicBrainz.ReleaseEvent": {
			"type": "object",
			"properties": {
				"date": {
					"type": "string"
				},
				"area": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"sortName": {
							"type": "string"
						},
						"disambiguation": {
							"type": "string"
						},
						"iso31661Codes": {
							"type": "array",
							"items": {
								"type": "string"
							}
						}
					},
					"required": [
						"id",
						"iso31661Codes",
						"name",
						"sortName"
					]
				}
			},
			"required": [
				"area",
				"date"
			]
		},
		"MusicBrainz.ReleaseGroup": {
			"type": "object",
			"properties": {
				"releases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Release"
					}
				},
				"score": {
					"type": "number"
				},
				"count": {
					"type": "number"
				},
				"id": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"disambiguation": {
					"type": "string"
				},
				"firstReleaseDate": {
					"type": "string"
				},
				"primaryType": {
					"type": "string"
				},
				"primaryTypeId": {
					"type": "string"
				},
				"secondaryTypes": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"secondaryTypeIds": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"rating": {
					"$ref": "#/definitions/MusicBrainz.Rating"
				},
				"artistCredit": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ArtistCredit"
					}
				}
			},
			"required": [
				"id",
				"primaryType",
				"title"
			]
		},
		"MusicBrainz.Recording": {
			"type": "object",
			"properties": {
				"releases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Release"
					}
				},
				"score": {
					"type": "number"
				},
				"count": {
					"type": "number"
				},
				"id": {
					"type": "string"
				},
				"title": {
					"type": "string"
				},
				"disambiguation": {
					"type": "string"
				},
				"length": {
					"type": "number"
				},
				"video": {
					"type": "boolean"
				},
				"rating": {
					"$ref": "#/definitions/MusicBrainz.Rating"
				},
				"aliases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Alias"
					}
				},
				"artistCredit": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.ArtistCredit"
					}
				},
				"isrcs": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"disambiguation",
				"id",
				"length",
				"title",
				"video"
			]
		},
		"JamParameters.BrainzSearch": {
			"type": "object",
			"properties": {
				"type": {
					"description": "search by musicbrainz type",
					"type": "string"
				},
				"recording": {
					"description": "search by recording name",
					"type": "string"
				},
				"releasegroup": {
					"description": "search by releasegroup name",
					"type": "string"
				},
				"release": {
					"description": "search by release name",
					"type": "string"
				},
				"artist": {
					"description": "search by artist name",
					"type": "string"
				},
				"tracks": {
					"description": "search by number of release tracks",
					"type": "integer"
				}
			},
			"required": [
				"type"
			]
		},
		"JamParameters.AutoComplete": {
			"type": "object",
			"properties": {
				"query": {
					"description": "query to complete",
					"type": "string"
				},
				"track": {
					"description": "amount of track names to complete",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"artist": {
					"description": "amount of artist names to complete",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"album": {
					"description": "amount of album names to complete",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"folder": {
					"description": "amount of folder names to complete",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"playlist": {
					"description": "amount of playlist names to complete",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"podcast": {
					"description": "amount of podcast names to complete",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"episode": {
					"description": "amount of episode names to complete",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				}
			},
			"required": [
				"query"
			]
		},
		"Jam.AutoComplete": {
			"type": "object",
			"properties": {
				"tracks": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						]
					}
				},
				"artists": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						]
					}
				},
				"albums": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						]
					}
				},
				"folders": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						]
					}
				},
				"playlists": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						]
					}
				},
				"podcasts": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						]
					}
				},
				"episodes": {
					"type": "array",
					"items": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						]
					}
				}
			}
		},
		"JamApiErrorNotFound": {
			"type": "object",
			"properties": {
				"error": {
					"type": "number",
					"enum": [
						404
					]
				},
				"text": {
					"type": "string",
					"enum": [
						"requested object not found"
					]
				}
			},
			"required": [
				"error",
				"text"
			]
		},
		"JamParameters.Genres": {
			"type": "object",
			"properties": {
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				}
			}
		},
		"Jam.Genre": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"trackCount": {
					"type": "number"
				},
				"albumCount": {
					"type": "number"
				},
				"artistCount": {
					"type": "number"
				}
			},
			"required": [
				"albumCount",
				"artistCount",
				"name",
				"trackCount"
			]
		},
		"Jam.NowPlaying": {
			"type": "object",
			"properties": {
				"username": {
					"type": "string"
				},
				"minutesAgo": {
					"type": "number"
				},
				"track": {
					"$ref": "#/definitions/Jam.Track"
				}
			},
			"required": [
				"minutesAgo",
				"username"
			]
		},
		"Jam.Track": {
			"type": "object",
			"properties": {
				"duration": {
					"type": "number"
				},
				"tag": {
					"$ref": "#/definitions/Jam.TrackTag"
				},
				"tagID3": {
					"$ref": "#/definitions/Jam.ID3Tag"
				},
				"media": {
					"$ref": "#/definitions/Jam.TrackMedia"
				},
				"parentID": {
					"type": "string"
				},
				"artistID": {
					"type": "string"
				},
				"albumID": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"created",
				"duration",
				"id",
				"name",
				"parentID"
			]
		},
		"Jam.TrackTag": {
			"type": "object",
			"properties": {
				"title": {
					"type": "string"
				},
				"album": {
					"type": "string"
				},
				"artist": {
					"type": "string"
				},
				"genre": {
					"type": "string"
				},
				"year": {
					"type": "number"
				},
				"trackNr": {
					"type": "number"
				},
				"musicbrainz": {
					"$ref": "#/definitions/Jam.TrackMBTag"
				}
			}
		},
		"Jam.TrackMBTag": {
			"type": "object",
			"properties": {
				"trackID": {
					"type": "string"
				},
				"recordingID": {
					"type": "string"
				},
				"releaseTrackID": {
					"type": "string"
				},
				"artistID": {
					"type": "string"
				},
				"albumID": {
					"type": "string"
				}
			}
		},
		"Jam.ID3Tag": {
			"type": "object",
			"properties": {
				"version": {
					"type": "number"
				},
				"frames": {
					"$ref": "#/definitions/ID3v2FrameValues.Frames"
				}
			},
			"required": [
				"frames",
				"version"
			]
		},
		"ID3v2FrameValues.Frames": {
			"type": "object",
			"additionalProperties": {
				"type": "array",
				"items": {}
			},
			"properties": {
				"AENC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.AudioEncryption"
					}
				},
				"APIC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Pic"
					}
				},
				"ASPI": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"BUF": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"CDM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"CHAP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Chapter"
					}
				},
				"CM1": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"CNT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Number"
					}
				},
				"COM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.LangDescText"
					}
				},
				"COMM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.LangDescText"
					}
				},
				"COMR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"CRA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.AudioEncryption"
					}
				},
				"CRM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"CTOC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.ChapterToc"
					}
				},
				"ENCR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"EQU": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"EQUA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"ETC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.EventTimingCodes"
					}
				},
				"ETCO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.EventTimingCodes"
					}
				},
				"GEO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.GEOB"
					}
				},
				"GEOB": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.GEOB"
					}
				},
				"GRID": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"IPL": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.TextList"
					}
				},
				"IPLS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.TextList"
					}
				},
				"LINK": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Link"
					}
				},
				"LNK": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Link"
					}
				},
				"MCDI": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"MLL": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"MLLT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"NCO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"NCON": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"OWNE": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"PCNT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Number"
					}
				},
				"PCS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Number"
					}
				},
				"PCST": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Number"
					}
				},
				"PIC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Pic"
					}
				},
				"POP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Popularimeter"
					}
				},
				"POPM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Popularimeter"
					}
				},
				"POSS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"PRI": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.IdBin"
					}
				},
				"PRIV": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.IdBin"
					}
				},
				"RBUF": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"REV": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"RGAD": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.ReplayGainAdjustment"
					}
				},
				"RVA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.RVA"
					}
				},
				"RVA2": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.RVA2"
					}
				},
				"RVAD": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.RVA"
					}
				},
				"RVRB": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"SEEK": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"SIGN": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"SLT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.SynchronisedLyricsEvent"
					}
				},
				"STC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"SYLT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.SynchronisedLyrics"
					}
				},
				"SYTC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"TAL": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TALB": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TBP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TBPM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TCM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TCMP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bool"
					}
				},
				"TCO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.TextList"
					}
				},
				"TCOM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TCON": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.TextList"
					}
				},
				"TCOP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TCP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bool"
					}
				},
				"TCR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDAT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDES": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDLY": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDOR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDRC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDRL": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDTG": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TDY": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TEN": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TENC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TEXT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TFLT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TGID": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TID": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TIM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TIME": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TIPL": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.TextList"
					}
				},
				"TIT1": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TIT2": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TIT3": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TKE": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TKEY": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TKWD": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"TLA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TLAN": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TLE": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TLEN": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TMCL": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.TextList"
					}
				},
				"TMED": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TMOO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TMT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOAL": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOF": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOFN": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOL": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOLY": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOPE": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TORY": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TOWN": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TP1": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.TextList"
					}
				},
				"TP2": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TP3": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TP4": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TPA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TPB": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TPE1": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.TextList"
					}
				},
				"TPE2": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TPE3": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TPE4": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TPOS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TPRO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TPUB": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TRC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TRCK": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TRD": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TRDA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TRK": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TRSN": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TRSO": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TS2": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSI": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSIZ": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSO2": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSOA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSOC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSOP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSOT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSRC": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TSSE": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TST": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TT1": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TT2": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TT3": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TXT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TXX": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.IdText"
					}
				},
				"TXXX": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.IdText"
					}
				},
				"TYE": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"TYER": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"UFI": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.IdAscii"
					}
				},
				"UFID": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.IdAscii"
					}
				},
				"ULT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.LangDescText"
					}
				},
				"USER": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"USLT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.LangDescText"
					}
				},
				"WAF": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WAR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WAS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WCM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WCOM": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WCOP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WCP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WFD": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"WFED": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"WOAF": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WOAR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WOAS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WORS": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WPAY": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WPB": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WPUB": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Ascii"
					}
				},
				"WXX": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.IdText"
					}
				},
				"WXXX": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.IdText"
					}
				},
				"XDOR": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"XHD3": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Bin"
					}
				},
				"XSOA": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"XSOP": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				},
				"XSOT": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.Text"
					}
				}
			}
		},
		"ID3v2FrameValues.AudioEncryption": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"previewStart": {
					"type": "number"
				},
				"previewLength": {
					"type": "number"
				},
				"bin": {
					"type": "string"
				}
			},
			"required": [
				"bin",
				"id",
				"previewLength",
				"previewStart"
			]
		},
		"ID3v2FrameValues.Pic": {
			"type": "object",
			"properties": {
				"description": {
					"type": "string"
				},
				"pictureType": {
					"type": "number"
				},
				"url": {
					"type": "string"
				},
				"bin": {
					"type": "string"
				},
				"mimeType": {
					"type": "string"
				}
			},
			"required": [
				"description",
				"pictureType"
			]
		},
		"ID3v2FrameValues.Bin": {
			"type": "object",
			"properties": {
				"bin": {
					"type": "string"
				}
			},
			"required": [
				"bin"
			]
		},
		"ID3v2FrameValues.Chapter": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"start": {
					"type": "number"
				},
				"end": {
					"type": "number"
				},
				"offset": {
					"type": "number"
				},
				"offsetEnd": {
					"type": "number"
				}
			},
			"required": [
				"end",
				"id",
				"offset",
				"offsetEnd",
				"start"
			]
		},
		"ID3v2FrameValues.Text": {
			"type": "object",
			"properties": {
				"text": {
					"type": "string"
				}
			},
			"required": [
				"text"
			]
		},
		"ID3v2FrameValues.Number": {
			"type": "object",
			"properties": {
				"num": {
					"type": "number"
				}
			},
			"required": [
				"num"
			]
		},
		"ID3v2FrameValues.LangDescText": {
			"type": "object",
			"properties": {
				"language": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"text": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"language",
				"text"
			]
		},
		"ID3v2FrameValues.ChapterToc": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"ordered": {
					"type": "boolean"
				},
				"topLevel": {
					"type": "boolean"
				},
				"children": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"children",
				"id",
				"ordered",
				"topLevel"
			]
		},
		"ID3v2FrameValues.EventTimingCodes": {
			"type": "object",
			"properties": {
				"format": {
					"type": "number"
				},
				"events": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.EventTimingCodesEvent"
					}
				}
			},
			"required": [
				"events",
				"format"
			]
		},
		"ID3v2FrameValues.EventTimingCodesEvent": {
			"type": "object",
			"properties": {
				"type": {
					"type": "number"
				},
				"timestamp": {
					"type": "number"
				}
			},
			"required": [
				"timestamp",
				"type"
			]
		},
		"ID3v2FrameValues.GEOB": {
			"type": "object",
			"properties": {
				"filename": {
					"type": "string"
				},
				"mimeType": {
					"type": "string"
				},
				"contentDescription": {
					"type": "string"
				},
				"bin": {
					"type": "string"
				}
			},
			"required": [
				"bin",
				"contentDescription",
				"filename",
				"mimeType"
			]
		},
		"ID3v2FrameValues.TextList": {
			"type": "object",
			"properties": {
				"list": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"list"
			]
		},
		"ID3v2FrameValues.Link": {
			"type": "object",
			"properties": {
				"url": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"additional": {
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"additional",
				"id",
				"url"
			]
		},
		"ID3v2FrameValues.Popularimeter": {
			"type": "object",
			"properties": {
				"rating": {
					"type": "number"
				},
				"count": {
					"type": "number"
				},
				"email": {
					"type": "string"
				}
			},
			"required": [
				"count",
				"email",
				"rating"
			]
		},
		"ID3v2FrameValues.IdBin": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"bin": {
					"type": "string"
				}
			},
			"required": [
				"bin",
				"id"
			]
		},
		"ID3v2FrameValues.ReplayGainAdjustment": {
			"type": "object",
			"properties": {
				"peak": {
					"type": "number"
				},
				"radioAdjustment": {
					"type": "number"
				},
				"audiophileAdjustment": {
					"type": "number"
				}
			},
			"required": [
				"audiophileAdjustment",
				"peak",
				"radioAdjustment"
			]
		},
		"ID3v2FrameValues.RVA": {
			"type": "object",
			"properties": {
				"right": {
					"type": "number"
				},
				"left": {
					"type": "number"
				},
				"peakRight": {
					"type": "number"
				},
				"peakLeft": {
					"type": "number"
				},
				"rightBack": {
					"type": "number"
				},
				"leftBack": {
					"type": "number"
				},
				"peakRightBack": {
					"type": "number"
				},
				"peakLeftBack": {
					"type": "number"
				},
				"center": {
					"type": "number"
				},
				"peakCenter": {
					"type": "number"
				},
				"bass": {
					"type": "number"
				},
				"peakBass": {
					"type": "number"
				}
			},
			"required": [
				"left",
				"right"
			]
		},
		"ID3v2FrameValues.RVA2": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"channels": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.RVA2Channel"
					}
				}
			},
			"required": [
				"channels",
				"id"
			]
		},
		"ID3v2FrameValues.RVA2Channel": {
			"type": "object",
			"properties": {
				"type": {
					"type": "number"
				},
				"adjustment": {
					"type": "number"
				},
				"peak": {
					"type": "number"
				}
			},
			"required": [
				"adjustment",
				"type"
			]
		},
		"ID3v2FrameValues.SynchronisedLyricsEvent": {
			"type": "object",
			"properties": {
				"timestamp": {
					"type": "number"
				},
				"text": {
					"type": "string"
				}
			},
			"required": [
				"text",
				"timestamp"
			]
		},
		"ID3v2FrameValues.SynchronisedLyrics": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"language": {
					"type": "string"
				},
				"timestampFormat": {
					"type": "number"
				},
				"contentType": {
					"type": "number"
				},
				"events": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/ID3v2FrameValues.SynchronisedLyricsEvent"
					}
				}
			},
			"required": [
				"contentType",
				"events",
				"id",
				"language",
				"timestampFormat"
			]
		},
		"ID3v2FrameValues.Bool": {
			"type": "object",
			"properties": {
				"bool": {
					"type": "boolean"
				}
			},
			"required": [
				"bool"
			]
		},
		"ID3v2FrameValues.IdText": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"text": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"text"
			]
		},
		"ID3v2FrameValues.IdAscii": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"text": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"text"
			]
		},
		"ID3v2FrameValues.Ascii": {
			"type": "object",
			"properties": {
				"text": {
					"type": "string"
				}
			},
			"required": [
				"text"
			]
		},
		"Jam.TrackMedia": {
			"type": "object",
			"properties": {
				"bitRate": {
					"type": "number"
				},
				"format": {
					"type": "string"
				},
				"channels": {
					"type": "number"
				},
				"sampleRate": {
					"type": "number"
				}
			},
			"required": [
				"bitRate",
				"channels",
				"format",
				"sampleRate"
			]
		},
		"JamParameters.Chat": {
			"type": "object",
			"properties": {
				"since": {
					"description": "filter by post time (unix time)",
					"minimum": 0,
					"type": "integer"
				}
			}
		},
		"Jam.ChatMessage": {
			"type": "object",
			"properties": {
				"username": {
					"type": "string"
				},
				"userID": {
					"type": "string"
				},
				"time": {
					"type": "number"
				},
				"message": {
					"type": "string"
				}
			},
			"required": [
				"message",
				"time",
				"userID",
				"username"
			]
		},
		"JamParameters.Index": {
			"type": "object",
			"properties": {
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				}
			}
		},
		"Jam.FolderIndex": {
			"type": "object",
			"properties": {
				"lastModified": {
					"type": "number"
				},
				"groups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.FolderIndexGroup"
					}
				}
			},
			"required": [
				"groups",
				"lastModified"
			]
		},
		"Jam.FolderIndexGroup": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.FolderIndexEntry"
					}
				}
			},
			"required": [
				"entries",
				"name"
			]
		},
		"Jam.FolderIndexEntry": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"folderID": {
					"type": "string"
				},
				"trackCount": {
					"type": "number"
				}
			},
			"required": [
				"folderID",
				"name",
				"trackCount"
			]
		},
		"JamParameters.Folder": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"folderTag": {
					"description": "include tag on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderState": {
					"description": "include user states (fav,rate) on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderHealth": {
					"description": "include information about the meta data quality on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderParents": {
					"description": "include a list of all parent folder ids on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfo": {
					"description": "include extended meta data on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfoSimilar": {
					"description": "include similar folders list  on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderChildren": {
					"description": "include tracks and sub folders on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderSubfolders": {
					"description": "include sub folders on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderTracks": {
					"description": "include tracks on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"Jam.Folder": {
			"type": "object",
			"properties": {
				"parentID": {
					"type": "string"
				},
				"type": {
					"$ref": "#/definitions/Jam.FolderType"
				},
				"tag": {
					"$ref": "#/definitions/Jam.FolderTag"
				},
				"health": {
					"$ref": "#/definitions/Jam.FolderHealth"
				},
				"artistInfo": {
					"$ref": "#/definitions/Jam.ArtistFolderInfo"
				},
				"albumInfo": {
					"$ref": "#/definitions/Jam.AlbumInfo"
				},
				"folders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Folder"
					}
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Track"
					}
				},
				"parents": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.FolderParent"
					}
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"created",
				"id",
				"name",
				"type"
			]
		},
		"Jam.FolderType": {
			"enum": [
				"album",
				"artist",
				"extras",
				"multialbum",
				"multiartist",
				"unknown"
			],
			"type": "string"
		},
		"Jam.FolderTag": {
			"type": "object",
			"properties": {
				"album": {
					"type": "string"
				},
				"artist": {
					"type": "string"
				},
				"genre": {
					"type": "string"
				},
				"year": {
					"type": "number"
				},
				"musicbrainz": {
					"type": "object",
					"properties": {
						"artistID": {
							"type": "string"
						},
						"albumID": {
							"type": "string"
						}
					}
				}
			}
		},
		"Jam.FolderHealth": {
			"type": "object",
			"properties": {
				"problems": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.FolderProblem"
					}
				}
			}
		},
		"Jam.FolderProblem": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"name"
			]
		},
		"Jam.ArtistFolderInfo": {
			"type": "object",
			"properties": {
				"similar": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Folder"
					}
				},
				"description": {
					"type": "string"
				},
				"lastFmUrl": {
					"type": "string"
				},
				"smallImageUrl": {
					"type": "string"
				},
				"mediumImageUrl": {
					"type": "string"
				},
				"largeImageUrl": {
					"type": "string"
				}
			}
		},
		"Jam.AlbumInfo": {
			"type": "object",
			"properties": {
				"releases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Release"
					}
				},
				"description": {
					"type": "string"
				},
				"lastFmUrl": {
					"type": "string"
				},
				"smallImageUrl": {
					"type": "string"
				},
				"mediumImageUrl": {
					"type": "string"
				},
				"largeImageUrl": {
					"type": "string"
				}
			}
		},
		"Jam.FolderParent": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"id",
				"name"
			]
		},
		"JamParameters.Folders": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"folderTag": {
					"description": "include tag on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderState": {
					"description": "include user states (fav,rate) on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderHealth": {
					"description": "include information about the meta data quality on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderParents": {
					"description": "include a list of all parent folder ids on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfo": {
					"description": "include extended meta data on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfoSimilar": {
					"description": "include similar folders list  on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderChildren": {
					"description": "include tracks and sub folders on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderSubfolders": {
					"description": "include sub folders on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderTracks": {
					"description": "include tracks on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids"
			]
		},
		"JamParameters.FolderChildren": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				},
				"folderTag": {
					"description": "include tag on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderState": {
					"description": "include user states (fav,rate) on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderHealth": {
					"description": "include information about the meta data quality on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderParents": {
					"description": "include a list of all parent folder ids on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfo": {
					"description": "include extended meta data on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfoSimilar": {
					"description": "include similar folders list  on folder(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"Jam.FolderChildren": {
			"type": "object",
			"properties": {
				"folders": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Folder"
					}
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Track"
					}
				}
			}
		},
		"JamParameters.FolderTracks": {
			"type": "object",
			"properties": {
				"recursive": {
					"description": "include tracks of a sub folders",
					"default": false,
					"type": "boolean"
				},
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids"
			]
		},
		"JamParameters.FolderSubFolders": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"folderTag": {
					"description": "include tag on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderState": {
					"description": "include user states (fav,rate) on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderHealth": {
					"description": "include information about the meta data quality on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderParents": {
					"description": "include a list of all parent folder ids on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfo": {
					"description": "include extended meta data on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfoSimilar": {
					"description": "include similar folders list  on folder(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.ArtistInfo": {
			"type": "object",
			"properties": {
				"similar": {
					"description": "include similar artists",
					"default": false,
					"type": "boolean"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id",
				"similar"
			]
		},
		"JamParameters.AlbumInfo": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"Jam.AlbumFolderInfo": {
			"type": "object",
			"properties": {
				"releases": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/MusicBrainz.Release"
					}
				},
				"description": {
					"type": "string"
				},
				"lastFmUrl": {
					"type": "string"
				},
				"smallImageUrl": {
					"type": "string"
				},
				"mediumImageUrl": {
					"type": "string"
				},
				"largeImageUrl": {
					"type": "string"
				}
			}
		},
		"JamParameters.FolderList": {
			"type": "object",
			"properties": {
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"parentID": {
					"description": "filter by parent folder id",
					"type": "string"
				},
				"artist": {
					"description": "filter by artist name",
					"type": "string"
				},
				"title": {
					"description": "filter by title",
					"type": "string"
				},
				"album": {
					"description": "filter by album name",
					"type": "string"
				},
				"genre": {
					"description": "filter by genre",
					"type": "string"
				},
				"newerThan": {
					"description": "filter by creation date (unix time)",
					"minimum": 0,
					"type": "integer"
				},
				"fromYear": {
					"description": "filter by year",
					"minimum": 0,
					"type": "integer"
				},
				"toYear": {
					"description": "filter by year",
					"minimum": 0,
					"type": "integer"
				},
				"type": {
					"description": "filter by folder type",
					"enum": [
						"album",
						"artist",
						"extras",
						"multialbum",
						"multiartist",
						"unknown"
					],
					"type": "string"
				},
				"types": {
					"description": "filter by folder types",
					"type": "array",
					"items": {
						"enum": [
							"album",
							"artist",
							"extras",
							"multialbum",
							"multiartist",
							"unknown"
						],
						"type": "string"
					}
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"folderTag": {
					"description": "include tag on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderState": {
					"description": "include user states (fav,rate) on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderHealth": {
					"description": "include information about the meta data quality on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderParents": {
					"description": "include a list of all parent folder ids on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfo": {
					"description": "include extended meta data on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfoSimilar": {
					"description": "include similar folders list  on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"list": {
					"$ref": "#/definitions/JamParameters.ListType",
					"description": "the type of the item list"
				},
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				}
			},
			"required": [
				"list"
			]
		},
		"JamParameters.ListType": {
			"enum": [
				"avghighest",
				"faved",
				"frequent",
				"highest",
				"random",
				"recent"
			],
			"type": "string"
		},
		"JamParameters.FolderSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"parentID": {
					"description": "filter by parent folder id",
					"type": "string"
				},
				"artist": {
					"description": "filter by artist name",
					"type": "string"
				},
				"title": {
					"description": "filter by title",
					"type": "string"
				},
				"album": {
					"description": "filter by album name",
					"type": "string"
				},
				"genre": {
					"description": "filter by genre",
					"type": "string"
				},
				"newerThan": {
					"description": "filter by creation date (unix time)",
					"minimum": 0,
					"type": "integer"
				},
				"fromYear": {
					"description": "filter by year",
					"minimum": 0,
					"type": "integer"
				},
				"toYear": {
					"description": "filter by year",
					"minimum": 0,
					"type": "integer"
				},
				"type": {
					"description": "filter by folder type",
					"enum": [
						"album",
						"artist",
						"extras",
						"multialbum",
						"multiartist",
						"unknown"
					],
					"type": "string"
				},
				"types": {
					"description": "filter by folder types",
					"type": "array",
					"items": {
						"enum": [
							"album",
							"artist",
							"extras",
							"multialbum",
							"multiartist",
							"unknown"
						],
						"type": "string"
					}
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"folderChildren": {
					"description": "include tracks and sub folders on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderSubfolders": {
					"description": "include sub folders on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderTracks": {
					"description": "include tracks on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				},
				"folderTag": {
					"description": "include tag on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderState": {
					"description": "include user states (fav,rate) on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderHealth": {
					"description": "include information about the meta data quality on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderParents": {
					"description": "include a list of all parent folder ids on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfo": {
					"description": "include extended meta data on folder(s)",
					"default": false,
					"type": "boolean"
				},
				"folderInfoSimilar": {
					"description": "include similar folders list  on folder(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"JamParameters.ID": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.IDs": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"ids"
			]
		},
		"Jam.States": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Jam.State"
			}
		},
		"JamParameters.SimilarTracks": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				},
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.Track": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.Tracks": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids"
			]
		},
		"Jam.ID3Tags": {
			"type": "object",
			"additionalProperties": {
				"$ref": "#/definitions/Jam.ID3Tag"
			}
		},
		"JamParameters.TrackSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"artist": {
					"description": "filter by artist name",
					"type": "string"
				},
				"artistID": {
					"description": "filter by artist id",
					"type": "string"
				},
				"parentID": {
					"description": "filter by parent folder id",
					"type": "string"
				},
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"title": {
					"description": "filter by title",
					"type": "string"
				},
				"album": {
					"description": "filter by album",
					"type": "string"
				},
				"genre": {
					"description": "filter by genre",
					"type": "string"
				},
				"newerThan": {
					"description": "filter by creation date",
					"type": "integer"
				},
				"fromYear": {
					"description": "filter by year",
					"type": "integer"
				},
				"toYear": {
					"description": "filter by year",
					"type": "integer"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"JamParameters.TrackList": {
			"type": "object",
			"properties": {
				"artist": {
					"description": "filter by artist name",
					"type": "string"
				},
				"artistID": {
					"description": "filter by artist id",
					"type": "string"
				},
				"parentID": {
					"description": "filter by parent folder id",
					"type": "string"
				},
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"title": {
					"description": "filter by title",
					"type": "string"
				},
				"album": {
					"description": "filter by album",
					"type": "string"
				},
				"genre": {
					"description": "filter by genre",
					"type": "string"
				},
				"newerThan": {
					"description": "filter by creation date",
					"type": "integer"
				},
				"fromYear": {
					"description": "filter by year",
					"type": "integer"
				},
				"toYear": {
					"description": "filter by year",
					"type": "integer"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				},
				"list": {
					"$ref": "#/definitions/JamParameters.ListType",
					"description": "the type of the item list"
				},
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				}
			},
			"required": [
				"list"
			]
		},
		"JamParameters.Episode": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"Jam.PodcastEpisode": {
			"type": "object",
			"properties": {
				"podcastID": {
					"type": "string"
				},
				"status": {
					"$ref": "#/definitions/Jam.PodcastEpisodeStatusType"
				},
				"date": {
					"type": "number"
				},
				"summary": {
					"type": "string"
				},
				"guid": {
					"type": "string"
				},
				"author": {
					"type": "string"
				},
				"link": {
					"type": "string"
				},
				"errorMessage": {
					"type": "string"
				},
				"duration": {
					"type": "number"
				},
				"tag": {
					"$ref": "#/definitions/Jam.TrackTag"
				},
				"tagID3": {
					"$ref": "#/definitions/Jam.ID3Tag"
				},
				"media": {
					"$ref": "#/definitions/Jam.TrackMedia"
				},
				"parentID": {
					"type": "string"
				},
				"artistID": {
					"type": "string"
				},
				"albumID": {
					"type": "string"
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"created",
				"date",
				"duration",
				"id",
				"name",
				"parentID",
				"podcastID",
				"status"
			]
		},
		"Jam.PodcastEpisodeStatusType": {
			"enum": [
				"completed",
				"deleted",
				"downloading",
				"error",
				"new"
			],
			"type": "string"
		},
		"JamParameters.Episodes": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids"
			]
		},
		"JamParameters.EpisodeSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"podcastID": {
					"description": "filter by podcast id",
					"type": "string"
				},
				"name": {
					"description": "filter by title",
					"type": "string"
				},
				"status": {
					"description": "filter by status",
					"type": "string"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"Jam.PodcastEpisodeStatus": {
			"type": "object",
			"properties": {
				"status": {
					"$ref": "#/definitions/Jam.PodcastEpisodeStatusType"
				}
			},
			"required": [
				"status"
			]
		},
		"JamParameters.PodcastEpisodeList": {
			"type": "object",
			"properties": {
				"podcastID": {
					"description": "filter by podcast id",
					"type": "string"
				},
				"name": {
					"description": "filter by title",
					"type": "string"
				},
				"status": {
					"description": "filter by status",
					"type": "string"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				},
				"list": {
					"$ref": "#/definitions/JamParameters.ListType",
					"description": "the type of the item list"
				},
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				}
			},
			"required": [
				"list"
			]
		},
		"JamParameters.Podcast": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"podcastState": {
					"description": "include user states (fav,rate) on podcast(s)",
					"default": false,
					"type": "boolean"
				},
				"podcastEpisodes": {
					"description": "include episodes on podcast(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"Jam.Podcast": {
			"type": "object",
			"properties": {
				"url": {
					"type": "string"
				},
				"status": {
					"$ref": "#/definitions/Jam.PodcastStatusType"
				},
				"lastCheck": {
					"type": "number"
				},
				"errorMessage": {
					"type": "string"
				},
				"description": {
					"type": "string"
				},
				"episodes": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.PodcastEpisode"
					}
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"created",
				"id",
				"name",
				"status",
				"url"
			]
		},
		"Jam.PodcastStatusType": {
			"enum": [
				"completed",
				"downloading",
				"error",
				"new"
			],
			"type": "string"
		},
		"JamParameters.Podcasts": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"podcastState": {
					"description": "include user states (fav,rate) on podcast(s)",
					"default": false,
					"type": "boolean"
				},
				"podcastEpisodes": {
					"description": "include episodes on podcast(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids"
			]
		},
		"Jam.PodcastStatus": {
			"type": "object",
			"properties": {
				"status": {
					"$ref": "#/definitions/Jam.PodcastStatusType"
				},
				"lastCheck": {
					"type": "number"
				}
			},
			"required": [
				"status"
			]
		},
		"JamParameters.PodcastSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"url": {
					"description": "filter by podcast url",
					"type": "string"
				},
				"title": {
					"description": "filter by podcast title",
					"type": "string"
				},
				"status": {
					"description": "filter by podcast status",
					"type": "string"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"podcastState": {
					"description": "include user states (fav,rate) on podcast(s)",
					"default": false,
					"type": "boolean"
				},
				"podcastEpisodes": {
					"description": "include episodes on podcast(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"JamParameters.PodcastList": {
			"type": "object",
			"properties": {
				"url": {
					"description": "filter by podcast url",
					"type": "string"
				},
				"title": {
					"description": "filter by podcast title",
					"type": "string"
				},
				"status": {
					"description": "filter by podcast status",
					"type": "string"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"podcastState": {
					"description": "include user states (fav,rate) on podcast(s)",
					"default": false,
					"type": "boolean"
				},
				"podcastEpisodes": {
					"description": "include episodes on podcast(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				},
				"list": {
					"$ref": "#/definitions/JamParameters.ListType",
					"description": "the type of the item list"
				},
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				}
			},
			"required": [
				"list"
			]
		},
		"JamParameters.Radio": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"radioState": {
					"description": "include user states (fav,rate) on radio(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id",
				"radioState"
			]
		},
		"Jam.Radio": {
			"type": "object",
			"properties": {
				"url": {
					"type": "string"
				},
				"homepage": {
					"type": "string"
				},
				"created": {
					"type": "number"
				},
				"changed": {
					"type": "number"
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				}
			},
			"required": [
				"changed",
				"created",
				"id",
				"name",
				"url"
			]
		},
		"JamParameters.Radios": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"radioState": {
					"description": "include user states (fav,rate) on radio(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids",
				"radioState"
			]
		},
		"JamParameters.Artist": {
			"type": "object",
			"properties": {
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"artistAlbums": {
					"description": "include albums on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistAlbumIDs": {
					"description": "include album ids on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistState": {
					"description": "include user states (fav,rate) on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistTracks": {
					"description": "include tracks on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistTracksIDs": {
					"description": "include track ids on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistInfo": {
					"description": "include extended meta data on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistInfoSimilar": {
					"description": "include similar artists on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTracks": {
					"description": "include tracks on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTrackIDs": {
					"description": "include track ids on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumState": {
					"description": "include user states (fav,rate) on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumInfo": {
					"description": "include extended meta data on album(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"Jam.Artist": {
			"type": "object",
			"properties": {
				"albumCount": {
					"type": "number"
				},
				"trackCount": {
					"type": "number"
				},
				"musicbrainz": {
					"type": "object",
					"properties": {
						"artistID": {
							"type": "string"
						}
					}
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Track"
					}
				},
				"trackIDs": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"albumIDs": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"albums": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Album"
					}
				},
				"info": {
					"$ref": "#/definitions/Jam.ArtistInfo"
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"albumCount",
				"created",
				"id",
				"name",
				"trackCount"
			]
		},
		"Jam.Album": {
			"type": "object",
			"properties": {
				"artist": {
					"type": "string"
				},
				"tag": {
					"$ref": "#/definitions/Jam.AlbumTag"
				},
				"trackCount": {
					"type": "number"
				},
				"artistID": {
					"type": "string"
				},
				"trackIDs": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Track"
					}
				},
				"info": {
					"$ref": "#/definitions/Jam.AlbumInfo"
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"artistID",
				"created",
				"id",
				"name",
				"trackCount"
			]
		},
		"Jam.AlbumTag": {
			"type": "object",
			"properties": {
				"duration": {
					"type": "number"
				},
				"created": {
					"type": "number"
				},
				"genre": {
					"type": "string"
				},
				"year": {
					"type": "number"
				},
				"musicbrainz": {
					"type": "object",
					"properties": {
						"artistID": {
							"type": "string"
						},
						"albumID": {
							"type": "string"
						}
					}
				}
			},
			"required": [
				"created",
				"duration"
			]
		},
		"Jam.ArtistInfo": {
			"type": "object",
			"properties": {
				"similar": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Artist"
					}
				},
				"description": {
					"type": "string"
				},
				"lastFmUrl": {
					"type": "string"
				},
				"smallImageUrl": {
					"type": "string"
				},
				"mediumImageUrl": {
					"type": "string"
				},
				"largeImageUrl": {
					"type": "string"
				}
			}
		},
		"JamParameters.Artists": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"artistAlbums": {
					"description": "include albums on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistAlbumIDs": {
					"description": "include album ids on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistState": {
					"description": "include user states (fav,rate) on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistTracks": {
					"description": "include tracks on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistTracksIDs": {
					"description": "include track ids on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistInfo": {
					"description": "include extended meta data on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistInfoSimilar": {
					"description": "include similar artists on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTracks": {
					"description": "include tracks on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTrackIDs": {
					"description": "include track ids on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumState": {
					"description": "include user states (fav,rate) on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumInfo": {
					"description": "include extended meta data on album(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids"
			]
		},
		"JamParameters.ArtistSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"name": {
					"description": "filter by name",
					"type": "string"
				},
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"albumID": {
					"description": "filter by album id",
					"type": "string"
				},
				"mbArtistID": {
					"description": "filter by musicbrainz album id",
					"type": "string"
				},
				"newerThan": {
					"description": "filter by creation date (unix time)",
					"minimum": 0,
					"type": "integer"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"artistAlbums": {
					"description": "include albums on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistAlbumIDs": {
					"description": "include album ids on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistState": {
					"description": "include user states (fav,rate) on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistTracks": {
					"description": "include tracks on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistTracksIDs": {
					"description": "include track ids on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistInfo": {
					"description": "include extended meta data on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistInfoSimilar": {
					"description": "include similar artists on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTracks": {
					"description": "include tracks on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTrackIDs": {
					"description": "include track ids on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumState": {
					"description": "include user states (fav,rate) on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumInfo": {
					"description": "include extended meta data on album(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"JamParameters.ArtistList": {
			"type": "object",
			"properties": {
				"name": {
					"description": "filter by name",
					"type": "string"
				},
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"albumID": {
					"description": "filter by album id",
					"type": "string"
				},
				"mbArtistID": {
					"description": "filter by musicbrainz album id",
					"type": "string"
				},
				"newerThan": {
					"description": "filter by creation date (unix time)",
					"minimum": 0,
					"type": "integer"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"artistAlbums": {
					"description": "include albums on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistAlbumIDs": {
					"description": "include album ids on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistState": {
					"description": "include user states (fav,rate) on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistTracks": {
					"description": "include tracks on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistTracksIDs": {
					"description": "include track ids on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistInfo": {
					"description": "include extended meta data on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"artistInfoSimilar": {
					"description": "include similar artists on artist(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTracks": {
					"description": "include tracks on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTrackIDs": {
					"description": "include track ids on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumState": {
					"description": "include user states (fav,rate) on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumInfo": {
					"description": "include extended meta data on album(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				},
				"list": {
					"$ref": "#/definitions/JamParameters.ListType",
					"description": "the type of the item list"
				},
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				}
			},
			"required": [
				"list"
			]
		},
		"Jam.ArtistIndex": {
			"type": "object",
			"properties": {
				"lastModified": {
					"type": "number"
				},
				"groups": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.ArtistIndexGroup"
					}
				}
			},
			"required": [
				"groups",
				"lastModified"
			]
		},
		"Jam.ArtistIndexGroup": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"entries": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.ArtistIndexEntry"
					}
				}
			},
			"required": [
				"entries",
				"name"
			]
		},
		"Jam.ArtistIndexEntry": {
			"type": "object",
			"properties": {
				"name": {
					"type": "string"
				},
				"artistID": {
					"type": "string"
				},
				"trackCount": {
					"type": "number"
				}
			},
			"required": [
				"artistID",
				"name",
				"trackCount"
			]
		},
		"JamParameters.Album": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"albumTracks": {
					"description": "include tracks on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTrackIDs": {
					"description": "include track ids on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumState": {
					"description": "include user states (fav,rate) on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumInfo": {
					"description": "include extended meta data on album(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.Albums": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"albumTracks": {
					"description": "include tracks on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTrackIDs": {
					"description": "include track ids on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumState": {
					"description": "include user states (fav,rate) on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumInfo": {
					"description": "include extended meta data on album(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids"
			]
		},
		"JamParameters.AlbumList": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"albumTracks": {
					"description": "include tracks on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTrackIDs": {
					"description": "include track ids on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumState": {
					"description": "include user states (fav,rate) on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumInfo": {
					"description": "include extended meta data on album(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				},
				"name": {
					"description": "filter by name",
					"type": "string"
				},
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"artist": {
					"description": "filter by artist name",
					"type": "string"
				},
				"artistID": {
					"description": "filter by artist id",
					"type": "string"
				},
				"trackID": {
					"description": "filter by track id",
					"type": "string"
				},
				"mbAlbumID": {
					"description": "filter by album id",
					"type": "string"
				},
				"mbArtistID": {
					"description": "filter by artist id",
					"type": "string"
				},
				"genre": {
					"description": "filter by genre",
					"type": "string"
				},
				"newerThan": {
					"description": "filter by creation date (unix time)",
					"minimum": 0,
					"type": "integer"
				},
				"fromYear": {
					"description": "filter by year",
					"minimum": 0,
					"type": "integer"
				},
				"toYear": {
					"description": "filter by year",
					"minimum": 0,
					"type": "integer"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"list": {
					"$ref": "#/definitions/JamParameters.ListType",
					"description": "the type of the item list"
				}
			},
			"required": [
				"list"
			]
		},
		"JamParameters.AlbumSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"name": {
					"description": "filter by name",
					"type": "string"
				},
				"rootID": {
					"description": "filter by root id",
					"type": "string"
				},
				"artist": {
					"description": "filter by artist name",
					"type": "string"
				},
				"artistID": {
					"description": "filter by artist id",
					"type": "string"
				},
				"trackID": {
					"description": "filter by track id",
					"type": "string"
				},
				"mbAlbumID": {
					"description": "filter by album id",
					"type": "string"
				},
				"mbArtistID": {
					"description": "filter by artist id",
					"type": "string"
				},
				"genre": {
					"description": "filter by genre",
					"type": "string"
				},
				"newerThan": {
					"description": "filter by creation date (unix time)",
					"minimum": 0,
					"type": "integer"
				},
				"fromYear": {
					"description": "filter by year",
					"minimum": 0,
					"type": "integer"
				},
				"toYear": {
					"description": "filter by year",
					"minimum": 0,
					"type": "integer"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"albumTracks": {
					"description": "include tracks on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumTrackIDs": {
					"description": "include track ids on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumState": {
					"description": "include user states (fav,rate) on album(s)",
					"default": false,
					"type": "boolean"
				},
				"albumInfo": {
					"description": "include extended meta data on album(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"JamParameters.Playlist": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the item id",
					"type": "string"
				},
				"playlistTracks": {
					"description": "include tracks on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"playlistTracksIDs": {
					"description": "include track ids on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"playlistState": {
					"description": "include user states (fav,rate) on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"id"
			]
		},
		"Jam.Playlist": {
			"type": "object",
			"properties": {
				"userID": {
					"type": "string"
				},
				"isPublic": {
					"type": "boolean"
				},
				"comment": {
					"type": "string"
				},
				"duration": {
					"type": "number"
				},
				"trackCount": {
					"type": "number"
				},
				"changed": {
					"type": "number"
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Track"
					}
				},
				"trackIDs": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"changed",
				"created",
				"duration",
				"id",
				"isPublic",
				"name",
				"trackCount",
				"userID"
			]
		},
		"JamParameters.Playlists": {
			"type": "object",
			"properties": {
				"ids": {
					"description": "array of item ids",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"playlistTracks": {
					"description": "include tracks on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"playlistTracksIDs": {
					"description": "include track ids on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"playlistState": {
					"description": "include user states (fav,rate) on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"ids"
			]
		},
		"JamParameters.PlaylistSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"name": {
					"description": "filter by playlist name",
					"type": "string"
				},
				"isPublic": {
					"description": "filter by public state",
					"type": "boolean"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				},
				"playlistTracks": {
					"description": "include tracks on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"playlistTracksIDs": {
					"description": "include track ids on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"playlistState": {
					"description": "include user states (fav,rate) on playlist(s)",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"JamParameters.UserSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"name": {
					"description": "filter by user name",
					"type": "string"
				},
				"isAdmin": {
					"description": "filter by user admin role",
					"type": "boolean"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"JamParameters.PlayQueue": {
			"type": "object",
			"properties": {
				"playQueueTracks": {
					"description": "include tracks on playqueue",
					"default": false,
					"type": "boolean"
				},
				"playQueueTrackIDs": {
					"description": "include track ids on playqueue",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"Jam.PlayQueue": {
			"type": "object",
			"properties": {
				"trackIDs": {
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"tracks": {
					"type": "array",
					"items": {
						"$ref": "#/definitions/Jam.Track"
					}
				},
				"currentID": {
					"type": "string"
				},
				"position": {
					"type": "number"
				},
				"changed": {
					"type": "number"
				},
				"changedBy": {
					"type": "string"
				}
			},
			"required": [
				"changed",
				"changedBy"
			]
		},
		"JamParameters.RootSearch": {
			"type": "object",
			"properties": {
				"offset": {
					"description": "get back items from position",
					"default": 0,
					"minimum": 0,
					"type": "integer"
				},
				"amount": {
					"description": "get back number of items",
					"minimum": 1,
					"type": "integer"
				},
				"query": {
					"description": "search query",
					"type": "string"
				},
				"sortField": {
					"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
					"type": "string"
				},
				"sortDescending": {
					"description": "the sort direction",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"Jam.Root": {
			"type": "object",
			"properties": {
				"path": {
					"type": "string"
				},
				"status": {
					"$ref": "#/definitions/Jam.RootStatus"
				},
				"id": {
					"type": "string"
				},
				"state": {
					"$ref": "#/definitions/Jam.State"
				},
				"name": {
					"type": "string"
				},
				"created": {
					"type": "number"
				}
			},
			"required": [
				"created",
				"id",
				"name",
				"path",
				"status"
			]
		},
		"Jam.RootStatus": {
			"type": "object",
			"properties": {
				"lastScan": {
					"type": "number"
				},
				"error": {
					"type": "string"
				},
				"scanning": {
					"type": "boolean"
				}
			},
			"required": [
				"lastScan"
			]
		},
		"JamParameters.Download": {
			"type": "object",
			"properties": {
				"format": {
					"description": "format of download stream",
					"default": "zip",
					"enum": [
						"tar",
						"zip"
					],
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.Image": {
			"type": "object",
			"properties": {
				"format": {
					"description": "format of the image",
					"default": "png",
					"enum": [
						"bmp",
						"jpeg",
						"jpg",
						"png",
						"tiff"
					],
					"type": "string"
				},
				"size": {
					"description": "size of the image",
					"minimum": 16,
					"maximum": 1024,
					"type": "integer"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.Stream": {
			"type": "object",
			"properties": {
				"maxBitRate": {
					"description": "maximal bitrate if transcoding (in Kbps)",
					"minimum": 10,
					"type": "integer"
				},
				"format": {
					"description": "format of audio stream",
					"default": "mp3",
					"enum": [
						"mp3"
					],
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.BookmarkList": {
			"type": "object",
			"properties": {
				"bookmarkTrack": {
					"description": "include the track of the bookmark",
					"default": false,
					"type": "boolean"
				},
				"trackMedia": {
					"description": "include media informations on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackTag": {
					"description": "include tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackID3": {
					"description": "include id3 tag on track(s)",
					"default": false,
					"type": "boolean"
				},
				"trackState": {
					"description": "include user states (fav,rate) on track(s)",
					"default": false,
					"type": "boolean"
				}
			}
		},
		"Jam.Bookmark": {
			"type": "object",
			"properties": {
				"id": {
					"type": "string"
				},
				"track": {
					"$ref": "#/definitions/Jam.Track"
				},
				"trackID": {
					"type": "string"
				},
				"position": {
					"type": "number"
				},
				"comment": {
					"type": "string"
				},
				"created": {
					"type": "number"
				},
				"changed": {
					"type": "number"
				}
			},
			"required": [
				"changed",
				"created",
				"id",
				"position",
				"trackID"
			]
		},
		"JamParameters.PathImageSize": {
			"type": "object",
			"properties": {
				"size": {
					"description": "size of the image",
					"minimum": 16,
					"maximum": 1024,
					"type": "integer"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.PathImageFormat": {
			"type": "object",
			"properties": {
				"format": {
					"description": "format of the image",
					"default": "png",
					"enum": [
						"bmp",
						"jpeg",
						"jpg",
						"png",
						"tiff"
					],
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.PathStream": {
			"type": "object",
			"properties": {
				"format": {
					"description": "format of audio stream",
					"default": "mp3",
					"enum": [
						"mp3"
					],
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.Waveform": {
			"type": "object",
			"properties": {
				"format": {
					"description": "format of waveform data",
					"default": "svg",
					"enum": [
						"dat",
						"json",
						"svg"
					],
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.Login": {
			"type": "object",
			"properties": {
				"username": {
					"description": "user name",
					"type": "string"
				},
				"password": {
					"description": "password",
					"type": "string"
				},
				"client": {
					"description": "client name",
					"type": "string"
				}
			},
			"required": [
				"client",
				"password",
				"username"
			]
		},
		"JamParameters.ChatDelete": {
			"type": "object",
			"properties": {
				"time": {
					"description": "time of the post (unix time)",
					"minimum": 0,
					"type": "integer"
				}
			},
			"required": [
				"time"
			]
		},
		"JamParameters.ChatNew": {
			"type": "object",
			"properties": {
				"message": {
					"description": "the chat message",
					"type": "string"
				}
			},
			"required": [
				"message"
			]
		},
		"JamParameters.Fav": {
			"description": "Change the fav user state",
			"type": "object",
			"properties": {
				"remove": {
					"description": "add or remove the item fav",
					"default": false,
					"type": "boolean"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.Rate": {
			"description": "Change the rating user state",
			"type": "object",
			"properties": {
				"rating": {
					"description": "the rating for the item",
					"minimum": 0,
					"maximum": 5,
					"type": "integer"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id",
				"rating"
			]
		},
		"JamParameters.TagID3Update": {
			"type": "object",
			"properties": {
				"id": {
					"description": "the id of the track",
					"type": "string"
				},
				"tag": {
					"$ref": "#/definitions/Jam.ID3Tag",
					"description": "the id3 tag to store in the track"
				}
			},
			"required": [
				"id",
				"tag"
			]
		},
		"JamParameters.TagID3sUpdate": {
			"type": "object",
			"properties": {
				"tagID3s": {
					"description": "array of id3 tag updates",
					"type": "array",
					"items": {
						"$ref": "#/definitions/JamParameters.TagID3Update"
					}
				}
			},
			"required": [
				"tagID3s"
			]
		},
		"JamParameters.RadioUpdate": {
			"type": "object",
			"properties": {
				"name": {
					"description": "radio name",
					"type": "string"
				},
				"url": {
					"description": "radio stream url",
					"type": "string"
				},
				"homepage": {
					"description": "radio homepage url",
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.FolderEditImg": {
			"description": "Set the image of a folder by url",
			"type": "object",
			"properties": {
				"url": {
					"description": "url of an image",
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id",
				"url"
			]
		},
		"JamParameters.FolderEditName": {
			"description": "Rename the folder",
			"type": "object",
			"properties": {
				"name": {
					"description": "the new folder name",
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id",
				"name"
			]
		},
		"JamParameters.BookmarkCreate": {
			"type": "object",
			"properties": {
				"trackID": {
					"description": "a track id",
					"type": "string"
				},
				"comment": {
					"description": "a comment",
					"type": "string"
				},
				"position": {
					"description": "the position of the bookmark (in ms)",
					"minimum": 0,
					"type": "integer"
				}
			},
			"required": [
				"position"
			]
		},
		"JamParameters.RadioNew": {
			"type": "object",
			"properties": {
				"name": {
					"description": "radio name",
					"type": "string"
				},
				"url": {
					"description": "radio stream url",
					"type": "string"
				},
				"homepage": {
					"description": "radio homepage url",
					"type": "string"
				}
			},
			"required": [
				"name",
				"url"
			]
		},
		"JamParameters.PodcastNew": {
			"type": "object",
			"properties": {
				"url": {
					"description": "podcast feed url",
					"type": "string"
				}
			},
			"required": [
				"url"
			]
		},
		"JamParameters.PlaylistNew": {
			"type": "object",
			"properties": {
				"name": {
					"description": "name of playlist",
					"type": "string"
				},
				"comment": {
					"description": "a comment",
					"type": "string"
				},
				"isPublic": {
					"description": "set the playlist visible for other users or not",
					"type": "boolean"
				},
				"trackIDs": {
					"description": "track ids of the playlist, may include duplicates",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"name"
			]
		},
		"JamParameters.PlaylistUpdate": {
			"type": "object",
			"properties": {
				"name": {
					"description": "name of playlist",
					"type": "string"
				},
				"comment": {
					"description": "a comment",
					"type": "string"
				},
				"isPublic": {
					"description": "set the playlist visible for other users or not",
					"type": "boolean"
				},
				"trackIDs": {
					"description": "track ids of the playlist, may include duplicates",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.PlayQueueSet": {
			"type": "object",
			"properties": {
				"trackIDs": {
					"description": "the track ids of the playqueue",
					"type": "array",
					"items": {
						"type": "string"
					}
				},
				"currentID": {
					"description": "the track id of the current playing track",
					"type": "string"
				},
				"position": {
					"description": "the position in the current playing track",
					"minimum": 0,
					"type": "integer"
				}
			},
			"required": [
				"trackIDs"
			]
		},
		"JamParameters.UserNew": {
			"type": "object",
			"properties": {
				"name": {
					"description": "name of the user",
					"type": "string"
				},
				"email": {
					"description": "email of the user",
					"type": "string"
				},
				"roleAdmin": {
					"description": "user has admin rights",
					"default": false,
					"type": "boolean"
				},
				"rolePodcast": {
					"description": "user has podcast admin rights",
					"default": false,
					"type": "boolean"
				},
				"roleStream": {
					"description": "user has streaming/download rights",
					"default": true,
					"type": "boolean"
				},
				"roleUpload": {
					"description": "user has upload rights",
					"default": false,
					"type": "boolean"
				}
			},
			"required": [
				"name"
			]
		},
		"JamParameters.UserUpdate": {
			"type": "object",
			"properties": {
				"name": {
					"description": "name of the user",
					"type": "string"
				},
				"email": {
					"description": "email of the user",
					"type": "string"
				},
				"roleAdmin": {
					"description": "user has admin rights",
					"type": "boolean"
				},
				"rolePodcast": {
					"description": "user has podcast admin rights",
					"type": "boolean"
				},
				"roleStream": {
					"description": "user has streaming/download rights",
					"type": "boolean"
				},
				"roleUpload": {
					"description": "user has upload rights",
					"type": "boolean"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id"
			]
		},
		"JamParameters.RootNew": {
			"type": "object",
			"properties": {
				"name": {
					"description": "name of the root",
					"type": "string"
				},
				"path": {
					"description": "absolute path of the root",
					"type": "string"
				}
			},
			"required": [
				"name",
				"path"
			]
		},
		"JamParameters.RootUpdate": {
			"type": "object",
			"properties": {
				"name": {
					"description": "name of the root",
					"type": "string"
				},
				"path": {
					"description": "absolute path of the root",
					"type": "string"
				},
				"id": {
					"description": "the item id",
					"type": "string"
				}
			},
			"required": [
				"id",
				"name",
				"path"
			]
		}
	},
	"$schema": "http://json-schema.org/draft-07/schema#"
}