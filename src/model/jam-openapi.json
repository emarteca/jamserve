{
	"openapi": "3.0.0",
	"info": {
		"description": "Api for JamServe",
		"version": "0.1.1",
		"title": "JamApi",
		"license": {
			"name": "MIT"
		}
	},
	"servers": [
		{
			"url": "http://localhost:4040/api/{version}/",
			"description": "A local JamServe API",
			"variables": {
				"version": {
					"enum": [
						"v1"
					],
					"default": "v1"
				}
			}
		}
	],
	"paths": {
		"/ping": {
			"get": {
				"operationId": "ping",
				"description": "is the api online?",
				"tags": [
					"various"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Ping"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/session": {
			"get": {
				"operationId": "session",
				"description": "check the login state",
				"tags": [
					"auth"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Session"
								}
							}
						}
					}
				},
				"security": []
			}
		},
		"/lastfm/lookup": {
			"get": {
				"operationId": "metadataController.lastfmLookup",
				"description": "lookup lastfm data",
				"tags": [
					"metadata"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LastFM.Result"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "type",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.LastFMLookupType"
						},
						"description": "lookup by lastfm type",
						"required": true
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/acoustid/lookup": {
			"get": {
				"operationId": "metadataController.acoustidLookup",
				"description": "lookup acoustid data",
				"tags": [
					"metadata"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Acoustid.Result"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "inc",
						"schema": {
							"type": "string"
						},
						"description": "comma-separated acoustid includes",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/musicbrainz/lookup": {
			"get": {
				"operationId": "metadataController.musicbrainzLookup",
				"description": "lookup musicbrainz data",
				"tags": [
					"metadata"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MusicBrainz.Response"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "type",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.MusicBrainzLookupType"
						},
						"description": "lookup by musicbrainz type",
						"required": true
					},
					{
						"in": "query",
						"name": "inc",
						"schema": {
							"type": "string"
						},
						"description": "comma-separated musicbrainz includes",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/musicbrainz/search": {
			"get": {
				"operationId": "metadataController.musicbrainzSearch",
				"description": "search musicbrainz data",
				"tags": [
					"metadata"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MusicBrainz.Response"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "type",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.MusicBrainzSearchType"
						},
						"description": "search by musicbrainz type",
						"required": true
					},
					{
						"in": "query",
						"name": "recording",
						"schema": {
							"type": "string"
						},
						"description": "search by recording name",
						"required": false
					},
					{
						"in": "query",
						"name": "releasegroup",
						"schema": {
							"type": "string"
						},
						"description": "search by releasegroup name",
						"required": false
					},
					{
						"in": "query",
						"name": "release",
						"schema": {
							"type": "string"
						},
						"description": "search by release name",
						"required": false
					},
					{
						"in": "query",
						"name": "artist",
						"schema": {
							"type": "string"
						},
						"description": "search by artist name",
						"required": false
					},
					{
						"in": "query",
						"name": "tracks",
						"schema": {
							"type": "integer"
						},
						"description": "search by number of release tracks",
						"required": false
					}
				]
			}
		},
		"/acousticbrainz/lookup": {
			"get": {
				"operationId": "metadataController.acousticbrainzLookup",
				"description": "lookup acousticbrainz data",
				"tags": [
					"metadata"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AcousticBrainz.Response"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "nr",
						"schema": {
							"type": "number"
						},
						"description": "page parameter if more than one acousticbrainz info is available",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/coverartarchive/lookup": {
			"get": {
				"operationId": "metadataController.coverartarchiveLookup",
				"description": "lookup coverartarchive data",
				"tags": [
					"metadata"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/CoverArtArchive.Response"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "type",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.CoverArtArchiveLookupType"
						},
						"description": "lookup by musicbrainz type",
						"required": true
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/autocomplete": {
			"get": {
				"operationId": "autocompleteController.autocomplete",
				"description": "autocomplete",
				"tags": [
					"various"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.AutoComplete"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "query to complete",
						"required": true
					},
					{
						"in": "query",
						"name": "track",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "amount of track names to complete",
						"required": false
					},
					{
						"in": "query",
						"name": "artist",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "amount of artist names to complete",
						"required": false
					},
					{
						"in": "query",
						"name": "album",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "amount of album names to complete",
						"required": false
					},
					{
						"in": "query",
						"name": "folder",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "amount of folder names to complete",
						"required": false
					},
					{
						"in": "query",
						"name": "playlist",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "amount of playlist names to complete",
						"required": false
					},
					{
						"in": "query",
						"name": "podcast",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "amount of podcast names to complete",
						"required": false
					},
					{
						"in": "query",
						"name": "episode",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "amount of episode names to complete",
						"required": false
					}
				]
			}
		},
		"/genre/list": {
			"get": {
				"operationId": "genreController.list",
				"description": "get list of genres found in the library",
				"tags": [
					"various"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Genre"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					}
				]
			}
		},
		"/stats": {
			"get": {
				"operationId": "statsController.get",
				"description": "get count stats for folders/tracks/albums/...",
				"tags": [
					"various"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Stats"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					}
				]
			}
		},
		"/nowPlaying/list": {
			"get": {
				"operationId": "nowPlayingController.list",
				"description": "get list of tracks played by all users",
				"tags": [
					"various"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.NowPlaying"
									}
								}
							}
						}
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				}
			}
		},
		"/chat/list": {
			"get": {
				"operationId": "chatController.list",
				"description": "get chat messages",
				"tags": [
					"chat"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.ChatMessage"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "since",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by post time (unix time)",
						"required": false
					}
				]
			}
		},
		"/folder/index": {
			"get": {
				"operationId": "folderController.index",
				"description": "get the navigation index for folders",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.FolderIndex"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					}
				]
			}
		},
		"/folder/id": {
			"get": {
				"operationId": "folderController.id",
				"description": "get a folder by id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Folder"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "folderTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderCounts",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about children (trackCount/folderCount) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderHealth",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about the meta data quality on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderParents",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include a list of all parent folder ids on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar folders list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderArtworks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include artwork images list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderChildren",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks and sub folders on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderSubfolders",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include sub folders on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/folder/ids": {
			"get": {
				"operationId": "folderController.ids",
				"description": "get folders by ids",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Folder"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "folderTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderCounts",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about children (trackCount/folderCount) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderHealth",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about the meta data quality on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderParents",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include a list of all parent folder ids on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar folders list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderArtworks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include artwork images list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderChildren",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks and sub folders on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderSubfolders",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include sub folders on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/folder/children": {
			"get": {
				"operationId": "folderController.children",
				"description": "get tracks and subfolders of a folder by id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.FolderChildren"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderCounts",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about children (trackCount/folderCount) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderHealth",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about the meta data quality on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderParents",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include a list of all parent folder ids on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar folders list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderArtworks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include artwork images list on folder(s)",
						"required": false
					}
				]
			}
		},
		"/folder/tracks": {
			"get": {
				"operationId": "folderController.tracks",
				"description": "get tracks of a folder by id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "recursive",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks of a sub folders",
						"required": false
					},
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/folder/subfolders": {
			"get": {
				"operationId": "folderController.subfolders",
				"description": "get sub folders of a folder by id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Folder"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "folderTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderCounts",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about children (trackCount/folderCount) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderHealth",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about the meta data quality on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderParents",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include a list of all parent folder ids on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar folders list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderArtworks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include artwork images list on folder(s)",
						"required": false
					}
				]
			}
		},
		"/folder/artist/similar": {
			"get": {
				"operationId": "folderController.artistSimilar",
				"description": "get similar artist folders of a folder by id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Folder"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "folderTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderCounts",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about children (trackCount/folderCount) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderHealth",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about the meta data quality on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderParents",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include a list of all parent folder ids on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar folders list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderArtworks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include artwork images list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderChildren",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks and sub folders on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderSubfolders",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include sub folders on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/folder/artist/info": {
			"get": {
				"operationId": "folderController.artistInfo",
				"description": "get extended artist meta data of a folder by id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.ArtistFolderInfo"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "similar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar artists",
						"required": true
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/folder/album/info": {
			"get": {
				"operationId": "folderController.albumInfo",
				"description": "get extended album meta data of a folder by id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.AlbumFolderInfo"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/folder/list": {
			"get": {
				"operationId": "folderController.list",
				"description": "get a list of folders by list type",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Folder"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "parentID",
						"schema": {
							"type": "string"
						},
						"description": "filter by parent folder id",
						"required": false
					},
					{
						"in": "query",
						"name": "artist",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist name",
						"required": false
					},
					{
						"in": "query",
						"name": "title",
						"schema": {
							"type": "string"
						},
						"description": "filter by title",
						"required": false
					},
					{
						"in": "query",
						"name": "album",
						"schema": {
							"type": "string"
						},
						"description": "filter by album name",
						"required": false
					},
					{
						"in": "query",
						"name": "genre",
						"schema": {
							"type": "string"
						},
						"description": "filter by genre",
						"required": false
					},
					{
						"in": "query",
						"name": "level",
						"schema": {
							"type": "number"
						},
						"description": "filter by level",
						"required": false
					},
					{
						"in": "query",
						"name": "newerThan",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by creation date (unix time)",
						"required": false
					},
					{
						"in": "query",
						"name": "fromYear",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "toYear",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "type",
						"schema": {
							"enum": [
								"album",
								"artist",
								"collection",
								"extras",
								"multialbum",
								"unknown"
							],
							"type": "string"
						},
						"description": "filter by folder type",
						"required": false
					},
					{
						"in": "query",
						"name": "types",
						"schema": {
							"type": "array",
							"items": {
								"enum": [
									"album",
									"artist",
									"collection",
									"extras",
									"multialbum",
									"unknown"
								],
								"type": "string"
							}
						},
						"description": "filter by folder types",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "folderTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderCounts",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about children (trackCount/folderCount) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderHealth",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about the meta data quality on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderParents",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include a list of all parent folder ids on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar folders list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderArtworks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include artwork images list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "list",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.ListType"
						},
						"description": "the type of the item list",
						"required": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/folder/search": {
			"get": {
				"operationId": "folderController.search",
				"description": "search folders",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Folder"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "parentID",
						"schema": {
							"type": "string"
						},
						"description": "filter by parent folder id",
						"required": false
					},
					{
						"in": "query",
						"name": "artist",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist name",
						"required": false
					},
					{
						"in": "query",
						"name": "title",
						"schema": {
							"type": "string"
						},
						"description": "filter by title",
						"required": false
					},
					{
						"in": "query",
						"name": "album",
						"schema": {
							"type": "string"
						},
						"description": "filter by album name",
						"required": false
					},
					{
						"in": "query",
						"name": "genre",
						"schema": {
							"type": "string"
						},
						"description": "filter by genre",
						"required": false
					},
					{
						"in": "query",
						"name": "level",
						"schema": {
							"type": "number"
						},
						"description": "filter by level",
						"required": false
					},
					{
						"in": "query",
						"name": "newerThan",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by creation date (unix time)",
						"required": false
					},
					{
						"in": "query",
						"name": "fromYear",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "toYear",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "type",
						"schema": {
							"enum": [
								"album",
								"artist",
								"collection",
								"extras",
								"multialbum",
								"unknown"
							],
							"type": "string"
						},
						"description": "filter by folder type",
						"required": false
					},
					{
						"in": "query",
						"name": "types",
						"schema": {
							"type": "array",
							"items": {
								"enum": [
									"album",
									"artist",
									"collection",
									"extras",
									"multialbum",
									"unknown"
								],
								"type": "string"
							}
						},
						"description": "filter by folder types",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "folderChildren",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks and sub folders on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderSubfolders",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include sub folders on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderCounts",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about children (trackCount/folderCount) on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderHealth",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include information about the meta data quality on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderParents",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include a list of all parent folder ids on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar folders list on folder(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "folderArtworks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include artwork images list on folder(s)",
						"required": false
					}
				]
			}
		},
		"/folder/state": {
			"get": {
				"operationId": "folderController.state",
				"description": "get the user state (fav/rating) by folder id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.State"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/folder/states": {
			"get": {
				"operationId": "folderController.states",
				"description": "get the user states (fav/rating) by folders ids",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.States"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/folder/artist/similar/tracks": {
			"get": {
				"operationId": "folderController.artistSimilarTracks",
				"description": "get similar tracks of a by artist folder id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/folder/artworks": {
			"get": {
				"operationId": "folderController.artworks",
				"description": "get the artwork list by folder id",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.ArtworkImage"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/track/id": {
			"get": {
				"operationId": "trackController.id",
				"description": "get a track by id",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Track"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/track/ids": {
			"get": {
				"operationId": "trackController.ids",
				"description": "get tracks by ids",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/track/tagID3": {
			"get": {
				"operationId": "trackController.tagID3",
				"description": "get an id3 tag by track id",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.ID3Tag"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/track/tagID3s": {
			"get": {
				"operationId": "trackController.tagID3s",
				"description": "get id3 tags by track ids",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.ID3Tags"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/track/search": {
			"get": {
				"operationId": "trackController.search",
				"description": "search tracks",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "artist",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist name",
						"required": false
					},
					{
						"in": "query",
						"name": "artistID",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist id",
						"required": false
					},
					{
						"in": "query",
						"name": "parentID",
						"schema": {
							"type": "string"
						},
						"description": "filter by parent folder id",
						"required": false
					},
					{
						"in": "query",
						"name": "parentIDs",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "filter by parent folder ids",
						"required": false
					},
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "title",
						"schema": {
							"type": "string"
						},
						"description": "filter by title",
						"required": false
					},
					{
						"in": "query",
						"name": "album",
						"schema": {
							"type": "string"
						},
						"description": "filter by album",
						"required": false
					},
					{
						"in": "query",
						"name": "genre",
						"schema": {
							"type": "string"
						},
						"description": "filter by genre",
						"required": false
					},
					{
						"in": "query",
						"name": "newerThan",
						"schema": {
							"type": "integer"
						},
						"description": "filter by creation date",
						"required": false
					},
					{
						"in": "query",
						"name": "fromYear",
						"schema": {
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "toYear",
						"schema": {
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/track/state": {
			"get": {
				"operationId": "trackController.state",
				"description": "get the user state (fav/rating) by track id",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.State"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/track/states": {
			"get": {
				"operationId": "trackController.states",
				"description": "get the user states (fav/rating) by track ids",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.States"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/track/list": {
			"get": {
				"operationId": "trackController.list",
				"description": "get a track list by track list type",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "artist",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist name",
						"required": false
					},
					{
						"in": "query",
						"name": "artistID",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist id",
						"required": false
					},
					{
						"in": "query",
						"name": "parentID",
						"schema": {
							"type": "string"
						},
						"description": "filter by parent folder id",
						"required": false
					},
					{
						"in": "query",
						"name": "parentIDs",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "filter by parent folder ids",
						"required": false
					},
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "title",
						"schema": {
							"type": "string"
						},
						"description": "filter by title",
						"required": false
					},
					{
						"in": "query",
						"name": "album",
						"schema": {
							"type": "string"
						},
						"description": "filter by album",
						"required": false
					},
					{
						"in": "query",
						"name": "genre",
						"schema": {
							"type": "string"
						},
						"description": "filter by genre",
						"required": false
					},
					{
						"in": "query",
						"name": "newerThan",
						"schema": {
							"type": "integer"
						},
						"description": "filter by creation date",
						"required": false
					},
					{
						"in": "query",
						"name": "fromYear",
						"schema": {
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "toYear",
						"schema": {
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "list",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.ListType"
						},
						"description": "the type of the item list",
						"required": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/track/similar": {
			"get": {
				"operationId": "trackController.similar",
				"description": "get the similar tracks by track id",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/episode/id": {
			"get": {
				"operationId": "episodeController.id",
				"description": "get a podcast episode by id",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.PodcastEpisode"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/episode/ids": {
			"get": {
				"operationId": "episodeController.ids",
				"description": "get podcast episodes by ids",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.PodcastEpisode"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/episode/search": {
			"get": {
				"operationId": "episodeController.search",
				"description": "search podcast episodes",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.PodcastEpisode"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "podcastID",
						"schema": {
							"type": "string"
						},
						"description": "filter by podcast id",
						"required": false
					},
					{
						"in": "query",
						"name": "name",
						"schema": {
							"type": "string"
						},
						"description": "filter by title",
						"required": false
					},
					{
						"in": "query",
						"name": "status",
						"schema": {
							"type": "string"
						},
						"description": "filter by status",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/episode/retrieve": {
			"get": {
				"operationId": "episodeController.retrieve",
				"description": "retrieve a podcast episode media file",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/episode/state": {
			"get": {
				"operationId": "episodeController.state",
				"description": "get the user state (fav/rating) by podcast episode id",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.State"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/episode/states": {
			"get": {
				"operationId": "episodeController.states",
				"description": "get the user states (fav/rating) by podcast episode ids",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.States"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/episode/status": {
			"get": {
				"operationId": "episodeController.status",
				"description": "get the episode state (e.g. downloading, new, etc.) by podcast episode id",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.PodcastEpisodeStatus"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/episode/list": {
			"get": {
				"operationId": "episodeController.list",
				"description": "get a list of episodes by list type",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.PodcastEpisode"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "podcastID",
						"schema": {
							"type": "string"
						},
						"description": "filter by podcast id",
						"required": false
					},
					{
						"in": "query",
						"name": "name",
						"schema": {
							"type": "string"
						},
						"description": "filter by title",
						"required": false
					},
					{
						"in": "query",
						"name": "status",
						"schema": {
							"type": "string"
						},
						"description": "filter by status",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "list",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.ListType"
						},
						"description": "the type of the item list",
						"required": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/podcast/id": {
			"get": {
				"operationId": "podcastController.id",
				"description": "get a podcast by id",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Podcast"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "podcastState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on podcast(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "podcastEpisodes",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include episodes on podcast(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/podcast/ids": {
			"get": {
				"operationId": "podcastController.ids",
				"description": "get podcasts by ids",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Podcast"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "podcastState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on podcast(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "podcastEpisodes",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include episodes on podcast(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/podcast/status": {
			"get": {
				"operationId": "podcastController.status",
				"description": "get the podcast state (e.g. downloading, new, etc.) by podcast id",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.PodcastStatus"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/podcast/search": {
			"get": {
				"operationId": "podcastController.search",
				"description": "search podcasts",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Podcast"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "url",
						"schema": {
							"type": "string"
						},
						"description": "filter by podcast url",
						"required": false
					},
					{
						"in": "query",
						"name": "title",
						"schema": {
							"type": "string"
						},
						"description": "filter by podcast title",
						"required": false
					},
					{
						"in": "query",
						"name": "status",
						"schema": {
							"type": "string"
						},
						"description": "filter by podcast status",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "podcastState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on podcast(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "podcastEpisodes",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include episodes on podcast(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/podcast/refreshAll": {
			"get": {
				"operationId": "podcastController.refreshAll",
				"description": "check all podcast feeds for new episodes",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok"
					}
				}
			}
		},
		"/podcast/refresh": {
			"get": {
				"operationId": "podcastController.refresh",
				"description": "check podcast feeds for new episodes by podcast id",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/podcast/state": {
			"get": {
				"operationId": "podcastController.state",
				"description": "get the user state (fav/rating) by podcast id",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.State"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/podcast/states": {
			"get": {
				"operationId": "podcastController.states",
				"description": "get the user states (fav/rating) by podcast ids",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.States"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/podcast/list": {
			"get": {
				"operationId": "podcastController.list",
				"description": "get a list of podcasts by list type",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Podcast"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "url",
						"schema": {
							"type": "string"
						},
						"description": "filter by podcast url",
						"required": false
					},
					{
						"in": "query",
						"name": "title",
						"schema": {
							"type": "string"
						},
						"description": "filter by podcast title",
						"required": false
					},
					{
						"in": "query",
						"name": "status",
						"schema": {
							"type": "string"
						},
						"description": "filter by podcast status",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "podcastState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on podcast(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "podcastEpisodes",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include episodes on podcast(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "list",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.ListType"
						},
						"description": "the type of the item list",
						"required": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/radio/id": {
			"get": {
				"operationId": "radioController.id",
				"tags": [
					"radio"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Radio"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "radioState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on radio(s)",
						"required": true
					}
				]
			}
		},
		"/radio/ids": {
			"get": {
				"operationId": "radioController.ids",
				"tags": [
					"radio"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Radio"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "radioState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on radio(s)",
						"required": true
					}
				]
			}
		},
		"/radio/search": {
			"get": {
				"operationId": "radioController.search",
				"tags": [
					"radio"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Radio"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "radioState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on radio(s)",
						"required": true
					}
				]
			}
		},
		"/radio/state": {
			"get": {
				"operationId": "radioController.state",
				"tags": [
					"radio"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.State"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/radio/states": {
			"get": {
				"operationId": "radioController.states",
				"tags": [
					"radio"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.States"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/artist/id": {
			"get": {
				"operationId": "artistController.id",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Artist"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "artistAlbums",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include albums on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistAlbumIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include album ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracksIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar artists on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/artist/ids": {
			"get": {
				"operationId": "artistController.ids",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Artist"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "artistAlbums",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include albums on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistAlbumIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include album ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracksIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar artists on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/artist/search": {
			"get": {
				"operationId": "artistController.search",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Artist"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "name",
						"schema": {
							"type": "string"
						},
						"description": "filter by name",
						"required": false
					},
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "albumID",
						"schema": {
							"type": "string"
						},
						"description": "filter by album id",
						"required": false
					},
					{
						"in": "query",
						"name": "mbArtistID",
						"schema": {
							"type": "string"
						},
						"description": "filter by musicbrainz album id",
						"required": false
					},
					{
						"in": "query",
						"name": "newerThan",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by creation date (unix time)",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "artistAlbums",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include albums on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistAlbumIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include album ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracksIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar artists on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/artist/state": {
			"get": {
				"operationId": "artistController.state",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.State"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/artist/states": {
			"get": {
				"operationId": "artistController.states",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.States"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/artist/list": {
			"get": {
				"operationId": "artistController.list",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Artist"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "name",
						"schema": {
							"type": "string"
						},
						"description": "filter by name",
						"required": false
					},
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "albumID",
						"schema": {
							"type": "string"
						},
						"description": "filter by album id",
						"required": false
					},
					{
						"in": "query",
						"name": "mbArtistID",
						"schema": {
							"type": "string"
						},
						"description": "filter by musicbrainz album id",
						"required": false
					},
					{
						"in": "query",
						"name": "newerThan",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by creation date (unix time)",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "artistAlbums",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include albums on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistAlbumIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include album ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracksIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar artists on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "list",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.ListType"
						},
						"description": "the type of the item list",
						"required": true
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/artist/similar/tracks": {
			"get": {
				"operationId": "artistController.similarTracks",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/artist/similar": {
			"get": {
				"operationId": "artistController.similar",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Artist"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "artistAlbums",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include albums on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistAlbumIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include album ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistTracksIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "artistInfoSimilar",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include similar artists on artist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/artist/index": {
			"get": {
				"operationId": "artistController.index",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.ArtistIndex"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					}
				]
			}
		},
		"/artist/tracks": {
			"get": {
				"operationId": "artistController.tracks",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/album/id": {
			"get": {
				"operationId": "albumController.id",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Album"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/album/ids": {
			"get": {
				"operationId": "albumController.ids",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Album"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/album/list": {
			"get": {
				"operationId": "albumController.list",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Album"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "name",
						"schema": {
							"type": "string"
						},
						"description": "filter by name",
						"required": false
					},
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "artist",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist name",
						"required": false
					},
					{
						"in": "query",
						"name": "artistID",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist id",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID",
						"schema": {
							"type": "string"
						},
						"description": "filter by track id",
						"required": false
					},
					{
						"in": "query",
						"name": "mbAlbumID",
						"schema": {
							"type": "string"
						},
						"description": "filter by album id",
						"required": false
					},
					{
						"in": "query",
						"name": "mbArtistID",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist id",
						"required": false
					},
					{
						"in": "query",
						"name": "genre",
						"schema": {
							"type": "string"
						},
						"description": "filter by genre",
						"required": false
					},
					{
						"in": "query",
						"name": "albumType",
						"schema": {
							"enum": [
								"album",
								"audiobook",
								"compilation",
								"unknown"
							],
							"type": "string"
						},
						"description": "filter by album type",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTypes",
						"schema": {
							"type": "array",
							"items": {
								"enum": [
									"album",
									"audiobook",
									"compilation",
									"unknown"
								],
								"type": "string"
							}
						},
						"description": "filter by album types",
						"required": false
					},
					{
						"in": "query",
						"name": "newerThan",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by creation date (unix time)",
						"required": false
					},
					{
						"in": "query",
						"name": "fromYear",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "toYear",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "list",
						"schema": {
							"$ref": "#/components/schemas/JamParameters.ListType"
						},
						"description": "the type of the item list",
						"required": true
					}
				]
			}
		},
		"/album/search": {
			"get": {
				"operationId": "albumController.search",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Album"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "name",
						"schema": {
							"type": "string"
						},
						"description": "filter by name",
						"required": false
					},
					{
						"in": "query",
						"name": "rootID",
						"schema": {
							"type": "string"
						},
						"description": "filter by root id",
						"required": false
					},
					{
						"in": "query",
						"name": "artist",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist name",
						"required": false
					},
					{
						"in": "query",
						"name": "artistID",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist id",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID",
						"schema": {
							"type": "string"
						},
						"description": "filter by track id",
						"required": false
					},
					{
						"in": "query",
						"name": "mbAlbumID",
						"schema": {
							"type": "string"
						},
						"description": "filter by album id",
						"required": false
					},
					{
						"in": "query",
						"name": "mbArtistID",
						"schema": {
							"type": "string"
						},
						"description": "filter by artist id",
						"required": false
					},
					{
						"in": "query",
						"name": "genre",
						"schema": {
							"type": "string"
						},
						"description": "filter by genre",
						"required": false
					},
					{
						"in": "query",
						"name": "albumType",
						"schema": {
							"enum": [
								"album",
								"audiobook",
								"compilation",
								"unknown"
							],
							"type": "string"
						},
						"description": "filter by album type",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTypes",
						"schema": {
							"type": "array",
							"items": {
								"enum": [
									"album",
									"audiobook",
									"compilation",
									"unknown"
								],
								"type": "string"
							}
						},
						"description": "filter by album types",
						"required": false
					},
					{
						"in": "query",
						"name": "newerThan",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by creation date (unix time)",
						"required": false
					},
					{
						"in": "query",
						"name": "fromYear",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "toYear",
						"schema": {
							"minimum": 0,
							"type": "integer"
						},
						"description": "filter by year",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "albumInfo",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include extended meta data on album(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/album/state": {
			"get": {
				"operationId": "albumController.state",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.State"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/album/states": {
			"get": {
				"operationId": "albumController.states",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.States"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/album/similar/tracks": {
			"get": {
				"operationId": "albumController.similarTracks",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					}
				]
			}
		},
		"/album/tracks": {
			"get": {
				"operationId": "albumController.tracks",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/playlist/id": {
			"get": {
				"operationId": "playlistController.id",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Playlist"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					},
					{
						"in": "query",
						"name": "playlistTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "playlistTracksIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "playlistState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/playlist/ids": {
			"get": {
				"operationId": "playlistController.ids",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Playlist"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "playlistTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "playlistTracksIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "playlistState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/playlist/search": {
			"get": {
				"operationId": "playlistController.search",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Playlist"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "name",
						"schema": {
							"type": "string"
						},
						"description": "filter by playlist name",
						"required": false
					},
					{
						"in": "query",
						"name": "isPublic",
						"schema": {
							"type": "boolean"
						},
						"description": "filter by public state",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					},
					{
						"in": "query",
						"name": "playlistTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "playlistTracksIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "playlistState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on playlist(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/playlist/state": {
			"get": {
				"operationId": "playlistController.state",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.State"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/playlist/states": {
			"get": {
				"operationId": "playlistController.states",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.States"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/playlist/tracks": {
			"get": {
				"operationId": "playlistController.tracks",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Track"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/user/search": {
			"get": {
				"operationId": "userController.search",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.User"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "name",
						"schema": {
							"type": "string"
						},
						"description": "filter by user name",
						"required": false
					},
					{
						"in": "query",
						"name": "isAdmin",
						"schema": {
							"type": "boolean"
						},
						"description": "filter by user admin role",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					}
				]
			}
		},
		"/user/id": {
			"get": {
				"operationId": "userController.id",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.User"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/user/ids": {
			"get": {
				"operationId": "userController.ids",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.User"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/playqueue/get": {
			"get": {
				"operationId": "playqueueController.get",
				"description": "get a playqueue for calling user",
				"tags": [
					"playqueue"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.PlayQueue"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "playQueueTracks",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tracks on playqueue",
						"required": false
					},
					{
						"in": "query",
						"name": "playQueueTrackIDs",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include track ids on playqueue",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/root/search": {
			"get": {
				"operationId": "rootController.search",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Root"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "offset",
						"schema": {
							"default": 0,
							"minimum": 0,
							"type": "integer"
						},
						"description": "get back items from position",
						"required": false
					},
					{
						"in": "query",
						"name": "amount",
						"schema": {
							"minimum": 1,
							"type": "integer"
						},
						"description": "get back number of items",
						"required": false
					},
					{
						"in": "query",
						"name": "query",
						"schema": {
							"type": "string"
						},
						"description": "search query",
						"required": false
					},
					{
						"in": "query",
						"name": "sortField",
						"schema": {
							"type": "string"
						},
						"description": "the obj property name to sort on (e.g. 'artist', 'creation')",
						"required": false
					},
					{
						"in": "query",
						"name": "sortDescending",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "the sort direction",
						"required": false
					}
				]
			}
		},
		"/root/id": {
			"get": {
				"operationId": "rootController.id",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Root"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/root/ids": {
			"get": {
				"operationId": "rootController.ids",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Root"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "ids",
						"schema": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"description": "array of item ids",
						"required": true
					}
				]
			}
		},
		"/root/scan": {
			"get": {
				"operationId": "rootController.scan",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/root/scanAll": {
			"get": {
				"operationId": "rootController.scanAll",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				}
			}
		},
		"/root/status": {
			"get": {
				"operationId": "rootController.status",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.RootStatus"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/folder/download": {
			"get": {
				"operationId": "folderController.download",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "zip",
							"enum": [
								"tar",
								"zip"
							],
							"type": "string"
						},
						"description": "format of download stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/folder/image": {
			"get": {
				"operationId": "folderController.image",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/folder/artwork/image": {
			"get": {
				"operationId": "folderController.artworkImage",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/track/stream": {
			"get": {
				"operationId": "trackController.stream",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"audio/mpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/flac": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/mp4": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/ogg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/x-flv": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "maxBitRate",
						"schema": {
							"minimum": 10,
							"type": "integer"
						},
						"description": "maximal bitrate if transcoding (in Kbps)",
						"required": false
					},
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "mp3",
							"enum": [
								"mp3"
							],
							"type": "string"
						},
						"description": "format of audio stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/track/download": {
			"get": {
				"operationId": "trackController.download",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "zip",
							"enum": [
								"tar",
								"zip"
							],
							"type": "string"
						},
						"description": "format of download stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/track/image": {
			"get": {
				"operationId": "trackController.image",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/episode/stream": {
			"get": {
				"operationId": "episodeController.stream",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"audio/mpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/flac": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/mp4": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/ogg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/x-flv": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "maxBitRate",
						"schema": {
							"minimum": 10,
							"type": "integer"
						},
						"description": "maximal bitrate if transcoding (in Kbps)",
						"required": false
					},
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "mp3",
							"enum": [
								"mp3"
							],
							"type": "string"
						},
						"description": "format of audio stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/episode/download": {
			"get": {
				"operationId": "episodeController.download",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "zip",
							"enum": [
								"tar",
								"zip"
							],
							"type": "string"
						},
						"description": "format of download stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/episode/image": {
			"get": {
				"operationId": "episodeController.image",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/podcast/image": {
			"get": {
				"operationId": "podcastController.image",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/podcast/download": {
			"get": {
				"operationId": "podcastController.download",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "zip",
							"enum": [
								"tar",
								"zip"
							],
							"type": "string"
						},
						"description": "format of download stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/artist/image": {
			"get": {
				"operationId": "artistController.image",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/artist/download": {
			"get": {
				"operationId": "artistController.download",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "zip",
							"enum": [
								"tar",
								"zip"
							],
							"type": "string"
						},
						"description": "format of download stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/album/image": {
			"get": {
				"operationId": "albumController.image",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/album/download": {
			"get": {
				"operationId": "albumController.download",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "zip",
							"enum": [
								"tar",
								"zip"
							],
							"type": "string"
						},
						"description": "format of download stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/bookmark/list": {
			"get": {
				"operationId": "bookmarkController.list",
				"description": "get a bookmarks list for the calling user",
				"tags": [
					"bookmark"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Jam.Bookmark"
									}
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "bookmarkTrack",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include the track of the bookmark",
						"required": false
					},
					{
						"in": "query",
						"name": "trackMedia",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include media informations on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackTag",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackID3",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include id3 tag on track(s)",
						"required": false
					},
					{
						"in": "query",
						"name": "trackState",
						"schema": {
							"default": false,
							"type": "boolean"
						},
						"description": "include user states (fav,rate) on track(s)",
						"required": false
					}
				]
			}
		},
		"/playlist/image": {
			"get": {
				"operationId": "playlistController.image",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/playlist/download": {
			"get": {
				"operationId": "playlistController.download",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "zip",
							"enum": [
								"tar",
								"zip"
							],
							"type": "string"
						},
						"description": "format of download stream",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/user/image": {
			"get": {
				"operationId": "userController.image",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/root/image": {
			"get": {
				"operationId": "rootController.image",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "query",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": false
					},
					{
						"in": "query",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/image/{id}-{size}.{format}": {
			"get": {
				"operationId": "imageController.image",
				"tags": [
					"image"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": true
					},
					{
						"in": "path",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": true
					},
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/image/{id}-{size}": {
			"get": {
				"operationId": "imageController.image",
				"tags": [
					"image"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "size",
						"schema": {
							"minimum": 16,
							"maximum": 1024,
							"type": "integer"
						},
						"description": "size of the image",
						"required": true
					},
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/image/{id}.{format}": {
			"get": {
				"operationId": "imageController.image",
				"tags": [
					"image"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"schema": {
							"default": "png",
							"enum": [
								"bmp",
								"jpeg",
								"jpg",
								"png",
								"tiff"
							],
							"type": "string"
						},
						"description": "format of the image",
						"required": true
					},
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/image/{id}": {
			"get": {
				"operationId": "imageController.image",
				"tags": [
					"image"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/jpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"image/png": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/stream/{id}.{format}": {
			"get": {
				"operationId": "streamController.stream",
				"description": "stream a media file in a format",
				"tags": [
					"media"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"audio/mpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/flac": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/mp4": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/ogg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"audio/x-flv": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"schema": {
							"default": "mp3",
							"enum": [
								"mp3"
							],
							"type": "string"
						},
						"description": "format of audio stream",
						"required": true
					},
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/stream/{id}": {
			"get": {
				"operationId": "streamController.stream",
				"description": "stream a media file",
				"tags": [
					"media"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"audio/mpeg": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/waveform/{id}.{format}": {
			"get": {
				"operationId": "waveformController.waveform",
				"description": "get peaks waveform data as svg | json | binary",
				"tags": [
					"media"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"image/svg+xml": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/json": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/binary": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"schema": {
							"default": "svg",
							"enum": [
								"dat",
								"json",
								"svg"
							],
							"type": "string"
						},
						"description": "format of waveform data",
						"required": true
					},
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/download/{id}": {
			"get": {
				"operationId": "downloadController.download",
				"tags": [
					"download"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/download/{id}.{format}": {
			"get": {
				"operationId": "downloadController.download",
				"tags": [
					"download"
				],
				"responses": {
					"200": {
						"description": "binary data",
						"content": {
							"application/zip": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							},
							"application/tar": {
								"schema": {
									"type": "string",
									"format": "binary"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"parameters": [
					{
						"in": "path",
						"name": "format",
						"schema": {
							"default": "zip",
							"enum": [
								"tar",
								"zip"
							],
							"type": "string"
						},
						"description": "format of download stream",
						"required": true
					},
					{
						"in": "path",
						"name": "id",
						"schema": {
							"type": "string"
						},
						"description": "the item id",
						"required": true
					}
				]
			}
		},
		"/login": {
			"post": {
				"operationId": "login",
				"description": "login an user",
				"tags": [
					"auth"
				],
				"responses": {
					"200": {
						"description": "ok",
						"headers": {
							"Set-Cookie": {
								"schema": {
									"type": "string",
									"example": "jam.sid=abcde12345; Path=/; HttpOnly"
								}
							}
						},
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Session",
									"description": "returns a Jam.Session on success"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"security": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Login"
							}
						}
					}
				}
			}
		},
		"/logout": {
			"post": {
				"operationId": "logout",
				"description": "logout an user",
				"tags": [
					"auth"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				}
			}
		},
		"/bookmark/create": {
			"post": {
				"operationId": "bookmarkController.create",
				"description": "create a bookmark",
				"tags": [
					"bookmark"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Bookmark"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.BookmarkCreate"
							}
						}
					}
				}
			}
		},
		"/bookmark/delete": {
			"post": {
				"operationId": "bookmarkController.delete",
				"description": "delete a bookmark",
				"tags": [
					"bookmark"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		},
		"/chat/create": {
			"post": {
				"operationId": "chatController.create",
				"tags": [
					"chat"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ChatNew"
							}
						}
					}
				}
			}
		},
		"/chat/delete": {
			"post": {
				"operationId": "chatController.delete",
				"tags": [
					"chat"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ChatDelete"
							}
						}
					}
				}
			}
		},
		"/radio/create": {
			"post": {
				"operationId": "radioController.create",
				"tags": [
					"radio"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Radio"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.RadioNew"
							}
						}
					}
				}
			}
		},
		"/radio/update": {
			"post": {
				"operationId": "radioController.update",
				"tags": [
					"radio"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.RadioUpdate"
							}
						}
					}
				}
			}
		},
		"/radio/delete": {
			"post": {
				"operationId": "radioController.delete",
				"tags": [
					"radio"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		},
		"/track/fav/update": {
			"post": {
				"operationId": "trackController.favUpdate",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the fav user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Fav"
							}
						}
					}
				}
			}
		},
		"/track/rate/update": {
			"post": {
				"operationId": "trackController.rateUpdate",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the rating user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Rate"
							}
						}
					}
				}
			}
		},
		"/track/tagID3/update": {
			"post": {
				"operationId": "trackController.tagID3Update",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.TagID3Update"
							}
						}
					}
				}
			}
		},
		"/track/name/update": {
			"post": {
				"operationId": "trackController.nameUpdate",
				"tags": [
					"track"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Rename a track file",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.TrackEditName"
							}
						}
					}
				}
			}
		},
		"/folder/imageUpload/update": {
			"post": {
				"operationId": "folderController.imageUploadUpdate",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		},
		"/folder/artwork/create": {
			"post": {
				"operationId": "folderController.artworkCreate",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Add an artwork to a folder by url",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.FolderArtworkNew"
							}
						}
					}
				}
			}
		},
		"/folder/artwork/delete": {
			"post": {
				"operationId": "folderController.artworkDelete",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		},
		"/folder/name/update": {
			"post": {
				"operationId": "folderController.nameUpdate",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Rename the folder",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.FolderEditName"
							}
						}
					}
				}
			}
		},
		"/folder/fav/update": {
			"post": {
				"operationId": "folderController.favUpdate",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the fav user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Fav"
							}
						}
					}
				}
			}
		},
		"/folder/rate/update": {
			"post": {
				"operationId": "folderController.rateUpdate",
				"tags": [
					"folder"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the rating user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Rate"
							}
						}
					}
				}
			}
		},
		"/album/fav/update": {
			"post": {
				"operationId": "albumController.favUpdate",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the fav user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Fav"
							}
						}
					}
				}
			}
		},
		"/album/rate/update": {
			"post": {
				"operationId": "albumController.rateUpdate",
				"tags": [
					"album"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the rating user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Rate"
							}
						}
					}
				}
			}
		},
		"/artist/fav/update": {
			"post": {
				"operationId": "artistController.favUpdate",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the fav user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Fav"
							}
						}
					}
				}
			}
		},
		"/artist/rate/update": {
			"post": {
				"operationId": "artistController.rateUpdate",
				"tags": [
					"artist"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the rating user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Rate"
							}
						}
					}
				}
			}
		},
		"/episode/fav/update": {
			"post": {
				"operationId": "episodeController.favUpdate",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the fav user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Fav"
							}
						}
					}
				}
			}
		},
		"/episode/rate/update": {
			"post": {
				"operationId": "episodeController.rateUpdate",
				"tags": [
					"episode"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the rating user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Rate"
							}
						}
					}
				}
			}
		},
		"/podcast/create": {
			"post": {
				"operationId": "podcastController.create",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Podcast"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.PodcastNew"
							}
						}
					}
				}
			}
		},
		"/podcast/fav/update": {
			"post": {
				"operationId": "podcastController.favUpdate",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the fav user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Fav"
							}
						}
					}
				}
			}
		},
		"/podcast/rate/update": {
			"post": {
				"operationId": "podcastController.rateUpdate",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the rating user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Rate"
							}
						}
					}
				}
			}
		},
		"/podcast/delete": {
			"post": {
				"operationId": "podcastController.delete",
				"tags": [
					"podcast"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		},
		"/playlist/create": {
			"post": {
				"operationId": "playlistController.create",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Playlist"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.PlaylistNew"
							}
						}
					}
				}
			}
		},
		"/playlist/update": {
			"post": {
				"operationId": "playlistController.update",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.PlaylistUpdate"
							}
						}
					}
				}
			}
		},
		"/playlist/fav/update": {
			"post": {
				"operationId": "playlistController.favUpdate",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the fav user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Fav"
							}
						}
					}
				}
			}
		},
		"/playlist/rate/update": {
			"post": {
				"operationId": "playlistController.rateUpdate",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"description": "Change the rating user state",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.Rate"
							}
						}
					}
				}
			}
		},
		"/playlist/delete": {
			"post": {
				"operationId": "playlistController.delete",
				"tags": [
					"playlist"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		},
		"/playqueue/update": {
			"post": {
				"operationId": "playqueueController.update",
				"description": "create/update the playqueue for calling user",
				"tags": [
					"playqueue"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.PlayQueueSet"
							}
						}
					}
				}
			}
		},
		"/playqueue/delete": {
			"post": {
				"operationId": "playqueueController.delete",
				"description": "delete the playqueue for calling user",
				"tags": [
					"playqueue"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				}
			}
		},
		"/user/create": {
			"post": {
				"operationId": "userController.create",
				"description": "create a new user",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.User"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.UserNew"
							}
						}
					}
				}
			}
		},
		"/user/update": {
			"post": {
				"operationId": "userController.update",
				"description": "update user",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.UserUpdate"
							}
						}
					}
				}
			}
		},
		"/user/password/update": {
			"post": {
				"operationId": "userController.passwordUpdate",
				"description": "set a password for the user",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.UserPasswordUpdate"
							}
						}
					}
				}
			}
		},
		"/user/email/update": {
			"post": {
				"operationId": "userController.emailUpdate",
				"description": "set an email for an user",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.UserEmailUpdate"
							}
						}
					}
				}
			}
		},
		"/user/imageUpload/update": {
			"post": {
				"operationId": "userController.imageUploadUpdate",
				"description": "set an avatar image for an user",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		},
		"/user/delete": {
			"post": {
				"operationId": "userController.delete",
				"tags": [
					"user"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		},
		"/root/create": {
			"post": {
				"operationId": "rootController.create",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Jam.Root"
								}
							}
						}
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.RootNew"
							}
						}
					}
				}
			}
		},
		"/root/update": {
			"post": {
				"operationId": "rootController.update",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.RootUpdate"
							}
						}
					}
				}
			}
		},
		"/root/delete": {
			"post": {
				"operationId": "rootController.delete",
				"tags": [
					"root"
				],
				"responses": {
					"200": {
						"description": "ok"
					},
					"400": {
						"description": "parameter is missing or invalid"
					},
					"401": {
						"description": "unauthorized"
					},
					"404": {
						"description": "requested object not found"
					},
					"500": {
						"description": "internal server error"
					}
				},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/JamParameters.ID"
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"cookieAuth": {
				"type": "apiKey",
				"in": "cookie",
				"name": "jam.sid"
			},
			"bearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			}
		},
		"schemas": {
			"Jam.Ping": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string"
					}
				},
				"required": [
					"version"
				]
			},
			"Jam.Session": {
				"type": "object",
				"properties": {
					"version": {
						"type": "string"
					},
					"user": {
						"$ref": "#/components/schemas/Jam.SessionUser"
					},
					"jwt": {
						"type": "string"
					},
					"allowedCookieDomains": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"allowedCookieDomains",
					"version"
				]
			},
			"Jam.SessionUser": {
				"type": "object",
				"properties": {
					"roles": {
						"$ref": "#/components/schemas/Jam.Roles"
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"created",
					"id",
					"name",
					"roles"
				]
			},
			"Jam.Roles": {
				"type": "object",
				"properties": {
					"stream": {
						"type": "boolean"
					},
					"upload": {
						"type": "boolean"
					},
					"podcast": {
						"type": "boolean"
					},
					"admin": {
						"type": "boolean"
					}
				}
			},
			"Jam.State": {
				"type": "object",
				"properties": {
					"played": {
						"type": "number"
					},
					"lastplayed": {
						"type": "number"
					},
					"faved": {
						"type": "number"
					},
					"rated": {
						"type": "number"
					}
				}
			},
			"LastFM.Result": {
				"type": "object",
				"properties": {
					"similartracks": {
						"$ref": "#/components/schemas/LastFM.SimilarTracks"
					},
					"toptracks": {
						"$ref": "#/components/schemas/LastFM.TopTracks"
					},
					"artist": {
						"$ref": "#/components/schemas/LastFM.Artist"
					},
					"album": {
						"$ref": "#/components/schemas/LastFM.Album"
					},
					"track": {
						"$ref": "#/components/schemas/LastFM.Track"
					}
				}
			},
			"LastFM.SimilarTracks": {
				"type": "object",
				"properties": {
					"track": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Track"
						}
					},
					"artist": {
						"type": "string"
					}
				},
				"required": [
					"artist",
					"track"
				]
			},
			"LastFM.Track": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"duration": {
						"type": "string"
					},
					"playcount": {
						"type": "string"
					},
					"mbid": {
						"type": "string"
					},
					"match": {
						"type": "string"
					},
					"rank": {
						"type": "string"
					},
					"streamable": {
						"$ref": "#/components/schemas/LastFM.Streamable"
					},
					"artist": {
						"$ref": "#/components/schemas/LastFM.ArtistInfo"
					},
					"image": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Image"
						}
					}
				},
				"required": [
					"artist",
					"duration",
					"image",
					"match",
					"mbid",
					"name",
					"playcount",
					"rank",
					"streamable",
					"url"
				]
			},
			"LastFM.Streamable": {
				"type": "object",
				"properties": {
					"sample": {
						"type": "string"
					},
					"fulltrack": {
						"type": "string"
					}
				},
				"required": [
					"fulltrack",
					"sample"
				]
			},
			"LastFM.ArtistInfo": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"mbid": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"mbid",
					"name",
					"url"
				]
			},
			"LastFM.Image": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string"
					},
					"size": {
						"type": "string"
					}
				},
				"required": [
					"size",
					"url"
				]
			},
			"LastFM.TopTracks": {
				"type": "object",
				"properties": {
					"track": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.TopTrack"
						}
					},
					"artist": {
						"type": "string"
					}
				},
				"required": [
					"artist",
					"track"
				]
			},
			"LastFM.TopTrack": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"mbid": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"streamable": {
						"type": "string"
					},
					"playcount": {
						"type": "number"
					},
					"listeners": {
						"type": "number"
					},
					"image": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Image"
						}
					},
					"artist": {
						"$ref": "#/components/schemas/LastFM.ArtistInfo"
					},
					"rank": {
						"type": "string"
					}
				},
				"required": [
					"artist",
					"image",
					"listeners",
					"mbid",
					"name",
					"playcount",
					"rank",
					"streamable",
					"url"
				]
			},
			"LastFM.Artist": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"mbid": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"image": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Image"
						}
					},
					"streamable": {
						"type": "string"
					},
					"ontour": {
						"type": "string"
					},
					"stats": {
						"$ref": "#/components/schemas/LastFM.Stats"
					},
					"tags": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Tag"
						}
					},
					"bio": {
						"$ref": "#/components/schemas/LastFM.Biography"
					},
					"similar": {
						"$ref": "#/components/schemas/LastFM.SimilarArtists"
					}
				},
				"required": [
					"image",
					"mbid",
					"name",
					"ontour",
					"streamable",
					"tags",
					"url"
				]
			},
			"LastFM.Stats": {
				"type": "object",
				"properties": {
					"listeners": {
						"type": "string"
					},
					"playcount": {
						"type": "string"
					}
				},
				"required": [
					"listeners",
					"playcount"
				]
			},
			"LastFM.Tag": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"url"
				]
			},
			"LastFM.Biography": {
				"type": "object",
				"properties": {
					"published": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"content": {
						"type": "string"
					},
					"links": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Link"
						}
					}
				},
				"required": [
					"content",
					"published",
					"summary"
				]
			},
			"LastFM.Link": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string"
					},
					"rel": {
						"type": "string"
					},
					"href": {
						"type": "string"
					}
				},
				"required": [
					"href",
					"rel",
					"url"
				]
			},
			"LastFM.SimilarArtists": {
				"type": "object",
				"properties": {
					"artist": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.SimilarArtist"
						}
					}
				}
			},
			"LastFM.SimilarArtist": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"image": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Image"
						}
					}
				},
				"required": [
					"image",
					"name",
					"url"
				]
			},
			"LastFM.Album": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"artist": {
						"type": "string"
					},
					"mbid": {
						"type": "string"
					},
					"url": {
						"type": "string"
					},
					"image": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Image"
						}
					},
					"listeners": {
						"type": "string"
					},
					"playcount": {
						"type": "string"
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Track"
						}
					},
					"tags": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/LastFM.Tag"
						}
					},
					"wiki": {
						"$ref": "#/components/schemas/LastFM.Wiki"
					}
				},
				"required": [
					"artist",
					"image",
					"listeners",
					"mbid",
					"name",
					"playcount",
					"tracks",
					"url"
				]
			},
			"LastFM.Wiki": {
				"type": "object",
				"properties": {
					"published": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"content": {
						"type": "string"
					}
				},
				"required": [
					"content",
					"published",
					"summary"
				]
			},
			"JamParameters.LastFMLookupType": {
				"enum": [
					"album",
					"album-toptracks",
					"artist",
					"artist-toptracks",
					"track",
					"track-similar"
				],
				"type": "string"
			},
			"Acoustid.Result": {
				"type": "object",
				"properties": {
					"recordings": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Recording"
						}
					},
					"score": {
						"type": "number"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"recordings",
					"score"
				]
			},
			"Acoustid.Recording": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"sources": {
						"type": "number"
					},
					"artists": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Artist"
						}
					},
					"duration": {
						"type": "number"
					},
					"releasegroups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Releasegroup"
						}
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"artists",
					"duration",
					"id",
					"releasegroups",
					"sources",
					"title"
				]
			},
			"Acoustid.Artist": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"Acoustid.Releasegroup": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"releases": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Release"
						}
					},
					"title": {
						"type": "string"
					},
					"secondarytypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"type": {
						"type": "string"
					},
					"artists": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Artist"
						}
					}
				},
				"required": [
					"artists",
					"id",
					"releases",
					"secondarytypes",
					"title",
					"type"
				]
			},
			"Acoustid.Release": {
				"type": "object",
				"properties": {
					"mediums": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Medium"
						}
					},
					"id": {
						"type": "string"
					},
					"track_count": {
						"type": "number"
					},
					"medium_count": {
						"type": "number"
					},
					"releaseevents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Releaseevent"
						}
					},
					"country": {
						"type": "string"
					},
					"date": {
						"$ref": "#/components/schemas/Acoustid.AcousticDate"
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"country",
					"date",
					"id",
					"medium_count",
					"mediums",
					"releaseevents",
					"title",
					"track_count"
				]
			},
			"Acoustid.Medium": {
				"type": "object",
				"properties": {
					"position": {
						"type": "number"
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Track"
						}
					},
					"track_count": {
						"type": "number"
					},
					"format": {
						"type": "string"
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"format",
					"position",
					"title",
					"track_count",
					"tracks"
				]
			},
			"Acoustid.Track": {
				"type": "object",
				"properties": {
					"position": {
						"type": "number"
					},
					"artists": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Acoustid.Artist"
						}
					},
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					}
				},
				"required": [
					"artists",
					"id",
					"position",
					"title"
				]
			},
			"Acoustid.Releaseevent": {
				"type": "object",
				"properties": {
					"date": {
						"$ref": "#/components/schemas/Acoustid.AcousticDate"
					},
					"country": {
						"type": "string"
					}
				},
				"required": [
					"country",
					"date"
				]
			},
			"Acoustid.AcousticDate": {
				"type": "object",
				"properties": {
					"month": {
						"type": "number"
					},
					"year": {
						"type": "number"
					},
					"day": {
						"type": "number"
					}
				},
				"required": [
					"month",
					"year"
				]
			},
			"MusicBrainz.Response": {
				"type": "object",
				"properties": {
					"release": {
						"$ref": "#/components/schemas/MusicBrainz.Release"
					},
					"releases": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Release"
						}
					},
					"releaseGroup": {
						"$ref": "#/components/schemas/MusicBrainz.ReleaseGroup"
					},
					"releaseGroups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ReleaseGroup"
						}
					},
					"recording": {
						"$ref": "#/components/schemas/MusicBrainz.Recording"
					},
					"recordings": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Recording"
						}
					},
					"count": {
						"type": "number"
					},
					"offset": {
						"type": "number"
					},
					"created": {
						"type": "string"
					}
				}
			},
			"MusicBrainz.Release": {
				"type": "object",
				"properties": {
					"media": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ReleaseMedia"
						}
					},
					"score": {
						"type": "number"
					},
					"count": {
						"type": "number"
					},
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"sortName": {
						"type": "string"
					},
					"status": {
						"type": "string"
					},
					"statusId": {
						"type": "string"
					},
					"date": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"packaging": {
						"type": "string"
					},
					"packagingId": {
						"type": "string"
					},
					"disambiguation": {
						"type": "string"
					},
					"annotation": {
						"type": "string"
					},
					"quality": {
						"type": "string"
					},
					"barcode": {
						"type": "string"
					},
					"asin": {
						"type": "string"
					},
					"textRepresentation": {
						"type": "object",
						"properties": {
							"language": {
								"type": "string"
							},
							"script": {
								"type": "string"
							}
						},
						"required": [
							"language",
							"script"
						]
					},
					"trackCount": {
						"type": "number"
					},
					"artistCredit": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ArtistCredit"
						}
					},
					"releaseGroup": {
						"$ref": "#/components/schemas/MusicBrainz.ReleaseGroupBase"
					},
					"labelInfo": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Label"
						}
					},
					"tags": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Tag"
						}
					},
					"releaseEvents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ReleaseEvent"
						}
					},
					"coverArtArchive": {
						"type": "object",
						"properties": {
							"front": {
								"type": "boolean"
							},
							"back": {
								"type": "boolean"
							},
							"darkened": {
								"type": "boolean"
							},
							"artwork": {
								"type": "boolean"
							},
							"count": {
								"type": "number"
							}
						},
						"required": [
							"artwork",
							"back",
							"count",
							"darkened",
							"front"
						]
					}
				},
				"required": [
					"artistCredit",
					"id",
					"labelInfo",
					"media",
					"releaseEvents",
					"releaseGroup",
					"sortName",
					"status",
					"textRepresentation",
					"title",
					"trackCount"
				]
			},
			"MusicBrainz.ReleaseMedia": {
				"type": "object",
				"properties": {
					"format": {
						"type": "string"
					},
					"formatId": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"discCount": {
						"type": "number"
					},
					"trackCount": {
						"type": "number"
					},
					"position": {
						"type": "number"
					},
					"trackOffset": {
						"type": "number"
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ReleaseTrack"
						}
					},
					"discs": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Disc"
						}
					}
				},
				"required": [
					"discCount",
					"format",
					"position",
					"trackCount",
					"trackOffset"
				]
			},
			"MusicBrainz.ReleaseTrack": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"position": {
						"type": "number"
					},
					"length": {
						"type": "number"
					},
					"number": {
						"type": "string"
					},
					"recording": {
						"$ref": "#/components/schemas/MusicBrainz.RecordingBase"
					},
					"artistCredit": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ArtistCredit"
						}
					}
				},
				"required": [
					"id",
					"length",
					"number",
					"position",
					"title"
				]
			},
			"MusicBrainz.RecordingBase": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"disambiguation": {
						"type": "string"
					},
					"length": {
						"type": "number"
					},
					"video": {
						"type": "boolean"
					},
					"rating": {
						"$ref": "#/components/schemas/MusicBrainz.Rating"
					},
					"aliases": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Alias"
						}
					},
					"artistCredit": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ArtistCredit"
						}
					},
					"isrcs": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"disambiguation",
					"id",
					"length",
					"title",
					"video"
				]
			},
			"MusicBrainz.Rating": {
				"type": "object",
				"properties": {
					"votesCount": {
						"type": "number"
					},
					"value": {
						"type": "number"
					}
				},
				"required": [
					"value",
					"votesCount"
				]
			},
			"MusicBrainz.Alias": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"sortName": {
						"type": "string"
					},
					"locale": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"typeId": {
						"type": "string"
					},
					"primary": {
						"type": "string"
					},
					"beginDate": {
						"type": "string"
					},
					"endDate": {
						"type": "string"
					},
					"ended": {
						"type": "boolean"
					}
				},
				"required": [
					"ended",
					"name"
				]
			},
			"MusicBrainz.ArtistCredit": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"joinphrase": {
						"type": "string"
					},
					"artist": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"sortName": {
								"type": "string"
							},
							"disambiguation": {
								"type": "string"
							},
							"aliases": {
								"type": "array",
								"items": {
									"$ref": "#/components/schemas/MusicBrainz.Alias"
								}
							}
						},
						"required": [
							"aliases",
							"disambiguation",
							"id",
							"name",
							"sortName"
						]
					}
				},
				"required": [
					"artist",
					"joinphrase",
					"name"
				]
			},
			"MusicBrainz.Disc": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"sectors": {
						"type": "number"
					},
					"offsetCount": {
						"type": "number"
					},
					"offsets": {
						"type": "array",
						"items": {
							"type": "number"
						}
					}
				},
				"required": [
					"id",
					"offsetCount",
					"offsets",
					"sectors"
				]
			},
			"MusicBrainz.ReleaseGroupBase": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"disambiguation": {
						"type": "string"
					},
					"firstReleaseDate": {
						"type": "string"
					},
					"primaryType": {
						"type": "string"
					},
					"primaryTypeId": {
						"type": "string"
					},
					"secondaryTypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"secondaryTypeIds": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"rating": {
						"$ref": "#/components/schemas/MusicBrainz.Rating"
					},
					"artistCredit": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ArtistCredit"
						}
					},
					"tags": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Tag"
						}
					}
				},
				"required": [
					"id",
					"primaryType",
					"title"
				]
			},
			"MusicBrainz.Tag": {
				"type": "object",
				"properties": {
					"count": {
						"type": "number"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"count",
					"name"
				]
			},
			"MusicBrainz.Label": {
				"type": "object",
				"properties": {
					"catalogNumber": {
						"type": "string"
					},
					"label": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"disambiguation": {
								"type": "string"
							},
							"labelCode": {
								"type": "string"
							},
							"sortName": {
								"type": "string"
							}
						},
						"required": [
							"id",
							"name"
						]
					},
					"aliases": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"name": {
									"type": "string"
								},
								"sortName": {
									"type": "string"
								},
								"ended": {
									"type": "boolean"
								}
							},
							"required": [
								"ended",
								"name",
								"sortName"
							]
						}
					}
				},
				"required": [
					"aliases",
					"catalogNumber",
					"label"
				]
			},
			"MusicBrainz.ReleaseEvent": {
				"type": "object",
				"properties": {
					"date": {
						"type": "string"
					},
					"area": {
						"type": "object",
						"properties": {
							"id": {
								"type": "string"
							},
							"name": {
								"type": "string"
							},
							"sortName": {
								"type": "string"
							},
							"disambiguation": {
								"type": "string"
							},
							"iso31661Codes": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"required": [
							"id",
							"iso31661Codes",
							"name",
							"sortName"
						]
					}
				},
				"required": [
					"area",
					"date"
				]
			},
			"MusicBrainz.ReleaseGroup": {
				"type": "object",
				"properties": {
					"releases": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Release"
						}
					},
					"score": {
						"type": "number"
					},
					"count": {
						"type": "number"
					},
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"disambiguation": {
						"type": "string"
					},
					"firstReleaseDate": {
						"type": "string"
					},
					"primaryType": {
						"type": "string"
					},
					"primaryTypeId": {
						"type": "string"
					},
					"secondaryTypes": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"secondaryTypeIds": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"rating": {
						"$ref": "#/components/schemas/MusicBrainz.Rating"
					},
					"artistCredit": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ArtistCredit"
						}
					},
					"tags": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Tag"
						}
					}
				},
				"required": [
					"id",
					"primaryType",
					"title"
				]
			},
			"MusicBrainz.Recording": {
				"type": "object",
				"properties": {
					"releases": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Release"
						}
					},
					"score": {
						"type": "number"
					},
					"count": {
						"type": "number"
					},
					"id": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"disambiguation": {
						"type": "string"
					},
					"length": {
						"type": "number"
					},
					"video": {
						"type": "boolean"
					},
					"rating": {
						"$ref": "#/components/schemas/MusicBrainz.Rating"
					},
					"aliases": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Alias"
						}
					},
					"artistCredit": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.ArtistCredit"
						}
					},
					"isrcs": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"disambiguation",
					"id",
					"length",
					"title",
					"video"
				]
			},
			"JamParameters.MusicBrainzLookupType": {
				"enum": [
					"area",
					"artist",
					"collection",
					"event",
					"instrument",
					"label",
					"place",
					"recording",
					"release",
					"release-group",
					"series",
					"url",
					"work"
				],
				"type": "string"
			},
			"JamParameters.MusicBrainzSearchType": {
				"enum": [
					"area",
					"artist",
					"label",
					"recording",
					"release",
					"release-group",
					"work"
				],
				"type": "string"
			},
			"AcousticBrainz.Response": {
				"type": "object",
				"properties": {
					"highlevel": {
						"$ref": "#/components/schemas/AcousticBrainz.HighLevel"
					},
					"metadata": {
						"$ref": "#/components/schemas/AcousticBrainz.MetaData"
					}
				}
			},
			"AcousticBrainz.HighLevel": {
				"type": "object",
				"additionalProperties": {
					"$ref": "#/components/schemas/AcousticBrainz.HighLevelSection"
				}
			},
			"AcousticBrainz.MetaData": {
				"type": "object",
				"properties": {
					"audio_properties": {
						"type": "object",
						"properties": {
							"analysis_sample_rate": {
								"type": "number"
							},
							"bit_rate": {
								"type": "number"
							},
							"codec": {
								"type": "string"
							},
							"downmix": {
								"type": "string"
							},
							"equal_loudness": {
								"type": "number"
							},
							"length": {
								"type": "number"
							},
							"lossless": {
								"type": "number"
							},
							"md5_encoded": {
								"type": "string"
							},
							"replay_gain": {
								"type": "number"
							}
						},
						"required": [
							"analysis_sample_rate",
							"bit_rate",
							"codec",
							"downmix",
							"equal_loudness",
							"length",
							"lossless",
							"md5_encoded",
							"replay_gain"
						]
					},
					"tags": {
						"type": "object",
						"properties": {
							"acoustid_id": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"album": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"albumartist": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"albumartistsort": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"artist": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"artists": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"artistsort": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"asin": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"barcode": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"catalognumber": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"composer": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"composersort": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"date": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"discnumber": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"discsubtitle": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"disctotal": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"engineer": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"file_name": {
								"type": "string"
							},
							"isrc": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"label": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"language": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"lyricist": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"media": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"mixer": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"musicbrainz_albumartistid": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"musicbrainz_albumid": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"musicbrainz_artistid": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"musicbrainz_recordingid": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"musicbrainz_releasegroupid": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"musicbrainz_releasetrackid": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"musicbrainz_workid": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"originaldate": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"performer": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"producer": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"releasecountry": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"releasestatus": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"releasetype": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"script": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"title": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"totaldiscs": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"totaltracks": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"tracknumber": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"tracktotal": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"work": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						},
						"required": [
							"acoustid_id",
							"album",
							"albumartist",
							"albumartistsort",
							"artist",
							"artists",
							"artistsort",
							"asin",
							"barcode",
							"catalognumber",
							"composer",
							"composersort",
							"date",
							"discnumber",
							"discsubtitle",
							"disctotal",
							"engineer",
							"file_name",
							"isrc",
							"label",
							"language",
							"lyricist",
							"media",
							"mixer",
							"musicbrainz_albumartistid",
							"musicbrainz_albumid",
							"musicbrainz_artistid",
							"musicbrainz_recordingid",
							"musicbrainz_releasegroupid",
							"musicbrainz_releasetrackid",
							"musicbrainz_workid",
							"originaldate",
							"performer",
							"producer",
							"releasecountry",
							"releasestatus",
							"releasetype",
							"script",
							"title",
							"totaldiscs",
							"totaltracks",
							"tracknumber",
							"tracktotal",
							"work"
						]
					},
					"version": {
						"type": "object",
						"properties": {
							"highlevel": {
								"$ref": "#/components/schemas/AcousticBrainz.Version"
							},
							"lowlevel": {
								"$ref": "#/components/schemas/AcousticBrainz.Version"
							}
						},
						"required": [
							"highlevel",
							"lowlevel"
						]
					}
				},
				"required": [
					"audio_properties",
					"tags",
					"version"
				]
			},
			"CoverArtArchive.Response": {
				"type": "object",
				"properties": {
					"images": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/CoverArtArchive.Image"
						}
					},
					"release": {
						"type": "string"
					}
				},
				"required": [
					"images"
				]
			},
			"CoverArtArchive.Image": {
				"type": "object",
				"properties": {
					"types": {
						"type": "array",
						"items": {
							"enum": [
								"Back",
								"Booklet",
								"Front",
								"Liner",
								"Medium",
								"Obi",
								"Other",
								"Poster",
								"Raw",
								"Spine",
								"Sticker",
								"Track",
								"Tray",
								"Unedited",
								"Watermark"
							],
							"type": "string"
						}
					},
					"front": {
						"type": "boolean"
					},
					"back": {
						"type": "boolean"
					},
					"edit": {
						"type": "number"
					},
					"image": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					},
					"approved": {
						"type": "boolean"
					},
					"id": {
						"type": "string"
					},
					"thumbnails": {
						"type": "object",
						"properties": {
							"250": {
								"type": "string"
							},
							"500": {
								"type": "string"
							},
							"1200": {
								"type": "string"
							},
							"small": {
								"type": "string"
							},
							"large": {
								"type": "string"
							}
						},
						"required": [
							"1200",
							"250",
							"500",
							"large",
							"small"
						]
					}
				},
				"required": [
					"approved",
					"back",
					"comment",
					"edit",
					"front",
					"id",
					"image",
					"thumbnails",
					"types"
				]
			},
			"JamParameters.CoverArtArchiveLookupType": {
				"enum": [
					"release",
					"release-group"
				],
				"type": "string"
			},
			"Jam.AutoComplete": {
				"type": "object",
				"properties": {
					"tracks": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							},
							"required": [
								"id",
								"name"
							]
						}
					},
					"artists": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							},
							"required": [
								"id",
								"name"
							]
						}
					},
					"albums": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							},
							"required": [
								"id",
								"name"
							]
						}
					},
					"folders": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							},
							"required": [
								"id",
								"name"
							]
						}
					},
					"playlists": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							},
							"required": [
								"id",
								"name"
							]
						}
					},
					"podcasts": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							},
							"required": [
								"id",
								"name"
							]
						}
					},
					"episodes": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"id": {
									"type": "string"
								},
								"name": {
									"type": "string"
								}
							},
							"required": [
								"id",
								"name"
							]
						}
					}
				}
			},
			"Jam.Genre": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"trackCount": {
						"type": "number"
					},
					"albumCount": {
						"type": "number"
					},
					"artistCount": {
						"type": "number"
					}
				},
				"required": [
					"albumCount",
					"artistCount",
					"name",
					"trackCount"
				]
			},
			"Jam.Stats": {
				"type": "object",
				"properties": {
					"rootID": {
						"type": "string"
					},
					"trackCount": {
						"type": "number"
					},
					"folderCount": {
						"type": "number"
					},
					"artistCount": {
						"type": "number"
					},
					"albumCount": {
						"type": "number"
					}
				},
				"required": [
					"albumCount",
					"artistCount",
					"folderCount",
					"trackCount"
				]
			},
			"Jam.NowPlaying": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"minutesAgo": {
						"type": "number"
					},
					"track": {
						"$ref": "#/components/schemas/Jam.Track"
					}
				},
				"required": [
					"minutesAgo",
					"username"
				]
			},
			"Jam.Track": {
				"type": "object",
				"properties": {
					"duration": {
						"type": "number"
					},
					"tag": {
						"$ref": "#/components/schemas/Jam.TrackTag"
					},
					"tagID3": {
						"$ref": "#/components/schemas/Jam.ID3Tag"
					},
					"media": {
						"$ref": "#/components/schemas/Jam.TrackMedia"
					},
					"parentID": {
						"type": "string"
					},
					"artistID": {
						"type": "string"
					},
					"albumID": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"created",
					"duration",
					"id",
					"name",
					"parentID"
				]
			},
			"Jam.TrackTag": {
				"type": "object",
				"properties": {
					"title": {
						"type": "string"
					},
					"album": {
						"type": "string"
					},
					"artist": {
						"type": "string"
					},
					"genre": {
						"type": "string"
					},
					"year": {
						"type": "number"
					},
					"trackNr": {
						"type": "number"
					},
					"musicbrainz": {
						"$ref": "#/components/schemas/Jam.TrackMBTag"
					}
				}
			},
			"Jam.TrackMBTag": {
				"type": "object",
				"properties": {
					"trackID": {
						"type": "string"
					},
					"recordingID": {
						"type": "string"
					},
					"releaseTrackID": {
						"type": "string"
					},
					"releaseGroupID": {
						"type": "string"
					},
					"releaseID": {
						"type": "string"
					},
					"artistID": {
						"type": "string"
					}
				}
			},
			"Jam.ID3Tag": {
				"type": "object",
				"properties": {
					"version": {
						"type": "number"
					},
					"frames": {
						"$ref": "#/components/schemas/ID3v2FrameValues.Frames"
					}
				},
				"required": [
					"frames",
					"version"
				]
			},
			"ID3v2FrameValues.Frames": {
				"type": "object",
				"additionalProperties": {
					"type": "array",
					"items": {}
				},
				"properties": {
					"AENC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.AudioEncryption"
						}
					},
					"APIC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Pic"
						}
					},
					"ASPI": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"BUF": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"CDM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"CHAP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Chapter"
						}
					},
					"CM1": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"CNT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Number"
						}
					},
					"COM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.LangDescText"
						}
					},
					"COMM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.LangDescText"
						}
					},
					"COMR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"CRA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.AudioEncryption"
						}
					},
					"CRM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"CTOC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.ChapterToc"
						}
					},
					"ENCR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"EQU": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"EQUA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"ETC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.EventTimingCodes"
						}
					},
					"ETCO": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.EventTimingCodes"
						}
					},
					"GEO": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.GEOB"
						}
					},
					"GEOB": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.GEOB"
						}
					},
					"GRID": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"IPL": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.TextList"
						}
					},
					"IPLS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.TextList"
						}
					},
					"LINK": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Link"
						}
					},
					"LNK": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Link"
						}
					},
					"MCDI": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"MLL": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"MLLT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"NCO": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"NCON": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"OWNE": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"PCNT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Number"
						}
					},
					"PCS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Number"
						}
					},
					"PCST": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Number"
						}
					},
					"PIC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Pic"
						}
					},
					"POP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Popularimeter"
						}
					},
					"POPM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Popularimeter"
						}
					},
					"POSS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"PRI": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.IdBin"
						}
					},
					"PRIV": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.IdBin"
						}
					},
					"RBUF": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"REV": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"RGAD": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.ReplayGainAdjustment"
						}
					},
					"RVA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.RVA"
						}
					},
					"RVA2": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.RVA2"
						}
					},
					"RVAD": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.RVA"
						}
					},
					"RVRB": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"SEEK": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"SIGN": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"SLT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.SynchronisedLyricsEvent"
						}
					},
					"STC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"SYLT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.SynchronisedLyrics"
						}
					},
					"SYTC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"TAL": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TALB": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TBP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TBPM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TCM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TCMP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bool"
						}
					},
					"TCO": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TCOM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TCON": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TCOP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TCP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bool"
						}
					},
					"TCR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDAT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDES": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDLY": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDOR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDEN": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDRC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDRL": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDTG": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TDY": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TEN": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TENC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TEXT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TFLT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TGID": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TID": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TIM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TIME": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TIPL": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.TextList"
						}
					},
					"TIT1": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TIT2": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TIT3": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TKE": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TKEY": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TKWD": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"TLA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TLAN": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TLE": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TLEN": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TMCL": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.TextList"
						}
					},
					"TMED": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TMOO": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TMT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOAL": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOF": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOFN": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOL": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOLY": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOPE": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TORY": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TOWN": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TP1": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TP2": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TP3": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TP4": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPB": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPE1": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPE2": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPE3": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPE4": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPOS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPRO": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TPUB": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TRC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TRCK": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TRD": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TRDA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TRK": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TRSN": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TRSO": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TS2": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSI": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSIZ": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSO2": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSOA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSOC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSOP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSOT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSST": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSRC": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TSSE": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TST": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TT1": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TT2": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TT3": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TXT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TXX": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.IdText"
						}
					},
					"TXXX": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.IdText"
						}
					},
					"TYE": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"TYER": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"UFI": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.IdAscii"
						}
					},
					"UFID": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.IdAscii"
						}
					},
					"ULT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.LangDescText"
						}
					},
					"USER": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"USLT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.LangDescText"
						}
					},
					"WAF": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WAR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WAS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WCM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WCOM": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WCOP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WCP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WFD": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"WFED": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"WOAF": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WOAR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WOAS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WORS": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WPAY": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WPB": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WPUB": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Ascii"
						}
					},
					"WXX": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.IdText"
						}
					},
					"WXXX": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.IdText"
						}
					},
					"XDOR": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"XHD3": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Bin"
						}
					},
					"XSOA": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"XSOP": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					},
					"XSOT": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.Text"
						}
					}
				}
			},
			"ID3v2FrameValues.AudioEncryption": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"previewStart": {
						"type": "number"
					},
					"previewLength": {
						"type": "number"
					},
					"bin": {
						"type": "string"
					}
				},
				"required": [
					"bin",
					"id",
					"previewLength",
					"previewStart"
				]
			},
			"ID3v2FrameValues.Pic": {
				"type": "object",
				"properties": {
					"description": {
						"type": "string"
					},
					"pictureType": {
						"type": "number"
					},
					"url": {
						"type": "string"
					},
					"bin": {
						"type": "string"
					},
					"mimeType": {
						"type": "string"
					}
				},
				"required": [
					"description",
					"pictureType"
				]
			},
			"ID3v2FrameValues.Bin": {
				"type": "object",
				"properties": {
					"bin": {
						"type": "string"
					}
				},
				"required": [
					"bin"
				]
			},
			"ID3v2FrameValues.Chapter": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"start": {
						"type": "number"
					},
					"end": {
						"type": "number"
					},
					"offset": {
						"type": "number"
					},
					"offsetEnd": {
						"type": "number"
					}
				},
				"required": [
					"end",
					"id",
					"offset",
					"offsetEnd",
					"start"
				]
			},
			"ID3v2FrameValues.Text": {
				"type": "object",
				"properties": {
					"text": {
						"type": "string"
					}
				},
				"required": [
					"text"
				]
			},
			"ID3v2FrameValues.Number": {
				"type": "object",
				"properties": {
					"num": {
						"type": "number"
					}
				},
				"required": [
					"num"
				]
			},
			"ID3v2FrameValues.LangDescText": {
				"type": "object",
				"properties": {
					"language": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"text": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"language",
					"text"
				]
			},
			"ID3v2FrameValues.ChapterToc": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"ordered": {
						"type": "boolean"
					},
					"topLevel": {
						"type": "boolean"
					},
					"children": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"children",
					"id",
					"ordered",
					"topLevel"
				]
			},
			"ID3v2FrameValues.EventTimingCodes": {
				"type": "object",
				"properties": {
					"format": {
						"type": "number"
					},
					"events": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.EventTimingCodesEvent"
						}
					}
				},
				"required": [
					"events",
					"format"
				]
			},
			"ID3v2FrameValues.EventTimingCodesEvent": {
				"type": "object",
				"properties": {
					"type": {
						"type": "number"
					},
					"timestamp": {
						"type": "number"
					}
				},
				"required": [
					"timestamp",
					"type"
				]
			},
			"ID3v2FrameValues.GEOB": {
				"type": "object",
				"properties": {
					"filename": {
						"type": "string"
					},
					"mimeType": {
						"type": "string"
					},
					"contentDescription": {
						"type": "string"
					},
					"bin": {
						"type": "string"
					}
				},
				"required": [
					"bin",
					"contentDescription",
					"filename",
					"mimeType"
				]
			},
			"ID3v2FrameValues.TextList": {
				"type": "object",
				"properties": {
					"list": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"list"
				]
			},
			"ID3v2FrameValues.Link": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"additional": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"additional",
					"id",
					"url"
				]
			},
			"ID3v2FrameValues.Popularimeter": {
				"type": "object",
				"properties": {
					"rating": {
						"type": "number"
					},
					"count": {
						"type": "number"
					},
					"email": {
						"type": "string"
					}
				},
				"required": [
					"count",
					"email",
					"rating"
				]
			},
			"ID3v2FrameValues.IdBin": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"bin": {
						"type": "string"
					}
				},
				"required": [
					"bin",
					"id"
				]
			},
			"ID3v2FrameValues.ReplayGainAdjustment": {
				"type": "object",
				"properties": {
					"peak": {
						"type": "number"
					},
					"radioAdjustment": {
						"type": "number"
					},
					"audiophileAdjustment": {
						"type": "number"
					}
				},
				"required": [
					"audiophileAdjustment",
					"peak",
					"radioAdjustment"
				]
			},
			"ID3v2FrameValues.RVA": {
				"type": "object",
				"properties": {
					"right": {
						"type": "number"
					},
					"left": {
						"type": "number"
					},
					"peakRight": {
						"type": "number"
					},
					"peakLeft": {
						"type": "number"
					},
					"rightBack": {
						"type": "number"
					},
					"leftBack": {
						"type": "number"
					},
					"peakRightBack": {
						"type": "number"
					},
					"peakLeftBack": {
						"type": "number"
					},
					"center": {
						"type": "number"
					},
					"peakCenter": {
						"type": "number"
					},
					"bass": {
						"type": "number"
					},
					"peakBass": {
						"type": "number"
					}
				},
				"required": [
					"left",
					"right"
				]
			},
			"ID3v2FrameValues.RVA2": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"channels": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.RVA2Channel"
						}
					}
				},
				"required": [
					"channels",
					"id"
				]
			},
			"ID3v2FrameValues.RVA2Channel": {
				"type": "object",
				"properties": {
					"type": {
						"type": "number"
					},
					"adjustment": {
						"type": "number"
					},
					"peak": {
						"type": "number"
					}
				},
				"required": [
					"adjustment",
					"type"
				]
			},
			"ID3v2FrameValues.SynchronisedLyricsEvent": {
				"type": "object",
				"properties": {
					"timestamp": {
						"type": "number"
					},
					"text": {
						"type": "string"
					}
				},
				"required": [
					"text",
					"timestamp"
				]
			},
			"ID3v2FrameValues.SynchronisedLyrics": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"language": {
						"type": "string"
					},
					"timestampFormat": {
						"type": "number"
					},
					"contentType": {
						"type": "number"
					},
					"events": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/ID3v2FrameValues.SynchronisedLyricsEvent"
						}
					}
				},
				"required": [
					"contentType",
					"events",
					"id",
					"language",
					"timestampFormat"
				]
			},
			"ID3v2FrameValues.Bool": {
				"type": "object",
				"properties": {
					"bool": {
						"type": "boolean"
					}
				},
				"required": [
					"bool"
				]
			},
			"ID3v2FrameValues.IdText": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"text": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"text"
				]
			},
			"ID3v2FrameValues.IdAscii": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"text": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"text"
				]
			},
			"ID3v2FrameValues.Ascii": {
				"type": "object",
				"properties": {
					"text": {
						"type": "string"
					}
				},
				"required": [
					"text"
				]
			},
			"Jam.TrackMedia": {
				"type": "object",
				"properties": {
					"bitRate": {
						"type": "number"
					},
					"format": {
						"type": "string"
					},
					"channels": {
						"type": "number"
					},
					"sampleRate": {
						"type": "number"
					}
				},
				"required": [
					"bitRate",
					"channels",
					"format",
					"sampleRate"
				]
			},
			"Jam.ChatMessage": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"userID": {
						"type": "string"
					},
					"time": {
						"type": "number"
					},
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"time",
					"userID",
					"username"
				]
			},
			"Jam.FolderIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "number"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.FolderIndexGroup"
						}
					}
				},
				"required": [
					"groups",
					"lastModified"
				]
			},
			"Jam.FolderIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.FolderIndexEntry"
						}
					}
				},
				"required": [
					"entries",
					"name"
				]
			},
			"Jam.FolderIndexEntry": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"folderID": {
						"type": "string"
					},
					"trackCount": {
						"type": "number"
					}
				},
				"required": [
					"folderID",
					"name",
					"trackCount"
				]
			},
			"Jam.Folder": {
				"type": "object",
				"properties": {
					"parentID": {
						"type": "string"
					},
					"level": {
						"type": "number"
					},
					"type": {
						"$ref": "#/components/schemas/Jam.FolderType"
					},
					"trackCount": {
						"type": "number"
					},
					"folderCount": {
						"type": "number"
					},
					"tag": {
						"$ref": "#/components/schemas/Jam.FolderTag"
					},
					"health": {
						"$ref": "#/components/schemas/Jam.FolderHealth"
					},
					"artistInfo": {
						"$ref": "#/components/schemas/Jam.ArtistFolderInfo"
					},
					"albumInfo": {
						"$ref": "#/components/schemas/Jam.AlbumInfo"
					},
					"folders": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Folder"
						}
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Track"
						}
					},
					"parents": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.FolderParent"
						}
					},
					"artworks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.ArtworkImage"
						}
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"created",
					"id",
					"level",
					"name",
					"type"
				]
			},
			"Jam.FolderType": {
				"enum": [
					"album",
					"artist",
					"collection",
					"extras",
					"multialbum",
					"unknown"
				],
				"type": "string"
			},
			"Jam.FolderTag": {
				"type": "object",
				"properties": {
					"album": {
						"type": "string"
					},
					"albumType": {
						"enum": [
							"album",
							"audiobook",
							"compilation",
							"unknown"
						],
						"type": "string"
					},
					"artist": {
						"type": "string"
					},
					"artistSort": {
						"type": "string"
					},
					"genre": {
						"type": "string"
					},
					"year": {
						"type": "number"
					},
					"musicbrainz": {
						"$ref": "#/components/schemas/Jam.FolderMBTag"
					}
				}
			},
			"Jam.FolderMBTag": {
				"type": "object",
				"properties": {
					"artistID": {
						"type": "string"
					},
					"releaseID": {
						"type": "string"
					},
					"releaseGroupID": {
						"type": "string"
					}
				}
			},
			"Jam.FolderHealth": {
				"type": "object",
				"properties": {
					"problems": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.FolderProblem"
						}
					}
				}
			},
			"Jam.FolderProblem": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"details": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"Jam.ArtistFolderInfo": {
				"type": "object",
				"properties": {
					"similar": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Folder"
						}
					},
					"description": {
						"type": "string"
					},
					"lastFmUrl": {
						"type": "string"
					},
					"smallImageUrl": {
						"type": "string"
					},
					"mediumImageUrl": {
						"type": "string"
					},
					"largeImageUrl": {
						"type": "string"
					}
				}
			},
			"Jam.AlbumInfo": {
				"type": "object",
				"properties": {
					"releases": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Release"
						}
					},
					"description": {
						"type": "string"
					},
					"lastFmUrl": {
						"type": "string"
					},
					"smallImageUrl": {
						"type": "string"
					},
					"mediumImageUrl": {
						"type": "string"
					},
					"largeImageUrl": {
						"type": "string"
					}
				}
			},
			"Jam.FolderParent": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"Jam.ArtworkImage": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"types": {
						"type": "array",
						"items": {
							"enum": [
								"artist",
								"back",
								"booklet",
								"front",
								"liner",
								"medium",
								"obi",
								"other",
								"poster",
								"raw",
								"spine",
								"sticker",
								"track",
								"tray",
								"unedited",
								"watermark"
							],
							"type": "string"
						}
					},
					"size": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"size",
					"types"
				]
			},
			"Jam.FolderChildren": {
				"type": "object",
				"properties": {
					"folders": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Folder"
						}
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Track"
						}
					}
				}
			},
			"Jam.AlbumFolderInfo": {
				"type": "object",
				"properties": {
					"releases": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/MusicBrainz.Release"
						}
					},
					"description": {
						"type": "string"
					},
					"lastFmUrl": {
						"type": "string"
					},
					"smallImageUrl": {
						"type": "string"
					},
					"mediumImageUrl": {
						"type": "string"
					},
					"largeImageUrl": {
						"type": "string"
					}
				}
			},
			"JamParameters.ListType": {
				"enum": [
					"avghighest",
					"faved",
					"frequent",
					"highest",
					"random",
					"recent"
				],
				"type": "string"
			},
			"Jam.States": {
				"type": "object",
				"additionalProperties": {
					"$ref": "#/components/schemas/Jam.State"
				}
			},
			"Jam.ID3Tags": {
				"type": "object",
				"additionalProperties": {
					"$ref": "#/components/schemas/Jam.ID3Tag"
				}
			},
			"Jam.PodcastEpisode": {
				"type": "object",
				"properties": {
					"podcastID": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/Jam.PodcastEpisodeStatusType"
					},
					"date": {
						"type": "number"
					},
					"summary": {
						"type": "string"
					},
					"guid": {
						"type": "string"
					},
					"author": {
						"type": "string"
					},
					"link": {
						"type": "string"
					},
					"errorMessage": {
						"type": "string"
					},
					"duration": {
						"type": "number"
					},
					"tag": {
						"$ref": "#/components/schemas/Jam.TrackTag"
					},
					"tagID3": {
						"$ref": "#/components/schemas/Jam.ID3Tag"
					},
					"media": {
						"$ref": "#/components/schemas/Jam.TrackMedia"
					},
					"parentID": {
						"type": "string"
					},
					"artistID": {
						"type": "string"
					},
					"albumID": {
						"type": "string"
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"created",
					"date",
					"duration",
					"id",
					"name",
					"parentID",
					"podcastID",
					"status"
				]
			},
			"Jam.PodcastEpisodeStatusType": {
				"enum": [
					"completed",
					"deleted",
					"downloading",
					"error",
					"new"
				],
				"type": "string"
			},
			"Jam.PodcastEpisodeStatus": {
				"type": "object",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/Jam.PodcastEpisodeStatusType"
					}
				},
				"required": [
					"status"
				]
			},
			"Jam.Podcast": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/Jam.PodcastStatusType"
					},
					"lastCheck": {
						"type": "number"
					},
					"errorMessage": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"episodes": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.PodcastEpisode"
						}
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"created",
					"id",
					"name",
					"status",
					"url"
				]
			},
			"Jam.PodcastStatusType": {
				"enum": [
					"completed",
					"downloading",
					"error",
					"new"
				],
				"type": "string"
			},
			"Jam.PodcastStatus": {
				"type": "object",
				"properties": {
					"status": {
						"$ref": "#/components/schemas/Jam.PodcastStatusType"
					},
					"lastCheck": {
						"type": "number"
					}
				},
				"required": [
					"status"
				]
			},
			"Jam.Radio": {
				"type": "object",
				"properties": {
					"url": {
						"type": "string"
					},
					"homepage": {
						"type": "string"
					},
					"created": {
						"type": "number"
					},
					"changed": {
						"type": "number"
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"changed",
					"created",
					"id",
					"name",
					"url"
				]
			},
			"Jam.Artist": {
				"type": "object",
				"properties": {
					"albumCount": {
						"type": "number"
					},
					"trackCount": {
						"type": "number"
					},
					"musicbrainz": {
						"type": "object",
						"properties": {
							"artistID": {
								"type": "string"
							}
						}
					},
					"albumTypes": {
						"type": "array",
						"items": {
							"enum": [
								"album",
								"audiobook",
								"compilation",
								"unknown"
							],
							"type": "string"
						}
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Track"
						}
					},
					"trackIDs": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"albumIDs": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"albums": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Album"
						}
					},
					"info": {
						"$ref": "#/components/schemas/Jam.ArtistInfo"
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"albumCount",
					"albumTypes",
					"created",
					"id",
					"name",
					"trackCount"
				]
			},
			"Jam.Album": {
				"type": "object",
				"properties": {
					"artist": {
						"type": "string"
					},
					"tag": {
						"$ref": "#/components/schemas/Jam.AlbumTag"
					},
					"albumType": {
						"$ref": "#/components/schemas/Jam.AlbumType"
					},
					"trackCount": {
						"type": "number"
					},
					"artistID": {
						"type": "string"
					},
					"trackIDs": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Track"
						}
					},
					"info": {
						"$ref": "#/components/schemas/Jam.AlbumInfo"
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"albumType",
					"artistID",
					"created",
					"id",
					"name",
					"trackCount"
				]
			},
			"Jam.AlbumTag": {
				"type": "object",
				"properties": {
					"duration": {
						"type": "number"
					},
					"created": {
						"type": "number"
					},
					"genre": {
						"type": "string"
					},
					"year": {
						"type": "number"
					},
					"musicbrainz": {
						"type": "object",
						"properties": {
							"artistID": {
								"type": "string"
							},
							"albumID": {
								"type": "string"
							}
						}
					}
				},
				"required": [
					"created",
					"duration"
				]
			},
			"Jam.AlbumType": {
				"enum": [
					"album",
					"audiobook",
					"compilation",
					"unknown"
				],
				"type": "string"
			},
			"Jam.ArtistInfo": {
				"type": "object",
				"properties": {
					"similar": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Artist"
						}
					},
					"description": {
						"type": "string"
					},
					"lastFmUrl": {
						"type": "string"
					},
					"smallImageUrl": {
						"type": "string"
					},
					"mediumImageUrl": {
						"type": "string"
					},
					"largeImageUrl": {
						"type": "string"
					}
				}
			},
			"Jam.ArtistIndex": {
				"type": "object",
				"properties": {
					"lastModified": {
						"type": "number"
					},
					"groups": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.ArtistIndexGroup"
						}
					}
				},
				"required": [
					"groups",
					"lastModified"
				]
			},
			"Jam.ArtistIndexGroup": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"entries": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.ArtistIndexEntry"
						}
					}
				},
				"required": [
					"entries",
					"name"
				]
			},
			"Jam.ArtistIndexEntry": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"artistID": {
						"type": "string"
					},
					"trackCount": {
						"type": "number"
					}
				},
				"required": [
					"artistID",
					"name",
					"trackCount"
				]
			},
			"Jam.Playlist": {
				"type": "object",
				"properties": {
					"userID": {
						"type": "string"
					},
					"isPublic": {
						"type": "boolean"
					},
					"comment": {
						"type": "string"
					},
					"duration": {
						"type": "number"
					},
					"trackCount": {
						"type": "number"
					},
					"changed": {
						"type": "number"
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Track"
						}
					},
					"trackIDs": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"changed",
					"created",
					"duration",
					"id",
					"isPublic",
					"name",
					"trackCount",
					"userID"
				]
			},
			"Jam.User": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					},
					"roles": {
						"$ref": "#/components/schemas/Jam.Roles"
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"created",
					"email",
					"id",
					"name",
					"roles"
				]
			},
			"Jam.PlayQueue": {
				"type": "object",
				"properties": {
					"trackIDs": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"tracks": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/Jam.Track"
						}
					},
					"currentID": {
						"type": "string"
					},
					"position": {
						"type": "number"
					},
					"changed": {
						"type": "number"
					},
					"changedBy": {
						"type": "string"
					}
				},
				"required": [
					"changed",
					"changedBy"
				]
			},
			"Jam.Root": {
				"type": "object",
				"properties": {
					"path": {
						"type": "string"
					},
					"status": {
						"$ref": "#/components/schemas/Jam.RootStatus"
					},
					"id": {
						"type": "string"
					},
					"state": {
						"$ref": "#/components/schemas/Jam.State"
					},
					"name": {
						"type": "string"
					},
					"created": {
						"type": "number"
					}
				},
				"required": [
					"created",
					"id",
					"name",
					"path",
					"status"
				]
			},
			"Jam.RootStatus": {
				"type": "object",
				"properties": {
					"lastScan": {
						"type": "number"
					},
					"error": {
						"type": "string"
					},
					"scanning": {
						"type": "boolean"
					}
				},
				"required": [
					"lastScan"
				]
			},
			"Jam.Bookmark": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"track": {
						"$ref": "#/components/schemas/Jam.Track"
					},
					"trackID": {
						"type": "string"
					},
					"position": {
						"type": "number"
					},
					"comment": {
						"type": "string"
					},
					"created": {
						"type": "number"
					},
					"changed": {
						"type": "number"
					}
				},
				"required": [
					"changed",
					"created",
					"id",
					"position",
					"trackID"
				]
			},
			"JamParameters.Login": {
				"type": "object",
				"properties": {
					"username": {
						"description": "user name",
						"type": "string"
					},
					"password": {
						"description": "password",
						"type": "string"
					},
					"client": {
						"description": "client name",
						"type": "string"
					}
				},
				"required": [
					"client",
					"password",
					"username"
				]
			},
			"JamParameters.BookmarkCreate": {
				"type": "object",
				"properties": {
					"trackID": {
						"description": "a track id",
						"type": "string"
					},
					"comment": {
						"description": "a comment",
						"type": "string"
					},
					"position": {
						"description": "the position of the bookmark (in ms)",
						"minimum": 0,
						"type": "integer"
					}
				},
				"required": [
					"position"
				]
			},
			"JamParameters.ID": {
				"type": "object",
				"properties": {
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id"
				]
			},
			"JamParameters.ChatNew": {
				"type": "object",
				"properties": {
					"message": {
						"description": "the chat message",
						"type": "string"
					}
				},
				"required": [
					"message"
				]
			},
			"JamParameters.ChatDelete": {
				"type": "object",
				"properties": {
					"time": {
						"description": "time of the post (unix time)",
						"minimum": 0,
						"type": "integer"
					}
				},
				"required": [
					"time"
				]
			},
			"JamParameters.RadioNew": {
				"type": "object",
				"properties": {
					"name": {
						"description": "radio name",
						"type": "string"
					},
					"url": {
						"description": "radio stream url",
						"type": "string"
					},
					"homepage": {
						"description": "radio homepage url",
						"type": "string"
					}
				},
				"required": [
					"name",
					"url"
				]
			},
			"JamParameters.RadioUpdate": {
				"type": "object",
				"properties": {
					"name": {
						"description": "radio name",
						"type": "string"
					},
					"url": {
						"description": "radio stream url",
						"type": "string"
					},
					"homepage": {
						"description": "radio homepage url",
						"type": "string"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id"
				]
			},
			"JamParameters.Fav": {
				"description": "Change the fav user state",
				"type": "object",
				"properties": {
					"remove": {
						"description": "add or remove the item fav",
						"default": false,
						"type": "boolean"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id"
				]
			},
			"JamParameters.Rate": {
				"description": "Change the rating user state",
				"type": "object",
				"properties": {
					"rating": {
						"description": "the rating for the item",
						"minimum": 0,
						"maximum": 5,
						"type": "integer"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id",
					"rating"
				]
			},
			"JamParameters.TagID3Update": {
				"type": "object",
				"properties": {
					"id": {
						"description": "the id of the track",
						"type": "string"
					},
					"tag": {
						"$ref": "#/components/schemas/Jam.ID3Tag",
						"description": "the id3 tag to store in the track"
					}
				},
				"required": [
					"id",
					"tag"
				]
			},
			"JamParameters.TrackEditName": {
				"description": "Rename a track file",
				"type": "object",
				"properties": {
					"name": {
						"description": "the new track file name",
						"type": "string"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"JamParameters.FolderArtworkNew": {
				"description": "Add an artwork to a folder by url",
				"type": "object",
				"properties": {
					"url": {
						"description": "url of an image",
						"type": "string"
					},
					"types": {
						"description": "types of the image",
						"type": "array",
						"items": {
							"enum": [
								"artist",
								"back",
								"booklet",
								"front",
								"liner",
								"medium",
								"obi",
								"other",
								"poster",
								"raw",
								"spine",
								"sticker",
								"track",
								"tray",
								"unedited",
								"watermark"
							],
							"type": "string"
						}
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id",
					"types",
					"url"
				]
			},
			"JamParameters.FolderEditName": {
				"description": "Rename the folder",
				"type": "object",
				"properties": {
					"name": {
						"description": "the new folder name",
						"type": "string"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				]
			},
			"JamParameters.PodcastNew": {
				"type": "object",
				"properties": {
					"url": {
						"description": "podcast feed url",
						"type": "string"
					}
				},
				"required": [
					"url"
				]
			},
			"JamParameters.PlaylistNew": {
				"type": "object",
				"properties": {
					"name": {
						"description": "name of playlist",
						"type": "string"
					},
					"comment": {
						"description": "a comment",
						"type": "string"
					},
					"isPublic": {
						"description": "set the playlist visible for other users or not",
						"type": "boolean"
					},
					"trackIDs": {
						"description": "track ids of the playlist, may include duplicates",
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"name"
				]
			},
			"JamParameters.PlaylistUpdate": {
				"type": "object",
				"properties": {
					"name": {
						"description": "name of playlist",
						"type": "string"
					},
					"comment": {
						"description": "a comment",
						"type": "string"
					},
					"isPublic": {
						"description": "set the playlist visible for other users or not",
						"type": "boolean"
					},
					"trackIDs": {
						"description": "track ids of the playlist, may include duplicates",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id"
				]
			},
			"JamParameters.PlayQueueSet": {
				"type": "object",
				"properties": {
					"trackIDs": {
						"description": "the track ids of the playqueue",
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"currentID": {
						"description": "the track id of the current playing track",
						"type": "string"
					},
					"position": {
						"description": "the position in the current playing track",
						"minimum": 0,
						"type": "integer"
					}
				},
				"required": [
					"trackIDs"
				]
			},
			"JamParameters.UserNew": {
				"type": "object",
				"properties": {
					"name": {
						"description": "name of the user",
						"type": "string"
					},
					"email": {
						"description": "email of the user",
						"type": "string"
					},
					"roleAdmin": {
						"description": "user has admin rights",
						"default": false,
						"type": "boolean"
					},
					"rolePodcast": {
						"description": "user has podcast admin rights",
						"default": false,
						"type": "boolean"
					},
					"roleStream": {
						"description": "user has streaming/download rights",
						"default": true,
						"type": "boolean"
					},
					"roleUpload": {
						"description": "user has upload rights",
						"default": false,
						"type": "boolean"
					}
				},
				"required": [
					"name"
				]
			},
			"JamParameters.UserUpdate": {
				"type": "object",
				"properties": {
					"name": {
						"description": "name of the user",
						"type": "string"
					},
					"email": {
						"description": "email of the user",
						"type": "string"
					},
					"roleAdmin": {
						"description": "user has admin rights",
						"type": "boolean"
					},
					"rolePodcast": {
						"description": "user has podcast admin rights",
						"type": "boolean"
					},
					"roleStream": {
						"description": "user has streaming/download rights",
						"type": "boolean"
					},
					"roleUpload": {
						"description": "user has upload rights",
						"type": "boolean"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id"
				]
			},
			"JamParameters.UserPasswordUpdate": {
				"type": "object",
				"properties": {
					"password": {
						"description": "new password of user",
						"type": "string"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id",
					"password"
				]
			},
			"JamParameters.UserEmailUpdate": {
				"type": "object",
				"properties": {
					"email": {
						"description": "new email of user",
						"type": "string"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"email",
					"id"
				]
			},
			"JamParameters.RootNew": {
				"type": "object",
				"properties": {
					"name": {
						"description": "name of the root",
						"type": "string"
					},
					"path": {
						"description": "absolute path of the root",
						"type": "string"
					}
				},
				"required": [
					"name",
					"path"
				]
			},
			"JamParameters.RootUpdate": {
				"type": "object",
				"properties": {
					"name": {
						"description": "name of the root",
						"type": "string"
					},
					"path": {
						"description": "absolute path of the root",
						"type": "string"
					},
					"id": {
						"description": "the item id",
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"path"
				]
			}
		}
	},
	"security": [
		{
			"cookieAuth": []
		},
		{
			"bearerAuth": []
		}
	]
}